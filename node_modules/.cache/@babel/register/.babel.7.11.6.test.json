{
  "{\"sourceRoot\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"filename\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\routes\\\\api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\routes\\api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\routes\\api.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\routes\\api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\routes\\",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Translator = require(\"../components/translator.js\");\n\nmodule.exports = function (app) {\n  var translator = new Translator();\n  app.route(\"/api/translate\").post(function (req, res) {\n    if (req.body.locale === undefined || req.body.text === undefined) {\n      return res.json({\n        error: \"Required field(s) missing\"\n      });\n    }\n\n    if (!req.body.text) {\n      return res.json({\n        error: \"No text to translate\"\n      });\n    }\n\n    var locale = req.body.locale;\n\n    if (locale === \"american-to-british\" || locale === \"british-to-american\") {\n      return res.json({\n        translation: translator.translate(req.body.text, locale, true),\n        text: req.body.text\n      });\n    } else {\n      return res.json({\n        error: \"Invalid value for locale field\"\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJUcmFuc2xhdG9yIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJ0cmFuc2xhdG9yIiwicm91dGUiLCJwb3N0IiwicmVxIiwicmVzIiwiYm9keSIsImxvY2FsZSIsInVuZGVmaW5lZCIsInRleHQiLCJqc29uIiwiZXJyb3IiLCJ0cmFuc2xhdGlvbiIsInRyYW5zbGF0ZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsNkJBQUQsQ0FBMUI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFVQyxHQUFWLEVBQWU7QUFDOUIsTUFBTUMsVUFBVSxHQUFHLElBQUlMLFVBQUosRUFBbkI7QUFFQUksRUFBQUEsR0FBRyxDQUFDRSxLQUFKLENBQVUsZ0JBQVYsRUFBNEJDLElBQTVCLENBQWlDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdDLFFBQUlELEdBQUcsQ0FBQ0UsSUFBSixDQUFTQyxNQUFULEtBQW9CQyxTQUFwQixJQUFpQ0osR0FBRyxDQUFDRSxJQUFKLENBQVNHLElBQVQsS0FBa0JELFNBQXZELEVBQWtFO0FBQ2hFLGFBQU9ILEdBQUcsQ0FBQ0ssSUFBSixDQUFTO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFULE9BQVQsQ0FBUDtBQUNEOztBQUNELFFBQUksQ0FBQ1AsR0FBRyxDQUFDRSxJQUFKLENBQVNHLElBQWQsRUFBb0I7QUFDbEIsYUFBT0osR0FBRyxDQUFDSyxJQUFKLENBQVM7QUFBRUMsUUFBQUEsS0FBSyxFQUFFO0FBQVQsT0FBVCxDQUFQO0FBQ0Q7O0FBQ0QsUUFBTUosTUFBTSxHQUFHSCxHQUFHLENBQUNFLElBQUosQ0FBU0MsTUFBeEI7O0FBQ0EsUUFBSUEsTUFBTSxLQUFLLHFCQUFYLElBQW9DQSxNQUFNLEtBQUsscUJBQW5ELEVBQTBFO0FBQ3hFLGFBQU9GLEdBQUcsQ0FBQ0ssSUFBSixDQUFTO0FBQ2RFLFFBQUFBLFdBQVcsRUFBRVgsVUFBVSxDQUFDWSxTQUFYLENBQXFCVCxHQUFHLENBQUNFLElBQUosQ0FBU0csSUFBOUIsRUFBb0NGLE1BQXBDLEVBQTRDLElBQTVDLENBREM7QUFFZEUsUUFBQUEsSUFBSSxFQUFFTCxHQUFHLENBQUNFLElBQUosQ0FBU0c7QUFGRCxPQUFULENBQVA7QUFJRCxLQUxELE1BS087QUFDTCxhQUFPSixHQUFHLENBQUNLLElBQUosQ0FBUztBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFULENBQVA7QUFDRDtBQUNGLEdBaEJEO0FBaUJELENBcEJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccmFyYWFcXE9uZURyaXZlXFxEb2N1bWVudHNcXGZyZWVjb2RlY2FtcC1wcm9qZWN0c1xcN1xcNS1hbWVyaWNhbi1icml0aXNoLXRyYW5zbGF0b3JcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5jb25zdCBUcmFuc2xhdG9yID0gcmVxdWlyZShcIi4uL2NvbXBvbmVudHMvdHJhbnNsYXRvci5qc1wiKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFwcCkge1xyXG4gIGNvbnN0IHRyYW5zbGF0b3IgPSBuZXcgVHJhbnNsYXRvcigpO1xyXG5cclxuICBhcHAucm91dGUoXCIvYXBpL3RyYW5zbGF0ZVwiKS5wb3N0KChyZXEsIHJlcykgPT4ge1xyXG4gICAgaWYgKHJlcS5ib2R5LmxvY2FsZSA9PT0gdW5kZWZpbmVkIHx8IHJlcS5ib2R5LnRleHQgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICByZXR1cm4gcmVzLmpzb24oeyBlcnJvcjogXCJSZXF1aXJlZCBmaWVsZChzKSBtaXNzaW5nXCIgfSk7XHJcbiAgICB9XHJcbiAgICBpZiAoIXJlcS5ib2R5LnRleHQpIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKHsgZXJyb3I6IFwiTm8gdGV4dCB0byB0cmFuc2xhdGVcIiB9KTtcclxuICAgIH1cclxuICAgIGNvbnN0IGxvY2FsZSA9IHJlcS5ib2R5LmxvY2FsZTtcclxuICAgIGlmIChsb2NhbGUgPT09IFwiYW1lcmljYW4tdG8tYnJpdGlzaFwiIHx8IGxvY2FsZSA9PT0gXCJicml0aXNoLXRvLWFtZXJpY2FuXCIpIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKHtcclxuICAgICAgICB0cmFuc2xhdGlvbjogdHJhbnNsYXRvci50cmFuc2xhdGUocmVxLmJvZHkudGV4dCwgbG9jYWxlLCB0cnVlKSxcclxuICAgICAgICB0ZXh0OiByZXEuYm9keS50ZXh0LFxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbih7IGVycm9yOiBcIkludmFsaWQgdmFsdWUgZm9yIGxvY2FsZSBmaWVsZFwiIH0pO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "Translator",
        "require",
        "module",
        "exports",
        "app",
        "translator",
        "route",
        "post",
        "req",
        "res",
        "body",
        "locale",
        "undefined",
        "text",
        "json",
        "error",
        "translation",
        "translate"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,6BAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAC9B,MAAMC,UAAU,GAAG,IAAIL,UAAJ,EAAnB;AAEAI,EAAAA,GAAG,CAACE,KAAJ,CAAU,gBAAV,EAA4BC,IAA5B,CAAiC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7C,QAAID,GAAG,CAACE,IAAJ,CAASC,MAAT,KAAoBC,SAApB,IAAiCJ,GAAG,CAACE,IAAJ,CAASG,IAAT,KAAkBD,SAAvD,EAAkE;AAChE,aAAOH,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD;;AACD,QAAI,CAACP,GAAG,CAACE,IAAJ,CAASG,IAAd,EAAoB;AAClB,aAAOJ,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD;;AACD,QAAMJ,MAAM,GAAGH,GAAG,CAACE,IAAJ,CAASC,MAAxB;;AACA,QAAIA,MAAM,KAAK,qBAAX,IAAoCA,MAAM,KAAK,qBAAnD,EAA0E;AACxE,aAAOF,GAAG,CAACK,IAAJ,CAAS;AACdE,QAAAA,WAAW,EAAEX,UAAU,CAACY,SAAX,CAAqBT,GAAG,CAACE,IAAJ,CAASG,IAA9B,EAAoCF,MAApC,EAA4C,IAA5C,CADC;AAEdE,QAAAA,IAAI,EAAEL,GAAG,CAACE,IAAJ,CAASG;AAFD,OAAT,CAAP;AAID,KALD,MAKO;AACL,aAAOJ,GAAG,CAACK,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD;AACF,GAhBD;AAiBD,CApBD",
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\routes\\",
      "sourcesContent": [
        "\"use strict\";\r\n\r\nconst Translator = require(\"../components/translator.js\");\r\n\r\nmodule.exports = function (app) {\r\n  const translator = new Translator();\r\n\r\n  app.route(\"/api/translate\").post((req, res) => {\r\n    if (req.body.locale === undefined || req.body.text === undefined) {\r\n      return res.json({ error: \"Required field(s) missing\" });\r\n    }\r\n    if (!req.body.text) {\r\n      return res.json({ error: \"No text to translate\" });\r\n    }\r\n    const locale = req.body.locale;\r\n    if (locale === \"american-to-british\" || locale === \"british-to-american\") {\r\n      return res.json({\r\n        translation: translator.translate(req.body.text, locale, true),\r\n        text: req.body.text,\r\n      });\r\n    } else {\r\n      return res.json({ error: \"Invalid value for locale field\" });\r\n    }\r\n  });\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1689873206630
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\components\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"filename\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\components\\\\translator.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\translator.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\translator.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\translator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
        "sourceFileName": "translator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar americanOnly = require(\"./american-only.js\");\n\nvar americanToBritishSpelling = require(\"./american-to-british-spelling.js\");\n\nvar americanToBritishTitles = require(\"./american-to-british-titles.js\");\n\nvar britishOnly = require(\"./british-only.js\");\n\nvar Translator = /*#__PURE__*/function () {\n  function Translator() {\n    _classCallCheck(this, Translator);\n  }\n\n  _createClass(Translator, [{\n    key: \"translate\",\n    value: function translate(text, locale, highlight) {\n      var translation = text;\n\n      if (locale === \"british-to-american\") {\n        translation = this.translateOneWay(britishOnly, translation, highlight);\n        translation = this.translateTitles(\"british\", translation, highlight);\n        translation = this.translateSpelling(\"british\", translation, highlight);\n        translation = this.translateTime(\"british\", translation, highlight);\n      } else {\n        translation = this.translateOneWay(americanOnly, translation, highlight);\n        translation = this.translateTitles(\"american\", translation, highlight);\n        translation = this.translateSpelling(\"american\", translation, highlight);\n        translation = this.translateTime(\"american\", translation, highlight);\n      }\n\n      if (translation === text) {\n        return \"Everything looks good to me!\";\n      }\n\n      return translation;\n    }\n  }, {\n    key: \"translateOneWay\",\n    value: function translateOneWay(locale, translation, highlight) {\n      for (var i in locale) {\n        var replacement = locale[i];\n\n        if (highlight === true) {\n          replacement = '<span class=\"highlight\">' + replacement + \"</span>\";\n        }\n\n        var regex = new RegExp(\"(?<=[^a-zA-Z-]|^)\".concat(i, \"(?=[^a-zA-Z])\"), \"ig\");\n        translation = translation.replace(regex, replacement);\n      }\n\n      return translation;\n    }\n  }, {\n    key: \"translateTitles\",\n    value: function translateTitles(from, translation, highlight) {\n      for (var i in americanToBritishTitles) {\n        var replacement = void 0,\n            word = void 0;\n\n        if (from === \"american\") {\n          word = i;\n          replacement = americanToBritishTitles[i];\n        } else {\n          word = americanToBritishTitles[i];\n          replacement = i;\n        }\n\n        if (highlight === true) {\n          replacement = '<span class=\"highlight\">' + replacement.charAt(0).toUpperCase() + replacement.slice(1) + \"</span>\";\n        } else {\n          replacement = replacement.charAt(0).toUpperCase() + replacement.slice(1);\n        }\n\n        var regex = new RegExp(\"(?<=[^a-zA-Z]|^)\".concat(word, \"(?=[^a-zA-Z])\"), \"ig\");\n        translation = translation.replace(regex, replacement);\n      }\n\n      return translation;\n    }\n  }, {\n    key: \"translateSpelling\",\n    value: function translateSpelling(from, translation, highlight) {\n      for (var i in americanToBritishSpelling) {\n        var replacement = void 0,\n            word = void 0;\n\n        if (from === \"american\") {\n          word = i;\n          replacement = americanToBritishSpelling[i];\n        } else {\n          word = americanToBritishSpelling[i];\n          replacement = i;\n        }\n\n        if (highlight === true) {\n          replacement = '<span class=\"highlight\">' + replacement + \"</span>\";\n        }\n\n        var regex = new RegExp(\"(?<=[^a-zA-Z]|^)\".concat(word, \"(?=[^a-zA-Z])\"), \"ig\");\n        translation = translation.replace(regex, replacement);\n      }\n\n      return translation;\n    }\n  }, {\n    key: \"translateTime\",\n    value: function translateTime(from, translation, highlight) {\n      var _char;\n\n      var replacement;\n\n      if (from === \"british\") {\n        _char = \".\";\n        replacement = \":\";\n      } else {\n        _char = \":\";\n        replacement = \".\";\n      }\n\n      var regex = new RegExp(\"\\\\d\\\\d?[\".concat(_char, \"]\\\\d{2}\"), \"gi\");\n      var matches = translation.match(regex);\n\n      for (var i in matches) {\n        var tempRegex = new RegExp(\"(?<=\\\\d\\\\d?)[\".concat(_char, \"](?=\\\\d{2})\"), \"gi\");\n        var temp = matches[i].replace(tempRegex, replacement);\n\n        if (highlight === true) {\n          temp = '<span class=\"highlight\">' + temp + \"</span>\";\n        }\n\n        translation = translation.replace(matches[i], temp);\n      }\n\n      return translation;\n    }\n  }]);\n\n  return Translator;\n}();\n\nmodule.exports = Translator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "translator.js"
      ],
      "names": [
        "americanOnly",
        "require",
        "americanToBritishSpelling",
        "americanToBritishTitles",
        "britishOnly",
        "Translator",
        "text",
        "locale",
        "highlight",
        "translation",
        "translateOneWay",
        "translateTitles",
        "translateSpelling",
        "translateTime",
        "i",
        "replacement",
        "regex",
        "RegExp",
        "replace",
        "from",
        "word",
        "charAt",
        "toUpperCase",
        "slice",
        "char",
        "matches",
        "match",
        "tempRegex",
        "temp",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
      "sourcesContent": [
        "const americanOnly = require(\"./american-only.js\");\r\nconst americanToBritishSpelling = require(\"./american-to-british-spelling.js\");\r\nconst americanToBritishTitles = require(\"./american-to-british-titles.js\");\r\nconst britishOnly = require(\"./british-only.js\");\r\n\r\nclass Translator {\r\n  translate(text, locale, highlight) {\r\n    let translation = text;\r\n    if (locale === \"british-to-american\") {\r\n      translation = this.translateOneWay(britishOnly, translation, highlight);\r\n      translation = this.translateTitles(\"british\", translation, highlight);\r\n      translation = this.translateSpelling(\"british\", translation, highlight);\r\n      translation = this.translateTime(\"british\", translation, highlight);\r\n    } else {\r\n      translation = this.translateOneWay(americanOnly, translation, highlight);\r\n      translation = this.translateTitles(\"american\", translation, highlight);\r\n      translation = this.translateSpelling(\"american\", translation, highlight);\r\n      translation = this.translateTime(\"american\", translation, highlight);\r\n    }\r\n    if (translation === text) {\r\n      return \"Everything looks good to me!\";\r\n    }\r\n    return translation;\r\n  }\r\n\r\n  translateOneWay(locale, translation, highlight) {\r\n    for (let i in locale) {\r\n      let replacement = locale[i];\r\n      if (highlight === true) {\r\n        replacement = '<span class=\"highlight\">' + replacement + \"</span>\";\r\n      }\r\n      let regex = new RegExp(`(?<=[^a-zA-Z-]|^)${i}(?=[^a-zA-Z])`, \"ig\");\r\n      translation = translation.replace(regex, replacement);\r\n    }\r\n    return translation;\r\n  }\r\n\r\n  translateTitles(from, translation, highlight) {\r\n    for (let i in americanToBritishTitles) {\r\n      let replacement, word;\r\n      if (from === \"american\") {\r\n        word = i;\r\n        replacement = americanToBritishTitles[i];\r\n      } else {\r\n        word = americanToBritishTitles[i];\r\n        replacement = i;\r\n      }\r\n      if (highlight === true) {\r\n        replacement =\r\n          '<span class=\"highlight\">' +\r\n          replacement.charAt(0).toUpperCase() +\r\n          replacement.slice(1) +\r\n          \"</span>\";\r\n      } else {\r\n        replacement =\r\n          replacement.charAt(0).toUpperCase() + replacement.slice(1);\r\n      }\r\n      let regex = new RegExp(`(?<=[^a-zA-Z]|^)${word}(?=[^a-zA-Z])`, \"ig\");\r\n      translation = translation.replace(regex, replacement);\r\n    }\r\n    return translation;\r\n  }\r\n\r\n  translateSpelling(from, translation, highlight) {\r\n    for (let i in americanToBritishSpelling) {\r\n      let replacement, word;\r\n      if (from === \"american\") {\r\n        word = i;\r\n        replacement = americanToBritishSpelling[i];\r\n      } else {\r\n        word = americanToBritishSpelling[i];\r\n        replacement = i;\r\n      }\r\n      if (highlight === true) {\r\n        replacement = '<span class=\"highlight\">' + replacement + \"</span>\";\r\n      }\r\n      let regex = new RegExp(`(?<=[^a-zA-Z]|^)${word}(?=[^a-zA-Z])`, \"ig\");\r\n      translation = translation.replace(regex, replacement);\r\n    }\r\n    return translation;\r\n  }\r\n\r\n  translateTime(from, translation, highlight) {\r\n    let char;\r\n    let replacement;\r\n    if (from === \"british\") {\r\n      char = \".\";\r\n      replacement = \":\";\r\n    } else {\r\n      char = \":\";\r\n      replacement = \".\";\r\n    }\r\n    let regex = new RegExp(`\\\\d\\\\d?[${char}]\\\\d{2}`, \"gi\");\r\n    let matches = translation.match(regex);\r\n    for (let i in matches) {\r\n      let tempRegex = new RegExp(`(?<=\\\\d\\\\d?)[${char}](?=\\\\d{2})`, \"gi\");\r\n      let temp = matches[i].replace(tempRegex, replacement);\r\n      if (highlight === true) {\r\n        temp = '<span class=\"highlight\">' + temp + \"</span>\";\r\n      }\r\n      translation = translation.replace(matches[i], temp);\r\n    }\r\n    return translation;\r\n  }\r\n}\r\n\r\nmodule.exports = Translator;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1689873206614
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\components\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"filename\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\components\\\\american-only.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\american-only.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\american-only.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\american-only.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
        "sourceFileName": "american-only.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  \"acclimate\": \"acclimatise\",\n  \"acetaminophen\": \"paracetamol\",\n  \"baby carriage\": \"pram\",\n  \"backhoe\": \"digger\",\n  \"band-aid\": \"Elastoplast\",\n  \"bangs\": \"fringe\",\n  \"barrette\": \"hair slide\",\n  \"baseboard\": \"skirting board\",\n  \"bedroom community\": \"dormitory town\",\n  \"blacktop\": \"tarmac\",\n  \"bleachers\": \"stands\",\n  \"blinders\": \"blinkers\",\n  \"blood sausage\": \"black pudding\",\n  \"boardwalk\": \"promenade\",\n  \"bobby pin\": \"Kirby grip\",\n  \"booger\": \"bogey\",\n  \"bookmobile\": \"mobile library\",\n  \"breadbox\": \"bread bin\",\n  \"bullhorn\": \"loudhailer\",\n  \"burglarize\": \"burgle\",\n  \"burlap\": \"hessian\",\n  \"canadian bacon\": \"back bacon\",\n  \"candy apple\": \"toffee apple\",\n  \"candied apple\": \"toffee apple\",\n  \"careen\": \"career\",\n  \"catsup\": \"ketchup\",\n  \"cell phone\": \"mobile\",\n  \"cellphone\": \"mobile\",\n  \"certified mail\": \"recorded delivery\",\n  \"chapstick\": \"lip balm\",\n  \"charge account\": \"credit account\",\n  \"checkers\": \"draughts\",\n  \"checking account\": \"current account\",\n  \"cilantro\": \"coriander\",\n  \"cleats\": \"football boots\",\n  \"condo\": \"flat\",\n  \"costume party\": \"fancy-dress party\",\n  \"cotton candy\": \"candy floss\",\n  \"counterclockwise\": \"anti-clockwise\",\n  \"coveralls\": \"overalls\",\n  \"diaper\": \"nappy\",\n  \"discombobulated\": \"discomposed\",\n  \"dish towel\": \"tea towel\",\n  \"dishrag\": \"dishcloth\",\n  \"dish soap\": \"washing-up liquid\",\n  \"dishwashing liquid\": \"washing-up liquid\",\n  \"district attorney\": \"Crown Prosecutor\",\n  \"divided highway\": \"dual carriageway\",\n  \"doohickey\": \"wotsit\",\n  \"downspout\": \"drainpipe\",\n  \"drape\": \"curtain\",\n  \"drapes\": \"curtain\",\n  \"driver license\": \"driving licence\",\n  \"driver's license\": \"driving licence\",\n  \"drugstore\": \"chemist\",\n  \"drywall\": \"plasterboard\",\n  \"dumpster\": \"skip\",\n  \"eggplant\": \"aubergine\",\n  \"emergency brake\": \"handbrake\",\n  \"eminent domain\": \"compulsory purchase\",\n  \"envision\": \"to envisage\",\n  \"eraser\": \"rubber\",\n  \"expressway\": \"motorway\",\n  \"fanny pack\": \"bum bag\",\n  \"faucet\": \"tap\",\n  \"flashlight\": \"torch\",\n  \"flatware\": \"cutlery\",\n  \"freeway\": \"motorway\",\n  \"fries\": \"chips\",\n  \"french fries\": \"chips\",\n  \"french press\": \"cafetière\",\n  \"freshman\": \"fresher\",\n  \"front desk\": \"reception\",\n  \"frosting\": \"icing\",\n  \"garbage can\": \"dustbin\",\n  \"gasoline\": \"petrol\",\n  \"general delivery\": \"poste restante\",\n  \"grifter\": \"con man\",\n  \"ground beef\": \"mince\",\n  \"grunt\": \"squaddie\",\n  \"hard candy\": \"boiled sweets\",\n  \"heavy cream\": \"double cream\",\n  \"jackhammer\": \"pneumatic drill\",\n  \"jell-o\": \"jelly\",\n  \"ladybug\": \"ladybird\",\n  \"laundromat\": \"laundrette\",\n  \"learner's permit\": \"provisional driving licence\",\n  \"license plate\": \"number plate\",\n  \"license tag\": \"number plate\",\n  \"mail carrier\": \"postal worker\",\n  \"mailman\": \"postman\",\n  \"main street\": \"high street\",\n  \"mama\": \"mam\",\n  \"mamma\": \"mam\",\n  \"momma\": \"mam\",\n  \"mom\": \"mum\",\n  \"mass transit\": \"public transport\",\n  \"math\": \"maths\",\n  \"mohawk\": \"mohican\",\n  \"mortician\": \"undertaker\",\n  \"narc\": \"grass\",\n  \"nightcrawler\": \"earthworm\",\n  \"nightstick\": \"truncheon\",\n  \"nix\": \"cancel\",\n  \"obligated\": \"obliged\",\n  \"off-the-rack\": \"off-the-peg\",\n  \"oftentimes\": \"often\",\n  \"overpass\": \"flyover\",\n  \"pantyhose\": \"tights\",\n  \"paper route\": \"paper round\",\n  \"parking garage\": \"car park\",\n  \"parking lot\": \"car park\",\n  \"penitentiary\": \"prison\",\n  \"plastic wrap\": \"cling-film\",\n  \"play hooky\": \"bunk off\",\n  \"plexiglas\": \"Perspex\",\n  \"popsicle\": \"ice lolly\",\n  \"powdered sugar\": \"icing sugar\",\n  \"pre-authorized payment\": \"direct debit\",\n  \"pre-authorized withdrawal\": \"direct debit\",\n  \"public holiday\": \"bank holiday\",\n  \"rappel\": \"abseil\",\n  \"realtor\": \"estate agent\",\n  \"rif\": \"redundancy\",\n  \"rif'd\": \"made redundant\",\n  \"rowhouse\": \"terraced house\",\n  \"rube goldberg device\": \"Heath Robinson device\",\n  \"rube goldberg machine\": \"Heath Robinson device\",\n  \"rugola\": \"rocket\",\n  \"rutabaga\": \"swede\",\n  \"rv\": \"caravan\",\n  \"rv park\": \"caravan site\",\n  \"saran wrap\": \"cling film\",\n  \"scads\": \"great amounts\",\n  \"scallion\": \"spring onion\",\n  \"scalper\": \"ticket tout\",\n  \"scotch tape\": \"Sellotape\",\n  \"scuttlebutt\": \"rumour\",\n  \"sedan automobile\": \"saloon\",\n  \"self-rising flour\": \"self-raising flour\",\n  \"shredded cheese\": \"grated cheese\",\n  \"sidewalk\": \"pavement\",\n  \"skim milk\": \"skimmed milk\",\n  \"sneaker\": \"trainer\",\n  \"sneakers\": \"trainers\",\n  \"snuck\": \"sneaked\",\n  \"soccer\": \"football\",\n  \"soda pop\": \"soft drink\",\n  \"specialty\": \"speciality\",\n  \"spelunking\": \"caving\",\n  \"spring break\": \"Easter holiday\",\n  \"station wagon\": \"estate car\",\n  \"steam shovel\": \"digger\",\n  \"stickshift\": \"gear stick\",\n  \"stool pigeon\": \"grass\",\n  \"stoolie\": \"grass\",\n  \"stop light\": \"traffic light\",\n  \"streetcar\": \"tram\",\n  \"stroller\": \"pram\",\n  \"swap meet\": \"car boot sale\",\n  \"sweatpants\": \"track bottoms\",\n  \"tailpipe\": \"exhaust pipe\",\n  \"takeout\": \"takeaway\",\n  \"teleprompter\": \"compare autocue\",\n  \"thumbtack\": \"drawing pin\",\n  \"track meet\": \"athletics meeting\",\n  \"trash\": \"rubbish\",\n  \"trashcan\": \"bin\",\n  \"travel trailer\": \"caravan\",\n  \"turn signal\": \"turn-indicators\",\n  \"tylenol\": \"paracetamol\",\n  \"upscale\": \"upmarket\",\n  \"vacationer\": \"holidaymaker\",\n  \"vacay\": \"hols\",\n  \"variety meats\": \"offal\",\n  \"varmint\": \"vermin\",\n  \"varmit\": \"vermin\",\n  \"wastebasket\": \"wastepaper basket\",\n  \"windshield\": \"windscreen\",\n  \"yellow light\": \"amber\",\n  \"zip code\": \"postcode\",\n  \"zipper\": \"zip\",\n  \"zucchini\": \"courgette\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "american-only.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
      "sourcesContent": [
        "module.exports = {\r\n  \"acclimate\": \"acclimatise\",\r\n  \"acetaminophen\": \"paracetamol\",\r\n  \"baby carriage\": \"pram\",\r\n  \"backhoe\": \"digger\",\r\n  \"band-aid\": \"Elastoplast\",\r\n  \"bangs\": \"fringe\",\r\n  \"barrette\": \"hair slide\",\r\n  \"baseboard\": \"skirting board\",\r\n  \"bedroom community\": \"dormitory town\",\r\n  \"blacktop\": \"tarmac\",\r\n  \"bleachers\": \"stands\",\r\n  \"blinders\": \"blinkers\",\r\n  \"blood sausage\": \"black pudding\",\r\n  \"boardwalk\": \"promenade\",\r\n  \"bobby pin\": \"Kirby grip\",\r\n  \"booger\": \"bogey\",\r\n  \"bookmobile\": \"mobile library\",\r\n  \"breadbox\": \"bread bin\",\r\n  \"bullhorn\": \"loudhailer\",\r\n  \"burglarize\": \"burgle\",\r\n  \"burlap\": \"hessian\",\r\n  \"canadian bacon\": \"back bacon\",\r\n  \"candy apple\": \"toffee apple\",\r\n  \"candied apple\": \"toffee apple\",\r\n  \"careen\": \"career\",\r\n  \"catsup\": \"ketchup\",\r\n  \"cell phone\": \"mobile\",\r\n  \"cellphone\": \"mobile\",\r\n  \"certified mail\": \"recorded delivery\",\r\n  \"chapstick\": \"lip balm\",\r\n  \"charge account\": \"credit account\",\r\n  \"checkers\": \"draughts\",\r\n  \"checking account\": \"current account\",\r\n  \"cilantro\": \"coriander\",\r\n  \"cleats\": \"football boots\",\r\n  \"condo\": \"flat\",\r\n  \"costume party\": \"fancy-dress party\",\r\n  \"cotton candy\": \"candy floss\",\r\n  \"counterclockwise\": \"anti-clockwise\",\r\n  \"coveralls\": \"overalls\",\r\n  \"diaper\": \"nappy\",\r\n  \"discombobulated\": \"discomposed\",\r\n  \"dish towel\": \"tea towel\",\r\n  \"dishrag\": \"dishcloth\",\r\n  \"dish soap\": \"washing-up liquid\",\r\n  \"dishwashing liquid\": \"washing-up liquid\",\r\n  \"district attorney\": \"Crown Prosecutor\",\r\n  \"divided highway\": \"dual carriageway\",\r\n  \"doohickey\": \"wotsit\",\r\n  \"downspout\": \"drainpipe\",\r\n  \"drape\": \"curtain\",\r\n  \"drapes\": \"curtain\",\r\n  \"driver license\": \"driving licence\",\r\n  \"driver's license\": \"driving licence\",\r\n  \"drugstore\": \"chemist\",\r\n  \"drywall\": \"plasterboard\",\r\n  \"dumpster\": \"skip\",\r\n  \"eggplant\": \"aubergine\",\r\n  \"emergency brake\": \"handbrake\",\r\n  \"eminent domain\": \"compulsory purchase\",\r\n  \"envision\": \"to envisage\",\r\n  \"eraser\": \"rubber\",\r\n  \"expressway\": \"motorway\",\r\n  \"fanny pack\": \"bum bag\",\r\n  \"faucet\": \"tap\",\r\n  \"flashlight\": \"torch\",\r\n  \"flatware\": \"cutlery\",\r\n  \"freeway\": \"motorway\",\r\n  \"fries\": \"chips\",\r\n  \"french fries\": \"chips\",\r\n  \"french press\": \"cafetière\",\r\n  \"freshman\": \"fresher\",\r\n  \"front desk\": \"reception\",\r\n  \"frosting\": \"icing\",\r\n  \"garbage can\": \"dustbin\",\r\n  \"gasoline\": \"petrol\",\r\n  \"general delivery\": \"poste restante\",\r\n  \"grifter\": \"con man\",\r\n  \"ground beef\": \"mince\",\r\n  \"grunt\": \"squaddie\",\r\n  \"hard candy\": \"boiled sweets\",\r\n  \"heavy cream\": \"double cream\",\r\n  \"jackhammer\": \"pneumatic drill\",\r\n  \"jell-o\": \"jelly\",\r\n  \"ladybug\": \"ladybird\",\r\n  \"laundromat\": \"laundrette\",\r\n  \"learner's permit\": \"provisional driving licence\",\r\n  \"license plate\": \"number plate\",\r\n  \"license tag\": \"number plate\",\r\n  \"mail carrier\": \"postal worker\",\r\n  \"mailman\": \"postman\",\r\n  \"main street\": \"high street\",\r\n  \"mama\": \"mam\",\r\n  \"mamma\": \"mam\",\r\n  \"momma\": \"mam\",\r\n  \"mom\": \"mum\",\r\n  \"mass transit\": \"public transport\",\r\n  \"math\": \"maths\",\r\n  \"mohawk\": \"mohican\",\r\n  \"mortician\": \"undertaker\",\r\n  \"narc\": \"grass\",\r\n  \"nightcrawler\": \"earthworm\",\r\n  \"nightstick\": \"truncheon\",\r\n  \"nix\": \"cancel\",\r\n  \"obligated\": \"obliged\",\r\n  \"off-the-rack\": \"off-the-peg\",\r\n  \"oftentimes\": \"often\",\r\n  \"overpass\": \"flyover\",\r\n  \"pantyhose\": \"tights\",\r\n  \"paper route\": \"paper round\",\r\n  \"parking garage\": \"car park\",\r\n  \"parking lot\": \"car park\",\r\n  \"penitentiary\": \"prison\",\r\n  \"plastic wrap\": \"cling-film\",\r\n  \"play hooky\": \"bunk off\",\r\n  \"plexiglas\": \"Perspex\",\r\n  \"popsicle\": \"ice lolly\",\r\n  \"powdered sugar\": \"icing sugar\",\r\n  \"pre-authorized payment\": \"direct debit\",\r\n  \"pre-authorized withdrawal\": \"direct debit\",\r\n  \"public holiday\": \"bank holiday\",\r\n  \"rappel\": \"abseil\",\r\n  \"realtor\": \"estate agent\",\r\n  \"rif\": \"redundancy\",\r\n  \"rif'd\": \"made redundant\",\r\n  \"rowhouse\": \"terraced house\",\r\n  \"rube goldberg device\": \"Heath Robinson device\",\r\n  \"rube goldberg machine\": \"Heath Robinson device\",\r\n  \"rugola\": \"rocket\",\r\n  \"rutabaga\": \"swede\",\r\n  \"rv\": \"caravan\",\r\n  \"rv park\": \"caravan site\",\r\n  \"saran wrap\": \"cling film\",\r\n  \"scads\": \"great amounts\",\r\n  \"scallion\": \"spring onion\",\r\n  \"scalper\": \"ticket tout\",\r\n  \"scotch tape\": \"Sellotape\",\r\n  \"scuttlebutt\": \"rumour\",\r\n  \"sedan automobile\": \"saloon\",\r\n  \"self-rising flour\": \"self-raising flour\",\r\n  \"shredded cheese\": \"grated cheese\",\r\n  \"sidewalk\": \"pavement\",\r\n  \"skim milk\": \"skimmed milk\",\r\n  \"sneaker\": \"trainer\",\r\n  \"sneakers\": \"trainers\",\r\n  \"snuck\": \"sneaked\",\r\n  \"soccer\": \"football\",\r\n  \"soda pop\": \"soft drink\",\r\n  \"specialty\": \"speciality\",\r\n  \"spelunking\": \"caving\",\r\n  \"spring break\": \"Easter holiday\",\r\n  \"station wagon\": \"estate car\",\r\n  \"steam shovel\": \"digger\",\r\n  \"stickshift\": \"gear stick\",\r\n  \"stool pigeon\": \"grass\",\r\n  \"stoolie\": \"grass\",\r\n  \"stop light\": \"traffic light\",\r\n  \"streetcar\": \"tram\",\r\n  \"stroller\": \"pram\",\r\n  \"swap meet\": \"car boot sale\",\r\n  \"sweatpants\": \"track bottoms\",\r\n  \"tailpipe\": \"exhaust pipe\",\r\n  \"takeout\": \"takeaway\",\r\n  \"teleprompter\": \"compare autocue\",\r\n  \"thumbtack\": \"drawing pin\",\r\n  \"track meet\": \"athletics meeting\",\r\n  \"trash\": \"rubbish\",\r\n  \"trashcan\": \"bin\",\r\n  \"travel trailer\": \"caravan\",\r\n  \"turn signal\": \"turn-indicators\",\r\n  \"tylenol\": \"paracetamol\",\r\n  \"upscale\": \"upmarket\",\r\n  \"vacationer\": \"holidaymaker\",\r\n  \"vacay\": \"hols\",\r\n  \"variety meats\": \"offal\",\r\n  \"varmint\": \"vermin\",\r\n  \"varmit\": \"vermin\",\r\n  \"wastebasket\": \"wastepaper basket\",\r\n  \"windshield\": \"windscreen\",\r\n  \"yellow light\": \"amber\",\r\n  \"zip code\": \"postcode\",\r\n  \"zipper\": \"zip\",\r\n  \"zucchini\": \"courgette\"\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1689873206614
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\components\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"filename\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\components\\\\american-to-british-spelling.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\american-to-british-spelling.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\american-to-british-spelling.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\american-to-british-spelling.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
        "sourceFileName": "american-to-british-spelling.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  \"accessorize\": \"accessorise\",\n  \"accessorized\": \"accessorised\",\n  \"accessorizes\": \"accessorises\",\n  \"accessorizing\": \"accessorising\",\n  \"acclimatization\": \"acclimatisation\",\n  \"acclimatize\": \"acclimatise\",\n  \"acclimatized\": \"acclimatised\",\n  \"acclimatizes\": \"acclimatises\",\n  \"acclimatizing\": \"acclimatising\",\n  \"accouterments\": \"accoutrements\",\n  \"eon\": \"aeon\",\n  \"eons\": \"aeons\",\n  \"aerogram\": \"aerogramme\",\n  \"aerograms\": \"aerogrammes\",\n  \"airplane\": \"aeroplane\",\n  \"airplanes\": \"aeroplanes\",\n  \"etiology\": \"aetiology\",\n  \"aging\": \"ageing\",\n  \"aggrandizement\": \"aggrandisement\",\n  \"agonize\": \"agonise\",\n  \"agonized\": \"agonised\",\n  \"agonizes\": \"agonises\",\n  \"agonizing\": \"agonising\",\n  \"agonizingly\": \"agonisingly\",\n  \"almanac\": \"almanack\",\n  \"almanacs\": \"almanacks\",\n  \"aluminum\": \"aluminium\",\n  \"amortizable\": \"amortisable\",\n  \"amortization\": \"amortisation\",\n  \"amortizations\": \"amortisations\",\n  \"amortize\": \"amortise\",\n  \"amortized\": \"amortised\",\n  \"amortizes\": \"amortises\",\n  \"amortizing\": \"amortising\",\n  \"amphitheater\": \"amphitheatre\",\n  \"amphitheaters\": \"amphitheatres\",\n  \"anemia\": \"anaemia\",\n  \"anemic\": \"anaemic\",\n  \"anesthesia\": \"anaesthesia\",\n  \"anesthetic\": \"anaesthetic\",\n  \"anesthetics\": \"anaesthetics\",\n  \"anesthetize\": \"anaesthetize\",\n  \"anesthetized\": \"anaesthetized\",\n  \"anesthetizes\": \"anaesthetizes\",\n  \"anesthetizing\": \"anaesthetizing\",\n  \"anesthetist\": \"anaesthetist\",\n  \"anesthetists\": \"anaesthetists\",\n  \"analog\": \"analogue\",\n  \"analogs\": \"analogues\",\n  \"analyze\": \"analyse\",\n  \"analyzed\": \"analysed\",\n  \"analyzes\": \"analyses\",\n  \"analyzing\": \"analysing\",\n  \"anglicize\": \"anglicise\",\n  \"anglicized\": \"anglicised\",\n  \"anglicizes\": \"anglicises\",\n  \"anglicizing\": \"anglicising\",\n  \"annualized\": \"annualised\",\n  \"antagonize\": \"antagonise\",\n  \"antagonized\": \"antagonised\",\n  \"antagonizes\": \"antagonises\",\n  \"antagonizing\": \"antagonising\",\n  \"apologize\": \"apologise\",\n  \"apologized\": \"apologised\",\n  \"apologizes\": \"apologises\",\n  \"apologizing\": \"apologising\",\n  \"appall\": \"appal\",\n  \"appalls\": \"appals\",\n  \"appetizer\": \"appetiser\",\n  \"appetizers\": \"appetisers\",\n  \"appetizing\": \"appetising\",\n  \"appetizingly\": \"appetisingly\",\n  \"arbor\": \"arbour\",\n  \"arbors\": \"arbours\",\n  \"archeological\": \"archaeological\",\n  \"archeologically\": \"archaeologically\",\n  \"archeologist\": \"archaeologist\",\n  \"archeologists\": \"archaeologists\",\n  \"archeology\": \"archaeology\",\n  \"ardor\": \"ardour\",\n  \"armor\": \"armour\",\n  \"armored\": \"armoured\",\n  \"armorer\": \"armourer\",\n  \"armorers\": \"armourers\",\n  \"armories\": \"armouries\",\n  \"armory\": \"armoury\",\n  \"artifact\": \"artefact\",\n  \"artifacts\": \"artefacts\",\n  \"authorize\": \"authorise\",\n  \"authorized\": \"authorised\",\n  \"authorizes\": \"authorises\",\n  \"authorizing\": \"authorising\",\n  \"ax\": \"axe\",\n  \"backpedaled\": \"backpedalled\",\n  \"backpedaling\": \"backpedalling\",\n  \"banister\": \"bannister\",\n  \"banisters\": \"bannisters\",\n  \"baptize\": \"baptise\",\n  \"baptized\": \"baptised\",\n  \"baptizes\": \"baptises\",\n  \"baptizing\": \"baptising\",\n  \"battleax\": \"battleaxe\",\n  \"balk\": \"baulk\",\n  \"balked\": \"baulked\",\n  \"balking\": \"baulking\",\n  \"balks\": \"baulks\",\n  \"bedeviled\": \"bedevilled\",\n  \"bedeviling\": \"bedevilling\",\n  \"behavior\": \"behaviour\",\n  \"behavioral\": \"behavioural\",\n  \"behaviorism\": \"behaviourism\",\n  \"behaviorist\": \"behaviourist\",\n  \"behaviorists\": \"behaviourists\",\n  \"behaviors\": \"behaviours\",\n  \"behoove\": \"behove\",\n  \"behooved\": \"behoved\",\n  \"behooves\": \"behoves\",\n  \"bejeweled\": \"bejewelled\",\n  \"belabor\": \"belabour\",\n  \"belabored\": \"belaboured\",\n  \"belaboring\": \"belabouring\",\n  \"belabors\": \"belabours\",\n  \"beveled\": \"bevelled\",\n  \"bevies\": \"bevvies\",\n  \"bevy\": \"bevvy\",\n  \"biased\": \"biassed\",\n  \"biasing\": \"biassing\",\n  \"binging\": \"bingeing\",\n  \"bougainvillea\": \"bougainvillaea\",\n  \"bougainvilleas\": \"bougainvillaeas\",\n  \"bowdlerize\": \"bowdlerise\",\n  \"bowdlerized\": \"bowdlerised\",\n  \"bowdlerizes\": \"bowdlerises\",\n  \"bowdlerizing\": \"bowdlerising\",\n  \"breathalyze\": \"breathalyse\",\n  \"breathalyzed\": \"breathalysed\",\n  \"breathalyzer\": \"breathalyser\",\n  \"breathalyzers\": \"breathalysers\",\n  \"breathalyzes\": \"breathalyses\",\n  \"breathalyzing\": \"breathalysing\",\n  \"brutalize\": \"brutalise\",\n  \"brutalized\": \"brutalised\",\n  \"brutalizes\": \"brutalises\",\n  \"brutalizing\": \"brutalising\",\n  \"busses\": \"buses\",\n  \"bussing\": \"busing\",\n  \"cesarean\": \"caesarean\",\n  \"cesareans\": \"caesareans\",\n  \"caliber\": \"calibre\",\n  \"calibers\": \"calibres\",\n  \"caliper\": \"calliper\",\n  \"calipers\": \"callipers\",\n  \"calisthenics\": \"callisthenics\",\n  \"canalize\": \"canalise\",\n  \"canalized\": \"canalised\",\n  \"canalizes\": \"canalises\",\n  \"canalizing\": \"canalising\",\n  \"canceled\": \"cancelled\",\n  \"canceling\": \"cancelling\",\n  \"candor\": \"candour\",\n  \"cannibalize\": \"cannibalise\",\n  \"cannibalized\": \"cannibalised\",\n  \"cannibalizes\": \"cannibalises\",\n  \"cannibalizing\": \"cannibalising\",\n  \"canonize\": \"canonise\",\n  \"canonized\": \"canonised\",\n  \"canonizes\": \"canonises\",\n  \"canonizing\": \"canonising\",\n  \"capitalize\": \"capitalise\",\n  \"capitalized\": \"capitalised\",\n  \"capitalizes\": \"capitalises\",\n  \"capitalizing\": \"capitalising\",\n  \"caramelize\": \"caramelise\",\n  \"caramelized\": \"caramelised\",\n  \"caramelizes\": \"caramelises\",\n  \"caramelizing\": \"caramelising\",\n  \"carbonize\": \"carbonise\",\n  \"carbonized\": \"carbonised\",\n  \"carbonizes\": \"carbonises\",\n  \"carbonizing\": \"carbonising\",\n  \"caroled\": \"carolled\",\n  \"caroling\": \"carolling\",\n  \"catalog\": \"catalogue\",\n  \"cataloged\": \"catalogued\",\n  \"catalogs\": \"catalogues\",\n  \"cataloging\": \"cataloguing\",\n  \"catalyze\": \"catalyse\",\n  \"catalyzed\": \"catalysed\",\n  \"catalyzes\": \"catalyses\",\n  \"catalyzing\": \"catalysing\",\n  \"categorize\": \"categorise\",\n  \"categorized\": \"categorised\",\n  \"categorizes\": \"categorises\",\n  \"categorizing\": \"categorising\",\n  \"cauterize\": \"cauterise\",\n  \"cauterized\": \"cauterised\",\n  \"cauterizes\": \"cauterises\",\n  \"cauterizing\": \"cauterising\",\n  \"caviled\": \"cavilled\",\n  \"caviling\": \"cavilling\",\n  \"centigram\": \"centigramme\",\n  \"centigrams\": \"centigrammes\",\n  \"centiliter\": \"centilitre\",\n  \"centiliters\": \"centilitres\",\n  \"centimeter\": \"centimetre\",\n  \"centimeters\": \"centimetres\",\n  \"centralize\": \"centralise\",\n  \"centralized\": \"centralised\",\n  \"centralizes\": \"centralises\",\n  \"centralizing\": \"centralising\",\n  \"center\": \"centre\",\n  \"centered\": \"centred\",\n  \"centerfold\": \"centrefold\",\n  \"centerfolds\": \"centrefolds\",\n  \"centerpiece\": \"centrepiece\",\n  \"centerpieces\": \"centrepieces\",\n  \"centers\": \"centres\",\n  \"channeled\": \"channelled\",\n  \"channeling\": \"channelling\",\n  \"characterize\": \"characterise\",\n  \"characterized\": \"characterised\",\n  \"characterizes\": \"characterises\",\n  \"characterizing\": \"characterising\",\n  \"check\": \"cheque\",\n  \"checkbook\": \"chequebook\",\n  \"checkbooks\": \"chequebooks\",\n  \"checkered\": \"chequered\",\n  \"checks\": \"cheques\",\n  \"chili\": \"chilli\",\n  \"chimera\": \"chimaera\",\n  \"chimeras\": \"chimaeras\",\n  \"chiseled\": \"chiselled\",\n  \"chiseling\": \"chiselling\",\n  \"circularize\": \"circularise\",\n  \"circularized\": \"circularised\",\n  \"circularizes\": \"circularises\",\n  \"circularizing\": \"circularising\",\n  \"civilize\": \"civilise\",\n  \"civilized\": \"civilised\",\n  \"civilizes\": \"civilises\",\n  \"civilizing\": \"civilising\",\n  \"clamor\": \"clamour\",\n  \"clamored\": \"clamoured\",\n  \"clamoring\": \"clamouring\",\n  \"clamors\": \"clamours\",\n  \"clangor\": \"clangour\",\n  \"clarinetist\": \"clarinettist\",\n  \"clarinetists\": \"clarinettists\",\n  \"collectivize\": \"collectivise\",\n  \"collectivized\": \"collectivised\",\n  \"collectivizes\": \"collectivises\",\n  \"collectivizing\": \"collectivising\",\n  \"colonization\": \"colonisation\",\n  \"colonize\": \"colonise\",\n  \"colonized\": \"colonised\",\n  \"colonizer\": \"coloniser\",\n  \"colonizers\": \"colonisers\",\n  \"colonizes\": \"colonises\",\n  \"colonizing\": \"colonising\",\n  \"color\": \"colour\",\n  \"colorant\": \"colourant\",\n  \"colorants\": \"colourants\",\n  \"colored\": \"coloured\",\n  \"coloreds\": \"coloureds\",\n  \"colorful\": \"colourful\",\n  \"colorfully\": \"colourfully\",\n  \"coloring\": \"colouring\",\n  \"colorize\": \"colourize\",\n  \"colorized\": \"colourized\",\n  \"colorizes\": \"colourizes\",\n  \"colorizing\": \"colourizing\",\n  \"colorless\": \"colourless\",\n  \"colors\": \"colours\",\n  \"commercialize\": \"commercialise\",\n  \"commercialized\": \"commercialised\",\n  \"commercializes\": \"commercialises\",\n  \"commercializing\": \"commercialising\",\n  \"compartmentalize\": \"compartmentalise\",\n  \"compartmentalized\": \"compartmentalised\",\n  \"compartmentalizes\": \"compartmentalises\",\n  \"compartmentalizing\": \"compartmentalising\",\n  \"computerize\": \"computerise\",\n  \"computerized\": \"computerised\",\n  \"computerizes\": \"computerises\",\n  \"computerizing\": \"computerising\",\n  \"conceptualize\": \"conceptualise\",\n  \"conceptualized\": \"conceptualised\",\n  \"conceptualizes\": \"conceptualises\",\n  \"conceptualizing\": \"conceptualising\",\n  \"connection\": \"connexion\",\n  \"connections\": \"connexions\",\n  \"contextualize\": \"contextualise\",\n  \"contextualized\": \"contextualised\",\n  \"contextualizes\": \"contextualises\",\n  \"contextualizing\": \"contextualising\",\n  \"cozier\": \"cosier\",\n  \"cozies\": \"cosies\",\n  \"coziest\": \"cosiest\",\n  \"cozily\": \"cosily\",\n  \"coziness\": \"cosiness\",\n  \"cozy\": \"cosy\",\n  \"councilor\": \"councillor\",\n  \"councilors\": \"councillors\",\n  \"counseled\": \"counselled\",\n  \"counseling\": \"counselling\",\n  \"counselor\": \"counsellor\",\n  \"counselors\": \"counsellors\",\n  \"crenelated\": \"crenellated\",\n  \"criminalize\": \"criminalise\",\n  \"criminalized\": \"criminalised\",\n  \"criminalizes\": \"criminalises\",\n  \"criminalizing\": \"criminalising\",\n  \"criticize\": \"criticise\",\n  \"criticized\": \"criticised\",\n  \"criticizes\": \"criticises\",\n  \"criticizing\": \"criticising\",\n  \"crueler\": \"crueller\",\n  \"cruelest\": \"cruellest\",\n  \"crystallization\": \"crystallisation\",\n  \"crystallize\": \"crystallise\",\n  \"crystallized\": \"crystallised\",\n  \"crystallizes\": \"crystallises\",\n  \"crystallizing\": \"crystallising\",\n  \"cudgeled\": \"cudgelled\",\n  \"cudgeling\": \"cudgelling\",\n  \"customize\": \"customise\",\n  \"customized\": \"customised\",\n  \"customizes\": \"customises\",\n  \"customizing\": \"customising\",\n  \"cipher\": \"cypher\",\n  \"ciphers\": \"cyphers\",\n  \"decentralization\": \"decentralisation\",\n  \"decentralize\": \"decentralise\",\n  \"decentralized\": \"decentralised\",\n  \"decentralizes\": \"decentralises\",\n  \"decentralizing\": \"decentralising\",\n  \"decriminalization\": \"decriminalisation\",\n  \"decriminalize\": \"decriminalise\",\n  \"decriminalized\": \"decriminalised\",\n  \"decriminalizes\": \"decriminalises\",\n  \"decriminalizing\": \"decriminalising\",\n  \"defense\": \"defence\",\n  \"defenseless\": \"defenceless\",\n  \"defenses\": \"defences\",\n  \"dehumanization\": \"dehumanisation\",\n  \"dehumanize\": \"dehumanise\",\n  \"dehumanized\": \"dehumanised\",\n  \"dehumanizes\": \"dehumanises\",\n  \"dehumanizing\": \"dehumanising\",\n  \"demeanor\": \"demeanour\",\n  \"demilitarization\": \"demilitarisation\",\n  \"demilitarize\": \"demilitarise\",\n  \"demilitarized\": \"demilitarised\",\n  \"demilitarizes\": \"demilitarises\",\n  \"demilitarizing\": \"demilitarising\",\n  \"demobilization\": \"demobilisation\",\n  \"demobilize\": \"demobilise\",\n  \"demobilized\": \"demobilised\",\n  \"demobilizes\": \"demobilises\",\n  \"demobilizing\": \"demobilising\",\n  \"democratization\": \"democratisation\",\n  \"democratize\": \"democratise\",\n  \"democratized\": \"democratised\",\n  \"democratizes\": \"democratises\",\n  \"democratizing\": \"democratising\",\n  \"demonize\": \"demonise\",\n  \"demonized\": \"demonised\",\n  \"demonizes\": \"demonises\",\n  \"demonizing\": \"demonising\",\n  \"demoralization\": \"demoralisation\",\n  \"demoralize\": \"demoralise\",\n  \"demoralized\": \"demoralised\",\n  \"demoralizes\": \"demoralises\",\n  \"demoralizing\": \"demoralising\",\n  \"denationalization\": \"denationalisation\",\n  \"denationalize\": \"denationalise\",\n  \"denationalized\": \"denationalised\",\n  \"denationalizes\": \"denationalises\",\n  \"denationalizing\": \"denationalising\",\n  \"donut\": \"doughnut\",\n  \"deodorize\": \"deodorise\",\n  \"deodorized\": \"deodorised\",\n  \"deodorizes\": \"deodorises\",\n  \"deodorizing\": \"deodorising\",\n  \"depersonalize\": \"depersonalise\",\n  \"depersonalized\": \"depersonalised\",\n  \"depersonalizes\": \"depersonalises\",\n  \"depersonalizing\": \"depersonalising\",\n  \"deputize\": \"deputise\",\n  \"deputized\": \"deputised\",\n  \"deputizes\": \"deputises\",\n  \"deputizing\": \"deputising\",\n  \"desensitization\": \"desensitisation\",\n  \"desensitize\": \"desensitise\",\n  \"desensitized\": \"desensitised\",\n  \"desensitizes\": \"desensitises\",\n  \"desensitizing\": \"desensitising\",\n  \"destabilization\": \"destabilisation\",\n  \"destabilize\": \"destabilise\",\n  \"destabilized\": \"destabilised\",\n  \"destabilizes\": \"destabilises\",\n  \"destabilizing\": \"destabilising\",\n  \"dialed\": \"dialled\",\n  \"dialing\": \"dialling\",\n  \"dialog\": \"dialogue\",\n  \"dialogs\": \"dialogues\",\n  \"diarrhea\": \"diarrhoea\",\n  \"digitize\": \"digitise\",\n  \"digitized\": \"digitised\",\n  \"digitizes\": \"digitises\",\n  \"digitizing\": \"digitising\",\n  \"disk\": \"disc\",\n  \"discolor\": \"discolour\",\n  \"discolored\": \"discoloured\",\n  \"discoloring\": \"discolouring\",\n  \"discolors\": \"discolours\",\n  \"disks\": \"discs\",\n  \"disemboweled\": \"disembowelled\",\n  \"disemboweling\": \"disembowelling\",\n  \"disfavor\": \"disfavour\",\n  \"disheveled\": \"dishevelled\",\n  \"dishonor\": \"dishonour\",\n  \"dishonorable\": \"dishonourable\",\n  \"dishonorably\": \"dishonourably\",\n  \"dishonored\": \"dishonoured\",\n  \"dishonoring\": \"dishonouring\",\n  \"dishonors\": \"dishonours\",\n  \"disorganization\": \"disorganisation\",\n  \"disorganized\": \"disorganised\",\n  \"distill\": \"distil\",\n  \"distills\": \"distils\",\n  \"dramatization\": \"dramatisation\",\n  \"dramatizations\": \"dramatisations\",\n  \"dramatize\": \"dramatise\",\n  \"dramatized\": \"dramatised\",\n  \"dramatizes\": \"dramatises\",\n  \"dramatizing\": \"dramatising\",\n  \"draft\": \"draught\",\n  \"draftboard\": \"draughtboard\",\n  \"draftboards\": \"draughtboards\",\n  \"draftier\": \"draughtier\",\n  \"draftiest\": \"draughtiest\",\n  \"drafts\": \"draughts\",\n  \"draftsman\": \"draughtsman\",\n  \"draftsmanship\": \"draughtsmanship\",\n  \"draftsmen\": \"draughtsmen\",\n  \"draftswoman\": \"draughtswoman\",\n  \"draftswomen\": \"draughtswomen\",\n  \"drafty\": \"draughty\",\n  \"driveled\": \"drivelled\",\n  \"driveling\": \"drivelling\",\n  \"dueled\": \"duelled\",\n  \"dueling\": \"duelling\",\n  \"economize\": \"economise\",\n  \"economized\": \"economised\",\n  \"economizes\": \"economises\",\n  \"economizing\": \"economising\",\n  \"edema\": \"edoema\",\n  \"editorialize\": \"editorialise\",\n  \"editorialized\": \"editorialised\",\n  \"editorializes\": \"editorialises\",\n  \"editorializing\": \"editorialising\",\n  \"empathize\": \"empathise\",\n  \"empathized\": \"empathised\",\n  \"empathizes\": \"empathises\",\n  \"empathizing\": \"empathising\",\n  \"emphasize\": \"emphasise\",\n  \"emphasized\": \"emphasised\",\n  \"emphasizes\": \"emphasises\",\n  \"emphasizing\": \"emphasising\",\n  \"enameled\": \"enamelled\",\n  \"enameling\": \"enamelling\",\n  \"enamored\": \"enamoured\",\n  \"encyclopedia\": \"encyclopaedia\",\n  \"encyclopedias\": \"encyclopaedias\",\n  \"encyclopedic\": \"encyclopaedic\",\n  \"endeavor\": \"endeavour\",\n  \"endeavored\": \"endeavoured\",\n  \"endeavoring\": \"endeavouring\",\n  \"endeavors\": \"endeavours\",\n  \"energize\": \"energise\",\n  \"energized\": \"energised\",\n  \"energizes\": \"energises\",\n  \"energizing\": \"energising\",\n  \"enroll\": \"enrol\",\n  \"enrolls\": \"enrols\",\n  \"enthrall\": \"enthral\",\n  \"enthralls\": \"enthrals\",\n  \"epaulet\": \"epaulette\",\n  \"epaulets\": \"epaulettes\",\n  \"epicenter\": \"epicentre\",\n  \"epicenters\": \"epicentres\",\n  \"epilog\": \"epilogue\",\n  \"epilogs\": \"epilogues\",\n  \"epitomize\": \"epitomise\",\n  \"epitomized\": \"epitomised\",\n  \"epitomizes\": \"epitomises\",\n  \"epitomizing\": \"epitomising\",\n  \"equalization\": \"equalisation\",\n  \"equalize\": \"equalise\",\n  \"equalized\": \"equalised\",\n  \"equalizer\": \"equaliser\",\n  \"equalizers\": \"equalisers\",\n  \"equalizes\": \"equalises\",\n  \"equalizing\": \"equalising\",\n  \"eulogize\": \"eulogise\",\n  \"eulogized\": \"eulogised\",\n  \"eulogizes\": \"eulogises\",\n  \"eulogizing\": \"eulogising\",\n  \"evangelize\": \"evangelise\",\n  \"evangelized\": \"evangelised\",\n  \"evangelizes\": \"evangelises\",\n  \"evangelizing\": \"evangelising\",\n  \"exorcize\": \"exorcise\",\n  \"exorcized\": \"exorcised\",\n  \"exorcizes\": \"exorcises\",\n  \"exorcizing\": \"exorcising\",\n  \"extemporization\": \"extemporisation\",\n  \"extemporize\": \"extemporise\",\n  \"extemporized\": \"extemporised\",\n  \"extemporizes\": \"extemporises\",\n  \"extemporizing\": \"extemporising\",\n  \"externalization\": \"externalisation\",\n  \"externalizations\": \"externalisations\",\n  \"externalize\": \"externalise\",\n  \"externalized\": \"externalised\",\n  \"externalizes\": \"externalises\",\n  \"externalizing\": \"externalising\",\n  \"factorize\": \"factorise\",\n  \"factorized\": \"factorised\",\n  \"factorizes\": \"factorises\",\n  \"factorizing\": \"factorising\",\n  \"fecal\": \"faecal\",\n  \"feces\": \"faeces\",\n  \"familiarization\": \"familiarisation\",\n  \"familiarize\": \"familiarise\",\n  \"familiarized\": \"familiarised\",\n  \"familiarizes\": \"familiarises\",\n  \"familiarizing\": \"familiarising\",\n  \"fantasize\": \"fantasise\",\n  \"fantasized\": \"fantasised\",\n  \"fantasizes\": \"fantasises\",\n  \"fantasizing\": \"fantasising\",\n  \"favorable\": \"favourable\",\n  \"favorably\": \"favourably\",\n  \"favored\": \"favoured\",\n  \"favoring\": \"favouring\",\n  \"favorite\": \"favourite\",\n  \"favorites\": \"favourites\",\n  \"favoritism\": \"favouritism\",\n  \"favor\": \"favour\",\n  \"favors\": \"favours\",\n  \"feminize\": \"feminise\",\n  \"feminized\": \"feminised\",\n  \"feminizes\": \"feminises\",\n  \"feminizing\": \"feminising\",\n  \"fertilization\": \"fertilisation\",\n  \"fertilize\": \"fertilise\",\n  \"fertilized\": \"fertilised\",\n  \"fertilizer\": \"fertiliser\",\n  \"fertilizers\": \"fertilisers\",\n  \"fertilizes\": \"fertilises\",\n  \"fertilizing\": \"fertilising\",\n  \"fervor\": \"fervour\",\n  \"fiber\": \"fibre\",\n  \"fiberglass\": \"fibreglass\",\n  \"fibers\": \"fibres\",\n  \"fictionalization\": \"fictionalisation\",\n  \"fictionalizations\": \"fictionalisations\",\n  \"fictionalize\": \"fictionalise\",\n  \"fictionalized\": \"fictionalised\",\n  \"fictionalizes\": \"fictionalises\",\n  \"fictionalizing\": \"fictionalising\",\n  \"filet\": \"fillet\",\n  \"fileted\": \"filleted\",\n  \"fileting\": \"filleting\",\n  \"filets\": \"fillets\",\n  \"finalization\": \"finalisation\",\n  \"finalize\": \"finalise\",\n  \"finalized\": \"finalised\",\n  \"finalizes\": \"finalises\",\n  \"finalizing\": \"finalising\",\n  \"flutist\": \"flautist\",\n  \"flutists\": \"flautists\",\n  \"flavor\": \"flavour\",\n  \"flavored\": \"flavoured\",\n  \"flavoring\": \"flavouring\",\n  \"flavorings\": \"flavourings\",\n  \"flavorless\": \"flavourless\",\n  \"flavors\": \"flavours\",\n  \"flavorsome\": \"flavoursome\",\n  \"fetal\": \"foetal\",\n  \"fetid\": \"foetid\",\n  \"fetus\": \"foetus\",\n  \"fetuses\": \"foetuses\",\n  \"formalization\": \"formalisation\",\n  \"formalize\": \"formalise\",\n  \"formalized\": \"formalised\",\n  \"formalizes\": \"formalises\",\n  \"formalizing\": \"formalising\",\n  \"fossilization\": \"fossilisation\",\n  \"fossilize\": \"fossilise\",\n  \"fossilized\": \"fossilised\",\n  \"fossilizes\": \"fossilises\",\n  \"fossilizing\": \"fossilising\",\n  \"fraternization\": \"fraternisation\",\n  \"fraternize\": \"fraternise\",\n  \"fraternized\": \"fraternised\",\n  \"fraternizes\": \"fraternises\",\n  \"fraternizing\": \"fraternising\",\n  \"fulfill\": \"fulfil\",\n  \"fulfillment\": \"fulfilment\",\n  \"fulfills\": \"fulfils\",\n  \"funneled\": \"funnelled\",\n  \"funneling\": \"funnelling\",\n  \"galvanize\": \"galvanise\",\n  \"galvanized\": \"galvanised\",\n  \"galvanizes\": \"galvanises\",\n  \"galvanizing\": \"galvanising\",\n  \"gamboled\": \"gambolled\",\n  \"gamboling\": \"gambolling\",\n  \"jail\": \"gaol\",\n  \"jailbird\": \"gaolbird\",\n  \"jailbirds\": \"gaolbirds\",\n  \"jailbreak\": \"gaolbreak\",\n  \"jailbreaks\": \"gaolbreaks\",\n  \"jailed\": \"gaoled\",\n  \"jailer\": \"gaoler\",\n  \"jailers\": \"gaolers\",\n  \"jailing\": \"gaoling\",\n  \"jails\": \"gaols\",\n  \"gasses\": \"gases\",\n  \"gage\": \"gauge\",\n  \"gaged\": \"gauged\",\n  \"gages\": \"gauges\",\n  \"gaging\": \"gauging\",\n  \"generalization\": \"generalisation\",\n  \"generalizations\": \"generalisations\",\n  \"generalize\": \"generalise\",\n  \"generalized\": \"generalised\",\n  \"generalizes\": \"generalises\",\n  \"generalizing\": \"generalising\",\n  \"gypsies\": \"gipsies\",\n  \"glamorize\": \"glamorise\",\n  \"glamorized\": \"glamorised\",\n  \"glamorizes\": \"glamorises\",\n  \"glamorizing\": \"glamorising\",\n  \"glamor\": \"glamour\",\n  \"globalization\": \"globalisation\",\n  \"globalize\": \"globalise\",\n  \"globalized\": \"globalised\",\n  \"globalizes\": \"globalises\",\n  \"globalizing\": \"globalising\",\n  \"gluing\": \"glueing\",\n  \"goiter\": \"goitre\",\n  \"goiters\": \"goitres\",\n  \"gonorrhea\": \"gonorrhoea\",\n  \"gram\": \"gramme\",\n  \"grams\": \"grammes\",\n  \"graveled\": \"gravelled\",\n  \"gray\": \"grey\",\n  \"grayed\": \"greyed\",\n  \"graying\": \"greying\",\n  \"grayish\": \"greyish\",\n  \"grayness\": \"greyness\",\n  \"grays\": \"greys\",\n  \"groveled\": \"grovelled\",\n  \"groveling\": \"grovelling\",\n  \"groin\": \"groyne\",\n  \"groins\": \"groynes\",\n  \"grueling\": \"gruelling\",\n  \"gruelingly\": \"gruellingly\",\n  \"griffin\": \"gryphon\",\n  \"griffins\": \"gryphons\",\n  \"gynecological\": \"gynaecological\",\n  \"gynecologist\": \"gynaecologist\",\n  \"gynecologists\": \"gynaecologists\",\n  \"gynecology\": \"gynaecology\",\n  \"hematological\": \"haematological\",\n  \"hematologist\": \"haematologist\",\n  \"hematologists\": \"haematologists\",\n  \"hematology\": \"haematology\",\n  \"hemoglobin\": \"haemoglobin\",\n  \"hemophilia\": \"haemophilia\",\n  \"hemophiliac\": \"haemophiliac\",\n  \"hemophiliacs\": \"haemophiliacs\",\n  \"hemorrhage\": \"haemorrhage\",\n  \"hemorrhaged\": \"haemorrhaged\",\n  \"hemorrhages\": \"haemorrhages\",\n  \"hemorrhaging\": \"haemorrhaging\",\n  \"hemorrhoids\": \"haemorrhoids\",\n  \"harbor\": \"harbour\",\n  \"harbored\": \"harboured\",\n  \"harboring\": \"harbouring\",\n  \"harbors\": \"harbours\",\n  \"harmonization\": \"harmonisation\",\n  \"harmonize\": \"harmonise\",\n  \"harmonized\": \"harmonised\",\n  \"harmonizes\": \"harmonises\",\n  \"harmonizing\": \"harmonising\",\n  \"homeopath\": \"homoeopath\",\n  \"homeopathic\": \"homoeopathic\",\n  \"homeopaths\": \"homoeopaths\",\n  \"homeopathy\": \"homoeopathy\",\n  \"homogenize\": \"homogenise\",\n  \"homogenized\": \"homogenised\",\n  \"homogenizes\": \"homogenises\",\n  \"homogenizing\": \"homogenising\",\n  \"honor\": \"honour\",\n  \"honorable\": \"honourable\",\n  \"honorably\": \"honourably\",\n  \"honored\": \"honoured\",\n  \"honoring\": \"honouring\",\n  \"honors\": \"honours\",\n  \"hospitalization\": \"hospitalisation\",\n  \"hospitalize\": \"hospitalise\",\n  \"hospitalized\": \"hospitalised\",\n  \"hospitalizes\": \"hospitalises\",\n  \"hospitalizing\": \"hospitalising\",\n  \"humanize\": \"humanise\",\n  \"humanized\": \"humanised\",\n  \"humanizes\": \"humanises\",\n  \"humanizing\": \"humanising\",\n  \"humor\": \"humour\",\n  \"humored\": \"humoured\",\n  \"humoring\": \"humouring\",\n  \"humorless\": \"humourless\",\n  \"humors\": \"humours\",\n  \"hybridize\": \"hybridise\",\n  \"hybridized\": \"hybridised\",\n  \"hybridizes\": \"hybridises\",\n  \"hybridizing\": \"hybridising\",\n  \"hypnotize\": \"hypnotise\",\n  \"hypnotized\": \"hypnotised\",\n  \"hypnotizes\": \"hypnotises\",\n  \"hypnotizing\": \"hypnotising\",\n  \"hypothesize\": \"hypothesise\",\n  \"hypothesized\": \"hypothesised\",\n  \"hypothesizes\": \"hypothesises\",\n  \"hypothesizing\": \"hypothesising\",\n  \"idealization\": \"idealisation\",\n  \"idealize\": \"idealise\",\n  \"idealized\": \"idealised\",\n  \"idealizes\": \"idealises\",\n  \"idealizing\": \"idealising\",\n  \"idolize\": \"idolise\",\n  \"idolized\": \"idolised\",\n  \"idolizes\": \"idolises\",\n  \"idolizing\": \"idolising\",\n  \"immobilization\": \"immobilisation\",\n  \"immobilize\": \"immobilise\",\n  \"immobilized\": \"immobilised\",\n  \"immobilizer\": \"immobiliser\",\n  \"immobilizers\": \"immobilisers\",\n  \"immobilizes\": \"immobilises\",\n  \"immobilizing\": \"immobilising\",\n  \"immortalize\": \"immortalise\",\n  \"immortalized\": \"immortalised\",\n  \"immortalizes\": \"immortalises\",\n  \"immortalizing\": \"immortalising\",\n  \"immunization\": \"immunisation\",\n  \"immunize\": \"immunise\",\n  \"immunized\": \"immunised\",\n  \"immunizes\": \"immunises\",\n  \"immunizing\": \"immunising\",\n  \"impaneled\": \"impanelled\",\n  \"impaneling\": \"impanelling\",\n  \"imperiled\": \"imperilled\",\n  \"imperiling\": \"imperilling\",\n  \"individualize\": \"individualise\",\n  \"individualized\": \"individualised\",\n  \"individualizes\": \"individualises\",\n  \"individualizing\": \"individualising\",\n  \"industrialize\": \"industrialise\",\n  \"industrialized\": \"industrialised\",\n  \"industrializes\": \"industrialises\",\n  \"industrializing\": \"industrialising\",\n  \"inflection\": \"inflexion\",\n  \"inflections\": \"inflexions\",\n  \"initialize\": \"initialise\",\n  \"initialized\": \"initialised\",\n  \"initializes\": \"initialises\",\n  \"initializing\": \"initialising\",\n  \"initialed\": \"initialled\",\n  \"initialing\": \"initialling\",\n  \"install\": \"instal\",\n  \"installment\": \"instalment\",\n  \"installments\": \"instalments\",\n  \"installs\": \"instals\",\n  \"instill\": \"instil\",\n  \"instills\": \"instils\",\n  \"institutionalization\": \"institutionalisation\",\n  \"institutionalize\": \"institutionalise\",\n  \"institutionalized\": \"institutionalised\",\n  \"institutionalizes\": \"institutionalises\",\n  \"institutionalizing\": \"institutionalising\",\n  \"intellectualize\": \"intellectualise\",\n  \"intellectualized\": \"intellectualised\",\n  \"intellectualizes\": \"intellectualises\",\n  \"intellectualizing\": \"intellectualising\",\n  \"internalization\": \"internalisation\",\n  \"internalize\": \"internalise\",\n  \"internalized\": \"internalised\",\n  \"internalizes\": \"internalises\",\n  \"internalizing\": \"internalising\",\n  \"internationalization\": \"internationalisation\",\n  \"internationalize\": \"internationalise\",\n  \"internationalized\": \"internationalised\",\n  \"internationalizes\": \"internationalises\",\n  \"internationalizing\": \"internationalising\",\n  \"ionization\": \"ionisation\",\n  \"ionize\": \"ionise\",\n  \"ionized\": \"ionised\",\n  \"ionizer\": \"ioniser\",\n  \"ionizers\": \"ionisers\",\n  \"ionizes\": \"ionises\",\n  \"ionizing\": \"ionising\",\n  \"italicize\": \"italicise\",\n  \"italicized\": \"italicised\",\n  \"italicizes\": \"italicises\",\n  \"italicizing\": \"italicising\",\n  \"itemize\": \"itemise\",\n  \"itemized\": \"itemised\",\n  \"itemizes\": \"itemises\",\n  \"itemizing\": \"itemising\",\n  \"jeopardize\": \"jeopardise\",\n  \"jeopardized\": \"jeopardised\",\n  \"jeopardizes\": \"jeopardises\",\n  \"jeopardizing\": \"jeopardising\",\n  \"jeweled\": \"jewelled\",\n  \"jeweler\": \"jeweller\",\n  \"jewelers\": \"jewellers\",\n  \"jewelry\": \"jewellery\",\n  \"judgment\": \"judgement\",\n  \"kilogram\": \"kilogramme\",\n  \"kilograms\": \"kilogrammes\",\n  \"kilometer\": \"kilometre\",\n  \"kilometers\": \"kilometres\",\n  \"labeled\": \"labelled\",\n  \"labeling\": \"labelling\",\n  \"labor\": \"labour\",\n  \"labored\": \"laboured\",\n  \"laborer\": \"labourer\",\n  \"laborers\": \"labourers\",\n  \"laboring\": \"labouring\",\n  \"labors\": \"labours\",\n  \"lackluster\": \"lacklustre\",\n  \"legalization\": \"legalisation\",\n  \"legalize\": \"legalise\",\n  \"legalized\": \"legalised\",\n  \"legalizes\": \"legalises\",\n  \"legalizing\": \"legalising\",\n  \"legitimize\": \"legitimise\",\n  \"legitimized\": \"legitimised\",\n  \"legitimizes\": \"legitimises\",\n  \"legitimizing\": \"legitimising\",\n  \"leukemia\": \"leukaemia\",\n  \"leveled\": \"levelled\",\n  \"leveler\": \"leveller\",\n  \"levelers\": \"levellers\",\n  \"leveling\": \"levelling\",\n  \"libeled\": \"libelled\",\n  \"libeling\": \"libelling\",\n  \"libelous\": \"libellous\",\n  \"liberalization\": \"liberalisation\",\n  \"liberalize\": \"liberalise\",\n  \"liberalized\": \"liberalised\",\n  \"liberalizes\": \"liberalises\",\n  \"liberalizing\": \"liberalising\",\n  \"license\": \"licence\",\n  \"licensed\": \"licenced\",\n  \"licenses\": \"licences\",\n  \"licensing\": \"licencing\",\n  \"likable\": \"likeable\",\n  \"lionization\": \"lionisation\",\n  \"lionize\": \"lionise\",\n  \"lionized\": \"lionised\",\n  \"lionizes\": \"lionises\",\n  \"lionizing\": \"lionising\",\n  \"liquidize\": \"liquidise\",\n  \"liquidized\": \"liquidised\",\n  \"liquidizer\": \"liquidiser\",\n  \"liquidizers\": \"liquidisers\",\n  \"liquidizes\": \"liquidises\",\n  \"liquidizing\": \"liquidising\",\n  \"liter\": \"litre\",\n  \"liters\": \"litres\",\n  \"localize\": \"localise\",\n  \"localized\": \"localised\",\n  \"localizes\": \"localises\",\n  \"localizing\": \"localising\",\n  \"louver\": \"louvre\",\n  \"louvered\": \"louvred\",\n  \"louvers\": \"louvres\",\n  \"luster\": \"lustre\",\n  \"magnetize\": \"magnetise\",\n  \"magnetized\": \"magnetised\",\n  \"magnetizes\": \"magnetises\",\n  \"magnetizing\": \"magnetising\",\n  \"maneuverability\": \"manoeuvrability\",\n  \"maneuverable\": \"manoeuvrable\",\n  \"maneuver\": \"manoeuvre\",\n  \"maneuvered\": \"manoeuvred\",\n  \"maneuvers\": \"manoeuvres\",\n  \"maneuvering\": \"manoeuvring\",\n  \"maneuverings\": \"manoeuvrings\",\n  \"marginalization\": \"marginalisation\",\n  \"marginalize\": \"marginalise\",\n  \"marginalized\": \"marginalised\",\n  \"marginalizes\": \"marginalises\",\n  \"marginalizing\": \"marginalising\",\n  \"marshaled\": \"marshalled\",\n  \"marshaling\": \"marshalling\",\n  \"marveled\": \"marvelled\",\n  \"marveling\": \"marvelling\",\n  \"marvelous\": \"marvellous\",\n  \"marvelously\": \"marvellously\",\n  \"materialization\": \"materialisation\",\n  \"materialize\": \"materialise\",\n  \"materialized\": \"materialised\",\n  \"materializes\": \"materialises\",\n  \"materializing\": \"materialising\",\n  \"maximization\": \"maximisation\",\n  \"maximize\": \"maximise\",\n  \"maximized\": \"maximised\",\n  \"maximizes\": \"maximises\",\n  \"maximizing\": \"maximising\",\n  \"meager\": \"meagre\",\n  \"mechanization\": \"mechanisation\",\n  \"mechanize\": \"mechanise\",\n  \"mechanized\": \"mechanised\",\n  \"mechanizes\": \"mechanises\",\n  \"mechanizing\": \"mechanising\",\n  \"medieval\": \"mediaeval\",\n  \"memorialize\": \"memorialise\",\n  \"memorialized\": \"memorialised\",\n  \"memorializes\": \"memorialises\",\n  \"memorializing\": \"memorialising\",\n  \"memorize\": \"memorise\",\n  \"memorized\": \"memorised\",\n  \"memorizes\": \"memorises\",\n  \"memorizing\": \"memorising\",\n  \"mesmerize\": \"mesmerise\",\n  \"mesmerized\": \"mesmerised\",\n  \"mesmerizes\": \"mesmerises\",\n  \"mesmerizing\": \"mesmerising\",\n  \"metabolize\": \"metabolise\",\n  \"metabolized\": \"metabolised\",\n  \"metabolizes\": \"metabolises\",\n  \"metabolizing\": \"metabolising\",\n  \"meter\": \"metre\",\n  \"meters\": \"metres\",\n  \"micrometer\": \"micrometre\",\n  \"micrometers\": \"micrometres\",\n  \"militarize\": \"militarise\",\n  \"militarized\": \"militarised\",\n  \"militarizes\": \"militarises\",\n  \"militarizing\": \"militarising\",\n  \"milligram\": \"milligramme\",\n  \"milligrams\": \"milligrammes\",\n  \"milliliter\": \"millilitre\",\n  \"milliliters\": \"millilitres\",\n  \"millimeter\": \"millimetre\",\n  \"millimeters\": \"millimetres\",\n  \"miniaturization\": \"miniaturisation\",\n  \"miniaturize\": \"miniaturise\",\n  \"miniaturized\": \"miniaturised\",\n  \"miniaturizes\": \"miniaturises\",\n  \"miniaturizing\": \"miniaturising\",\n  \"minibusses\": \"minibuses\",\n  \"minimize\": \"minimise\",\n  \"minimized\": \"minimised\",\n  \"minimizes\": \"minimises\",\n  \"minimizing\": \"minimising\",\n  \"misbehavior\": \"misbehaviour\",\n  \"misdemeanor\": \"misdemeanour\",\n  \"misdemeanors\": \"misdemeanours\",\n  \"misspelled\": \"misspelt\",\n  \"miter\": \"mitre\",\n  \"miters\": \"mitres\",\n  \"mobilization\": \"mobilisation\",\n  \"mobilize\": \"mobilise\",\n  \"mobilized\": \"mobilised\",\n  \"mobilizes\": \"mobilises\",\n  \"mobilizing\": \"mobilising\",\n  \"modeled\": \"modelled\",\n  \"modeler\": \"modeller\",\n  \"modelers\": \"modellers\",\n  \"modeling\": \"modelling\",\n  \"modernize\": \"modernise\",\n  \"modernized\": \"modernised\",\n  \"modernizes\": \"modernises\",\n  \"modernizing\": \"modernising\",\n  \"moisturize\": \"moisturise\",\n  \"moisturized\": \"moisturised\",\n  \"moisturizer\": \"moisturiser\",\n  \"moisturizers\": \"moisturisers\",\n  \"moisturizes\": \"moisturises\",\n  \"moisturizing\": \"moisturising\",\n  \"monolog\": \"monologue\",\n  \"monologs\": \"monologues\",\n  \"monopolization\": \"monopolisation\",\n  \"monopolize\": \"monopolise\",\n  \"monopolized\": \"monopolised\",\n  \"monopolizes\": \"monopolises\",\n  \"monopolizing\": \"monopolising\",\n  \"moralize\": \"moralise\",\n  \"moralized\": \"moralised\",\n  \"moralizes\": \"moralises\",\n  \"moralizing\": \"moralising\",\n  \"motorized\": \"motorised\",\n  \"mold\": \"mould\",\n  \"molded\": \"moulded\",\n  \"molder\": \"moulder\",\n  \"moldered\": \"mouldered\",\n  \"moldering\": \"mouldering\",\n  \"molders\": \"moulders\",\n  \"moldier\": \"mouldier\",\n  \"moldiest\": \"mouldiest\",\n  \"molding\": \"moulding\",\n  \"moldings\": \"mouldings\",\n  \"molds\": \"moulds\",\n  \"moldy\": \"mouldy\",\n  \"molt\": \"moult\",\n  \"molted\": \"moulted\",\n  \"molting\": \"moulting\",\n  \"molts\": \"moults\",\n  \"mustache\": \"moustache\",\n  \"mustached\": \"moustached\",\n  \"mustaches\": \"moustaches\",\n  \"mustachioed\": \"moustachioed\",\n  \"multicolored\": \"multicoloured\",\n  \"nationalization\": \"nationalisation\",\n  \"nationalizations\": \"nationalisations\",\n  \"nationalize\": \"nationalise\",\n  \"nationalized\": \"nationalised\",\n  \"nationalizes\": \"nationalises\",\n  \"nationalizing\": \"nationalising\",\n  \"naturalization\": \"naturalisation\",\n  \"naturalize\": \"naturalise\",\n  \"naturalized\": \"naturalised\",\n  \"naturalizes\": \"naturalises\",\n  \"naturalizing\": \"naturalising\",\n  \"neighbor\": \"neighbour\",\n  \"neighborhood\": \"neighbourhood\",\n  \"neighborhoods\": \"neighbourhoods\",\n  \"neighboring\": \"neighbouring\",\n  \"neighborliness\": \"neighbourliness\",\n  \"neighborly\": \"neighbourly\",\n  \"neighbors\": \"neighbours\",\n  \"neutralization\": \"neutralisation\",\n  \"neutralize\": \"neutralise\",\n  \"neutralized\": \"neutralised\",\n  \"neutralizes\": \"neutralises\",\n  \"neutralizing\": \"neutralising\",\n  \"normalization\": \"normalisation\",\n  \"normalize\": \"normalise\",\n  \"normalized\": \"normalised\",\n  \"normalizes\": \"normalises\",\n  \"normalizing\": \"normalising\",\n  \"odor\": \"odour\",\n  \"odorless\": \"odourless\",\n  \"odors\": \"odours\",\n  \"esophagus\": \"oesophagus\",\n  \"esophaguses\": \"oesophaguses\",\n  \"estrogen\": \"oestrogen\",\n  \"offense\": \"offence\",\n  \"offenses\": \"offences\",\n  \"omelet\": \"omelette\",\n  \"omelets\": \"omelettes\",\n  \"optimize\": \"optimise\",\n  \"optimized\": \"optimised\",\n  \"optimizes\": \"optimises\",\n  \"optimizing\": \"optimising\",\n  \"organization\": \"organisation\",\n  \"organizational\": \"organisational\",\n  \"organizations\": \"organisations\",\n  \"organize\": \"organise\",\n  \"organized\": \"organised\",\n  \"organizer\": \"organiser\",\n  \"organizers\": \"organisers\",\n  \"organizes\": \"organises\",\n  \"organizing\": \"organising\",\n  \"orthopedic\": \"orthopaedic\",\n  \"orthopedics\": \"orthopaedics\",\n  \"ostracize\": \"ostracise\",\n  \"ostracized\": \"ostracised\",\n  \"ostracizes\": \"ostracises\",\n  \"ostracizing\": \"ostracising\",\n  \"outmaneuver\": \"outmanoeuvre\",\n  \"outmaneuvered\": \"outmanoeuvred\",\n  \"outmaneuvers\": \"outmanoeuvres\",\n  \"outmaneuvering\": \"outmanoeuvring\",\n  \"overemphasize\": \"overemphasise\",\n  \"overemphasized\": \"overemphasised\",\n  \"overemphasizes\": \"overemphasises\",\n  \"overemphasizing\": \"overemphasising\",\n  \"oxidization\": \"oxidisation\",\n  \"oxidize\": \"oxidise\",\n  \"oxidized\": \"oxidised\",\n  \"oxidizes\": \"oxidises\",\n  \"oxidizing\": \"oxidising\",\n  \"pederast\": \"paederast\",\n  \"pederasts\": \"paederasts\",\n  \"pediatric\": \"paediatric\",\n  \"pediatrician\": \"paediatrician\",\n  \"pediatricians\": \"paediatricians\",\n  \"pediatrics\": \"paediatrics\",\n  \"paleolithic\": \"palaeolithic\",\n  \"paleontologist\": \"palaeontologist\",\n  \"paleontologists\": \"palaeontologists\",\n  \"paleontology\": \"palaeontology\",\n  \"paneled\": \"panelled\",\n  \"paneling\": \"panelling\",\n  \"panelist\": \"panellist\",\n  \"panelists\": \"panellists\",\n  \"paralyze\": \"paralyse\",\n  \"paralyzed\": \"paralysed\",\n  \"paralyzes\": \"paralyses\",\n  \"paralyzing\": \"paralysing\",\n  \"parceled\": \"parcelled\",\n  \"parceling\": \"parcelling\",\n  \"parlor\": \"parlour\",\n  \"parlors\": \"parlours\",\n  \"particularize\": \"particularise\",\n  \"particularized\": \"particularised\",\n  \"particularizes\": \"particularises\",\n  \"particularizing\": \"particularising\",\n  \"passivization\": \"passivisation\",\n  \"passivize\": \"passivise\",\n  \"passivized\": \"passivised\",\n  \"passivizes\": \"passivises\",\n  \"passivizing\": \"passivising\",\n  \"pasteurization\": \"pasteurisation\",\n  \"pasteurize\": \"pasteurise\",\n  \"pasteurized\": \"pasteurised\",\n  \"pasteurizes\": \"pasteurises\",\n  \"pasteurizing\": \"pasteurising\",\n  \"patronize\": \"patronise\",\n  \"patronized\": \"patronised\",\n  \"patronizes\": \"patronises\",\n  \"patronizing\": \"patronising\",\n  \"patronizingly\": \"patronisingly\",\n  \"pedaled\": \"pedalled\",\n  \"pedaling\": \"pedalling\",\n  \"pedestrianization\": \"pedestrianisation\",\n  \"pedestrianize\": \"pedestrianise\",\n  \"pedestrianized\": \"pedestrianised\",\n  \"pedestrianizes\": \"pedestrianises\",\n  \"pedestrianizing\": \"pedestrianising\",\n  \"penalize\": \"penalise\",\n  \"penalized\": \"penalised\",\n  \"penalizes\": \"penalises\",\n  \"penalizing\": \"penalising\",\n  \"penciled\": \"pencilled\",\n  \"penciling\": \"pencilling\",\n  \"personalize\": \"personalise\",\n  \"personalized\": \"personalised\",\n  \"personalizes\": \"personalises\",\n  \"personalizing\": \"personalising\",\n  \"pharmacopeia\": \"pharmacopoeia\",\n  \"pharmacopeias\": \"pharmacopoeias\",\n  \"philosophize\": \"philosophise\",\n  \"philosophized\": \"philosophised\",\n  \"philosophizes\": \"philosophises\",\n  \"philosophizing\": \"philosophising\",\n  \"filter\": \"philtre\",\n  \"filters\": \"philtres\",\n  \"phony\": \"phoney\",\n  \"plagiarize\": \"plagiarise\",\n  \"plagiarized\": \"plagiarised\",\n  \"plagiarizes\": \"plagiarises\",\n  \"plagiarizing\": \"plagiarising\",\n  \"plow\": \"plough\",\n  \"plowed\": \"ploughed\",\n  \"plowing\": \"ploughing\",\n  \"plowman\": \"ploughman\",\n  \"plowmen\": \"ploughmen\",\n  \"plows\": \"ploughs\",\n  \"plowshare\": \"ploughshare\",\n  \"plowshares\": \"ploughshares\",\n  \"polarization\": \"polarisation\",\n  \"polarize\": \"polarise\",\n  \"polarized\": \"polarised\",\n  \"polarizes\": \"polarises\",\n  \"polarizing\": \"polarising\",\n  \"politicization\": \"politicisation\",\n  \"politicize\": \"politicise\",\n  \"politicized\": \"politicised\",\n  \"politicizes\": \"politicises\",\n  \"politicizing\": \"politicising\",\n  \"popularization\": \"popularisation\",\n  \"popularize\": \"popularise\",\n  \"popularized\": \"popularised\",\n  \"popularizes\": \"popularises\",\n  \"popularizing\": \"popularising\",\n  \"practice\": \"practise\",\n  \"practiced\": \"practised\",\n  \"practices\": \"practises\",\n  \"practicing\": \"practising\",\n  \"presidium\": \"praesidium\",\n  \"presidiums\": \"praesidiums\",\n  \"pressurization\": \"pressurisation\",\n  \"pressurize\": \"pressurise\",\n  \"pressurized\": \"pressurised\",\n  \"pressurizes\": \"pressurises\",\n  \"pressurizing\": \"pressurising\",\n  \"pretense\": \"pretence\",\n  \"pretenses\": \"pretences\",\n  \"primeval\": \"primaeval\",\n  \"prioritization\": \"prioritisation\",\n  \"prioritize\": \"prioritise\",\n  \"prioritized\": \"prioritised\",\n  \"prioritizes\": \"prioritises\",\n  \"prioritizing\": \"prioritising\",\n  \"privatization\": \"privatisation\",\n  \"privatizations\": \"privatisations\",\n  \"privatize\": \"privatise\",\n  \"privatized\": \"privatised\",\n  \"privatizes\": \"privatises\",\n  \"privatizing\": \"privatising\",\n  \"professionalization\": \"professionalisation\",\n  \"professionalize\": \"professionalise\",\n  \"professionalized\": \"professionalised\",\n  \"professionalizes\": \"professionalises\",\n  \"professionalizing\": \"professionalising\",\n  \"program\": \"programme\",\n  \"programs\": \"programmes\",\n  \"prolog\": \"prologue\",\n  \"prologs\": \"prologues\",\n  \"propagandize\": \"propagandise\",\n  \"propagandized\": \"propagandised\",\n  \"propagandizes\": \"propagandises\",\n  \"propagandizing\": \"propagandising\",\n  \"proselytize\": \"proselytise\",\n  \"proselytized\": \"proselytised\",\n  \"proselytizer\": \"proselytiser\",\n  \"proselytizers\": \"proselytisers\",\n  \"proselytizes\": \"proselytises\",\n  \"proselytizing\": \"proselytising\",\n  \"psychoanalyze\": \"psychoanalyse\",\n  \"psychoanalyzed\": \"psychoanalysed\",\n  \"psychoanalyzes\": \"psychoanalyses\",\n  \"psychoanalyzing\": \"psychoanalysing\",\n  \"publicize\": \"publicise\",\n  \"publicized\": \"publicised\",\n  \"publicizes\": \"publicises\",\n  \"publicizing\": \"publicising\",\n  \"pulverization\": \"pulverisation\",\n  \"pulverize\": \"pulverise\",\n  \"pulverized\": \"pulverised\",\n  \"pulverizes\": \"pulverises\",\n  \"pulverizing\": \"pulverising\",\n  \"pummel\": \"pummelled\",\n  \"pummeled\": \"pummelling\",\n  \"pajama\": \"pyjama\",\n  \"pajamas\": \"pyjamas\",\n  \"pizzazz\": \"pzazz\",\n  \"quarreled\": \"quarrelled\",\n  \"quarreling\": \"quarrelling\",\n  \"radicalize\": \"radicalise\",\n  \"radicalized\": \"radicalised\",\n  \"radicalizes\": \"radicalises\",\n  \"radicalizing\": \"radicalising\",\n  \"rancor\": \"rancour\",\n  \"randomize\": \"randomise\",\n  \"randomized\": \"randomised\",\n  \"randomizes\": \"randomises\",\n  \"randomizing\": \"randomising\",\n  \"rationalization\": \"rationalisation\",\n  \"rationalizations\": \"rationalisations\",\n  \"rationalize\": \"rationalise\",\n  \"rationalized\": \"rationalised\",\n  \"rationalizes\": \"rationalises\",\n  \"rationalizing\": \"rationalising\",\n  \"raveled\": \"ravelled\",\n  \"raveling\": \"ravelling\",\n  \"realizable\": \"realisable\",\n  \"realization\": \"realisation\",\n  \"realizations\": \"realisations\",\n  \"realize\": \"realise\",\n  \"realized\": \"realised\",\n  \"realizes\": \"realises\",\n  \"realizing\": \"realising\",\n  \"recognizable\": \"recognisable\",\n  \"recognizably\": \"recognisably\",\n  \"recognizance\": \"recognisance\",\n  \"recognize\": \"recognise\",\n  \"recognized\": \"recognised\",\n  \"recognizes\": \"recognises\",\n  \"recognizing\": \"recognising\",\n  \"reconnoiter\": \"reconnoitre\",\n  \"reconnoitered\": \"reconnoitred\",\n  \"reconnoiters\": \"reconnoitres\",\n  \"reconnoitering\": \"reconnoitring\",\n  \"refueled\": \"refuelled\",\n  \"refueling\": \"refuelling\",\n  \"regularization\": \"regularisation\",\n  \"regularize\": \"regularise\",\n  \"regularized\": \"regularised\",\n  \"regularizes\": \"regularises\",\n  \"regularizing\": \"regularising\",\n  \"remodeled\": \"remodelled\",\n  \"remodeling\": \"remodelling\",\n  \"remold\": \"remould\",\n  \"remolded\": \"remoulded\",\n  \"remolding\": \"remoulding\",\n  \"remolds\": \"remoulds\",\n  \"reorganization\": \"reorganisation\",\n  \"reorganizations\": \"reorganisations\",\n  \"reorganize\": \"reorganise\",\n  \"reorganized\": \"reorganised\",\n  \"reorganizes\": \"reorganises\",\n  \"reorganizing\": \"reorganising\",\n  \"reveled\": \"revelled\",\n  \"reveler\": \"reveller\",\n  \"revelers\": \"revellers\",\n  \"reveling\": \"revelling\",\n  \"revitalize\": \"revitalise\",\n  \"revitalized\": \"revitalised\",\n  \"revitalizes\": \"revitalises\",\n  \"revitalizing\": \"revitalising\",\n  \"revolutionize\": \"revolutionise\",\n  \"revolutionized\": \"revolutionised\",\n  \"revolutionizes\": \"revolutionises\",\n  \"revolutionizing\": \"revolutionising\",\n  \"rhapsodize\": \"rhapsodise\",\n  \"rhapsodized\": \"rhapsodised\",\n  \"rhapsodizes\": \"rhapsodises\",\n  \"rhapsodizing\": \"rhapsodising\",\n  \"rigor\": \"rigour\",\n  \"rigors\": \"rigours\",\n  \"ritualized\": \"ritualised\",\n  \"rivaled\": \"rivalled\",\n  \"rivaling\": \"rivalling\",\n  \"romanticize\": \"romanticise\",\n  \"romanticized\": \"romanticised\",\n  \"romanticizes\": \"romanticises\",\n  \"romanticizing\": \"romanticising\",\n  \"rumor\": \"rumour\",\n  \"rumored\": \"rumoured\",\n  \"rumors\": \"rumours\",\n  \"saber\": \"sabre\",\n  \"sabers\": \"sabres\",\n  \"saltpeter\": \"saltpetre\",\n  \"sanitize\": \"sanitise\",\n  \"sanitized\": \"sanitised\",\n  \"sanitizes\": \"sanitises\",\n  \"sanitizing\": \"sanitising\",\n  \"satirize\": \"satirise\",\n  \"satirized\": \"satirised\",\n  \"satirizes\": \"satirises\",\n  \"satirizing\": \"satirising\",\n  \"savior\": \"saviour\",\n  \"saviors\": \"saviours\",\n  \"savor\": \"savour\",\n  \"savored\": \"savoured\",\n  \"savories\": \"savouries\",\n  \"savoring\": \"savouring\",\n  \"savors\": \"savours\",\n  \"savory\": \"savoury\",\n  \"scandalize\": \"scandalise\",\n  \"scandalized\": \"scandalised\",\n  \"scandalizes\": \"scandalises\",\n  \"scandalizing\": \"scandalising\",\n  \"skeptic\": \"sceptic\",\n  \"skeptical\": \"sceptical\",\n  \"skeptically\": \"sceptically\",\n  \"skepticism\": \"scepticism\",\n  \"skeptics\": \"sceptics\",\n  \"scepter\": \"sceptre\",\n  \"scepters\": \"sceptres\",\n  \"scrutinize\": \"scrutinise\",\n  \"scrutinized\": \"scrutinised\",\n  \"scrutinizes\": \"scrutinises\",\n  \"scrutinizing\": \"scrutinising\",\n  \"secularization\": \"secularisation\",\n  \"secularize\": \"secularise\",\n  \"secularized\": \"secularised\",\n  \"secularizes\": \"secularises\",\n  \"secularizing\": \"secularising\",\n  \"sensationalize\": \"sensationalise\",\n  \"sensationalized\": \"sensationalised\",\n  \"sensationalizes\": \"sensationalises\",\n  \"sensationalizing\": \"sensationalising\",\n  \"sensitize\": \"sensitise\",\n  \"sensitized\": \"sensitised\",\n  \"sensitizes\": \"sensitises\",\n  \"sensitizing\": \"sensitising\",\n  \"sentimentalize\": \"sentimentalise\",\n  \"sentimentalized\": \"sentimentalised\",\n  \"sentimentalizes\": \"sentimentalises\",\n  \"sentimentalizing\": \"sentimentalising\",\n  \"sepulcher\": \"sepulchre\",\n  \"sepulchers\": \"sepulchres\",\n  \"serialization\": \"serialisation\",\n  \"serializations\": \"serialisations\",\n  \"serialize\": \"serialise\",\n  \"serialized\": \"serialised\",\n  \"serializes\": \"serialises\",\n  \"serializing\": \"serialising\",\n  \"sermonize\": \"sermonise\",\n  \"sermonized\": \"sermonised\",\n  \"sermonizes\": \"sermonises\",\n  \"sermonizing\": \"sermonising\",\n  \"sheik\": \"sheikh\",\n  \"shoveled\": \"shovelled\",\n  \"shoveling\": \"shovelling\",\n  \"shriveled\": \"shrivelled\",\n  \"shriveling\": \"shrivelling\",\n  \"signalize\": \"signalise\",\n  \"signalized\": \"signalised\",\n  \"signalizes\": \"signalises\",\n  \"signalizing\": \"signalising\",\n  \"signaled\": \"signalled\",\n  \"signaling\": \"signalling\",\n  \"smolder\": \"smoulder\",\n  \"smoldered\": \"smouldered\",\n  \"smoldering\": \"smouldering\",\n  \"smolders\": \"smoulders\",\n  \"sniveled\": \"snivelled\",\n  \"sniveling\": \"snivelling\",\n  \"snorkeled\": \"snorkelled\",\n  \"snorkeling\": \"snorkelling\",\n  \"snowplow\": \"snowploughs\",\n  \"socialization\": \"socialisation\",\n  \"socialize\": \"socialise\",\n  \"socialized\": \"socialised\",\n  \"socializes\": \"socialises\",\n  \"socializing\": \"socialising\",\n  \"solemnize\": \"solemnise\",\n  \"solemnized\": \"solemnised\",\n  \"solemnizes\": \"solemnises\",\n  \"solemnizing\": \"solemnising\",\n  \"somber\": \"sombre\",\n  \"specialization\": \"specialisation\",\n  \"specializations\": \"specialisations\",\n  \"specialize\": \"specialise\",\n  \"specialized\": \"specialised\",\n  \"specializes\": \"specialises\",\n  \"specializing\": \"specialising\",\n  \"specter\": \"spectre\",\n  \"specters\": \"spectres\",\n  \"spiraled\": \"spiralled\",\n  \"spiraling\": \"spiralling\",\n  \"splendor\": \"splendour\",\n  \"splendors\": \"splendours\",\n  \"squirreled\": \"squirrelled\",\n  \"squirreling\": \"squirrelling\",\n  \"stabilization\": \"stabilisation\",\n  \"stabilize\": \"stabilise\",\n  \"stabilized\": \"stabilised\",\n  \"stabilizer\": \"stabiliser\",\n  \"stabilizers\": \"stabilisers\",\n  \"stabilizes\": \"stabilises\",\n  \"stabilizing\": \"stabilising\",\n  \"standardization\": \"standardisation\",\n  \"standardize\": \"standardise\",\n  \"standardized\": \"standardised\",\n  \"standardizes\": \"standardises\",\n  \"standardizing\": \"standardising\",\n  \"stenciled\": \"stencilled\",\n  \"stenciling\": \"stencilling\",\n  \"sterilization\": \"sterilisation\",\n  \"sterilizations\": \"sterilisations\",\n  \"sterilize\": \"sterilise\",\n  \"sterilized\": \"sterilised\",\n  \"sterilizer\": \"steriliser\",\n  \"sterilizers\": \"sterilisers\",\n  \"sterilizes\": \"sterilises\",\n  \"sterilizing\": \"sterilising\",\n  \"stigmatization\": \"stigmatisation\",\n  \"stigmatize\": \"stigmatise\",\n  \"stigmatized\": \"stigmatised\",\n  \"stigmatizes\": \"stigmatises\",\n  \"stigmatizing\": \"stigmatising\",\n  \"story\": \"storey\",\n  \"stories\": \"storeys\",\n  \"subsidization\": \"subsidisation\",\n  \"subsidize\": \"subsidise\",\n  \"subsidized\": \"subsidised\",\n  \"subsidizer\": \"subsidiser\",\n  \"subsidizers\": \"subsidisers\",\n  \"subsidizes\": \"subsidises\",\n  \"subsidizing\": \"subsidising\",\n  \"succor\": \"succour\",\n  \"succored\": \"succoured\",\n  \"succoring\": \"succouring\",\n  \"succors\": \"succours\",\n  \"sulfate\": \"sulphate\",\n  \"sulfates\": \"sulphates\",\n  \"sulfide\": \"sulphide\",\n  \"sulfides\": \"sulphides\",\n  \"sulfur\": \"sulphur\",\n  \"sulfurous\": \"sulphurous\",\n  \"summarize\": \"summarise\",\n  \"summarized\": \"summarised\",\n  \"summarizes\": \"summarises\",\n  \"summarizing\": \"summarising\",\n  \"swiveled\": \"swivelled\",\n  \"swiveling\": \"swivelling\",\n  \"symbolize\": \"symbolise\",\n  \"symbolized\": \"symbolised\",\n  \"symbolizes\": \"symbolises\",\n  \"symbolizing\": \"symbolising\",\n  \"sympathize\": \"sympathise\",\n  \"sympathized\": \"sympathised\",\n  \"sympathizer\": \"sympathiser\",\n  \"sympathizers\": \"sympathisers\",\n  \"sympathizes\": \"sympathises\",\n  \"sympathizing\": \"sympathising\",\n  \"synchronization\": \"synchronisation\",\n  \"synchronize\": \"synchronise\",\n  \"synchronized\": \"synchronised\",\n  \"synchronizes\": \"synchronises\",\n  \"synchronizing\": \"synchronising\",\n  \"synthesize\": \"synthesise\",\n  \"synthesized\": \"synthesised\",\n  \"synthesizer\": \"synthesiser\",\n  \"synthesizers\": \"synthesisers\",\n  \"synthesizes\": \"synthesises\",\n  \"synthesizing\": \"synthesising\",\n  \"siphon\": \"syphon\",\n  \"siphoned\": \"syphoned\",\n  \"siphoning\": \"syphoning\",\n  \"siphons\": \"syphons\",\n  \"systematization\": \"systematisation\",\n  \"systematize\": \"systematise\",\n  \"systematized\": \"systematised\",\n  \"systematizes\": \"systematises\",\n  \"systematizing\": \"systematising\",\n  \"tantalize\": \"tantalise\",\n  \"tantalized\": \"tantalised\",\n  \"tantalizes\": \"tantalises\",\n  \"tantalizing\": \"tantalising\",\n  \"tantalizingly\": \"tantalisingly\",\n  \"tasseled\": \"tasselled\",\n  \"technicolor\": \"technicolour\",\n  \"temporize\": \"temporise\",\n  \"temporized\": \"temporised\",\n  \"temporizes\": \"temporises\",\n  \"temporizing\": \"temporising\",\n  \"tenderize\": \"tenderise\",\n  \"tenderized\": \"tenderised\",\n  \"tenderizes\": \"tenderises\",\n  \"tenderizing\": \"tenderising\",\n  \"terrorize\": \"terrorise\",\n  \"terrorized\": \"terrorised\",\n  \"terrorizes\": \"terrorises\",\n  \"terrorizing\": \"terrorising\",\n  \"theater\": \"theatre\",\n  \"theatergoer\": \"theatregoer\",\n  \"theatergoers\": \"theatregoers\",\n  \"theaters\": \"theatres\",\n  \"theorize\": \"theorise\",\n  \"theorized\": \"theorised\",\n  \"theorizes\": \"theorises\",\n  \"theorizing\": \"theorising\",\n  \"ton\": \"tonne\",\n  \"tons\": \"tonnes\",\n  \"toweled\": \"towelled\",\n  \"toweling\": \"towelling\",\n  \"toxemia\": \"toxaemia\",\n  \"tranquilize\": \"tranquillize\",\n  \"tranquilized\": \"tranquillized\",\n  \"tranquilizer\": \"tranquillizer\",\n  \"tranquilizers\": \"tranquillizers\",\n  \"tranquilizes\": \"tranquillizes\",\n  \"tranquilizing\": \"tranquillizing\",\n  \"tranquility\": \"tranquilly\",\n  \"transistorized\": \"transistorised\",\n  \"traumatize\": \"traumatise\",\n  \"traumatized\": \"traumatised\",\n  \"traumatizes\": \"traumatises\",\n  \"traumatizing\": \"traumatising\",\n  \"traveled\": \"travelled\",\n  \"traveler\": \"traveller\",\n  \"travelers\": \"travellers\",\n  \"traveling\": \"travelling\",\n  \"travelog\": \"travelogue\",\n  \"travelogs\": \"travelogues\",\n  \"trialed\": \"trialled\",\n  \"trialing\": \"trialling\",\n  \"tricolor\": \"tricolour\",\n  \"tricolors\": \"tricolours\",\n  \"trivialize\": \"trivialise\",\n  \"trivialized\": \"trivialised\",\n  \"trivializes\": \"trivialises\",\n  \"trivializing\": \"trivialising\",\n  \"tumor\": \"tumour\",\n  \"tumors\": \"tumours\",\n  \"tunneled\": \"tunnelled\",\n  \"tunneling\": \"tunnelling\",\n  \"tyrannize\": \"tyrannise\",\n  \"tyrannized\": \"tyrannised\",\n  \"tyrannizes\": \"tyrannises\",\n  \"tyrannizing\": \"tyrannising\",\n  \"tire\": \"tyre\",\n  \"tires\": \"tyres\",\n  \"unauthorized\": \"unauthorised\",\n  \"uncivilized\": \"uncivilised\",\n  \"underutilized\": \"underutilised\",\n  \"unequaled\": \"unequalled\",\n  \"unfavorable\": \"unfavourable\",\n  \"unfavorably\": \"unfavourably\",\n  \"unionization\": \"unionisation\",\n  \"unionize\": \"unionise\",\n  \"unionized\": \"unionised\",\n  \"unionizes\": \"unionises\",\n  \"unionizing\": \"unionising\",\n  \"unorganized\": \"unorganised\",\n  \"unraveled\": \"unravelled\",\n  \"unraveling\": \"unravelling\",\n  \"unrecognizable\": \"unrecognisable\",\n  \"unrecognized\": \"unrecognised\",\n  \"unrivaled\": \"unrivalled\",\n  \"unsavory\": \"unsavoury\",\n  \"untrammeled\": \"untrammelled\",\n  \"urbanization\": \"urbanisation\",\n  \"urbanize\": \"urbanise\",\n  \"urbanized\": \"urbanised\",\n  \"urbanizes\": \"urbanises\",\n  \"urbanizing\": \"urbanising\",\n  \"utilizable\": \"utilisable\",\n  \"utilization\": \"utilisation\",\n  \"utilize\": \"utilise\",\n  \"utilized\": \"utilised\",\n  \"utilizes\": \"utilises\",\n  \"utilizing\": \"utilising\",\n  \"valor\": \"valour\",\n  \"vandalize\": \"vandalise\",\n  \"vandalized\": \"vandalised\",\n  \"vandalizes\": \"vandalises\",\n  \"vandalizing\": \"vandalising\",\n  \"vaporization\": \"vaporisation\",\n  \"vaporize\": \"vaporise\",\n  \"vaporized\": \"vaporised\",\n  \"vaporizes\": \"vaporises\",\n  \"vaporizing\": \"vaporising\",\n  \"vapor\": \"vapour\",\n  \"vapors\": \"vapours\",\n  \"verbalize\": \"verbalise\",\n  \"verbalized\": \"verbalised\",\n  \"verbalizes\": \"verbalises\",\n  \"verbalizing\": \"verbalising\",\n  \"victimization\": \"victimisation\",\n  \"victimize\": \"victimise\",\n  \"victimized\": \"victimised\",\n  \"victimizes\": \"victimises\",\n  \"victimizing\": \"victimising\",\n  \"videodisk\": \"videodisc\",\n  \"videodisks\": \"videodiscs\",\n  \"vigor\": \"vigour\",\n  \"visualization\": \"visualisation\",\n  \"visualizations\": \"visualisations\",\n  \"visualize\": \"visualise\",\n  \"visualized\": \"visualised\",\n  \"visualizes\": \"visualises\",\n  \"visualizing\": \"visualising\",\n  \"vocalization\": \"vocalisation\",\n  \"vocalizations\": \"vocalisations\",\n  \"vocalize\": \"vocalise\",\n  \"vocalized\": \"vocalised\",\n  \"vocalizes\": \"vocalises\",\n  \"vocalizing\": \"vocalising\",\n  \"vulcanized\": \"vulcanised\",\n  \"vulgarization\": \"vulgarisation\",\n  \"vulgarize\": \"vulgarise\",\n  \"vulgarized\": \"vulgarised\",\n  \"vulgarizes\": \"vulgarises\",\n  \"vulgarizing\": \"vulgarising\",\n  \"wagon\": \"waggon\",\n  \"wagons\": \"waggons\",\n  \"watercolor\": \"watercolour\",\n  \"watercolors\": \"watercolours\",\n  \"weaseled\": \"weaselled\",\n  \"weaseling\": \"weaselling\",\n  \"westernization\": \"westernisation\",\n  \"westernize\": \"westernise\",\n  \"westernized\": \"westernised\",\n  \"westernizes\": \"westernises\",\n  \"westernizing\": \"westernising\",\n  \"womanize\": \"womanise\",\n  \"womanized\": \"womanised\",\n  \"womanizer\": \"womaniser\",\n  \"womanizers\": \"womanisers\",\n  \"womanizes\": \"womanises\",\n  \"womanizing\": \"womanising\",\n  \"woolen\": \"woollen\",\n  \"woolens\": \"woollens\",\n  \"woolies\": \"woollies\",\n  \"wooly\": \"woolly\",\n  \"worshiped\": \"worshipped\",\n  \"worshiping\": \"worshipping\",\n  \"worshiper\": \"worshipper\",\n  \"yodeled\": \"yodelled\",\n  \"yodeling\": \"yodelling\",\n  \"yogurt\": \"yoghurt\",\n  \"yogurts\": \"yoghurts\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "american-to-british-spelling.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
      "sourcesContent": [
        "module.exports = {\r\n  \"accessorize\": \"accessorise\",\r\n  \"accessorized\": \"accessorised\",\r\n  \"accessorizes\": \"accessorises\",\r\n  \"accessorizing\": \"accessorising\",\r\n  \"acclimatization\": \"acclimatisation\",\r\n  \"acclimatize\": \"acclimatise\",\r\n  \"acclimatized\": \"acclimatised\",\r\n  \"acclimatizes\": \"acclimatises\",\r\n  \"acclimatizing\": \"acclimatising\",\r\n  \"accouterments\": \"accoutrements\",\r\n  \"eon\": \"aeon\",\r\n  \"eons\": \"aeons\",\r\n  \"aerogram\": \"aerogramme\",\r\n  \"aerograms\": \"aerogrammes\",\r\n  \"airplane\": \"aeroplane\",\r\n  \"airplanes\": \"aeroplanes\",\r\n  \"etiology\": \"aetiology\",\r\n  \"aging\": \"ageing\",\r\n  \"aggrandizement\": \"aggrandisement\",\r\n  \"agonize\": \"agonise\",\r\n  \"agonized\": \"agonised\",\r\n  \"agonizes\": \"agonises\",\r\n  \"agonizing\": \"agonising\",\r\n  \"agonizingly\": \"agonisingly\",\r\n  \"almanac\": \"almanack\",\r\n  \"almanacs\": \"almanacks\",\r\n  \"aluminum\": \"aluminium\",\r\n  \"amortizable\": \"amortisable\",\r\n  \"amortization\": \"amortisation\",\r\n  \"amortizations\": \"amortisations\",\r\n  \"amortize\": \"amortise\",\r\n  \"amortized\": \"amortised\",\r\n  \"amortizes\": \"amortises\",\r\n  \"amortizing\": \"amortising\",\r\n  \"amphitheater\": \"amphitheatre\",\r\n  \"amphitheaters\": \"amphitheatres\",\r\n  \"anemia\": \"anaemia\",\r\n  \"anemic\": \"anaemic\",\r\n  \"anesthesia\": \"anaesthesia\",\r\n  \"anesthetic\": \"anaesthetic\",\r\n  \"anesthetics\": \"anaesthetics\",\r\n  \"anesthetize\": \"anaesthetize\",\r\n  \"anesthetized\": \"anaesthetized\",\r\n  \"anesthetizes\": \"anaesthetizes\",\r\n  \"anesthetizing\": \"anaesthetizing\",\r\n  \"anesthetist\": \"anaesthetist\",\r\n  \"anesthetists\": \"anaesthetists\",\r\n  \"analog\": \"analogue\",\r\n  \"analogs\": \"analogues\",\r\n  \"analyze\": \"analyse\",\r\n  \"analyzed\": \"analysed\",\r\n  \"analyzes\": \"analyses\",\r\n  \"analyzing\": \"analysing\",\r\n  \"anglicize\": \"anglicise\",\r\n  \"anglicized\": \"anglicised\",\r\n  \"anglicizes\": \"anglicises\",\r\n  \"anglicizing\": \"anglicising\",\r\n  \"annualized\": \"annualised\",\r\n  \"antagonize\": \"antagonise\",\r\n  \"antagonized\": \"antagonised\",\r\n  \"antagonizes\": \"antagonises\",\r\n  \"antagonizing\": \"antagonising\",\r\n  \"apologize\": \"apologise\",\r\n  \"apologized\": \"apologised\",\r\n  \"apologizes\": \"apologises\",\r\n  \"apologizing\": \"apologising\",\r\n  \"appall\": \"appal\",\r\n  \"appalls\": \"appals\",\r\n  \"appetizer\": \"appetiser\",\r\n  \"appetizers\": \"appetisers\",\r\n  \"appetizing\": \"appetising\",\r\n  \"appetizingly\": \"appetisingly\",\r\n  \"arbor\": \"arbour\",\r\n  \"arbors\": \"arbours\",\r\n  \"archeological\": \"archaeological\",\r\n  \"archeologically\": \"archaeologically\",\r\n  \"archeologist\": \"archaeologist\",\r\n  \"archeologists\": \"archaeologists\",\r\n  \"archeology\": \"archaeology\",\r\n  \"ardor\": \"ardour\",\r\n  \"armor\": \"armour\",\r\n  \"armored\": \"armoured\",\r\n  \"armorer\": \"armourer\",\r\n  \"armorers\": \"armourers\",\r\n  \"armories\": \"armouries\",\r\n  \"armory\": \"armoury\",\r\n  \"artifact\": \"artefact\",\r\n  \"artifacts\": \"artefacts\",\r\n  \"authorize\": \"authorise\",\r\n  \"authorized\": \"authorised\",\r\n  \"authorizes\": \"authorises\",\r\n  \"authorizing\": \"authorising\",\r\n  \"ax\": \"axe\",\r\n  \"backpedaled\": \"backpedalled\",\r\n  \"backpedaling\": \"backpedalling\",\r\n  \"banister\": \"bannister\",\r\n  \"banisters\": \"bannisters\",\r\n  \"baptize\": \"baptise\",\r\n  \"baptized\": \"baptised\",\r\n  \"baptizes\": \"baptises\",\r\n  \"baptizing\": \"baptising\",\r\n  \"battleax\": \"battleaxe\",\r\n  \"balk\": \"baulk\",\r\n  \"balked\": \"baulked\",\r\n  \"balking\": \"baulking\",\r\n  \"balks\": \"baulks\",\r\n  \"bedeviled\": \"bedevilled\",\r\n  \"bedeviling\": \"bedevilling\",\r\n  \"behavior\": \"behaviour\",\r\n  \"behavioral\": \"behavioural\",\r\n  \"behaviorism\": \"behaviourism\",\r\n  \"behaviorist\": \"behaviourist\",\r\n  \"behaviorists\": \"behaviourists\",\r\n  \"behaviors\": \"behaviours\",\r\n  \"behoove\": \"behove\",\r\n  \"behooved\": \"behoved\",\r\n  \"behooves\": \"behoves\",\r\n  \"bejeweled\": \"bejewelled\",\r\n  \"belabor\": \"belabour\",\r\n  \"belabored\": \"belaboured\",\r\n  \"belaboring\": \"belabouring\",\r\n  \"belabors\": \"belabours\",\r\n  \"beveled\": \"bevelled\",\r\n  \"bevies\": \"bevvies\",\r\n  \"bevy\": \"bevvy\",\r\n  \"biased\": \"biassed\",\r\n  \"biasing\": \"biassing\",\r\n  \"binging\": \"bingeing\",\r\n  \"bougainvillea\": \"bougainvillaea\",\r\n  \"bougainvilleas\": \"bougainvillaeas\",\r\n  \"bowdlerize\": \"bowdlerise\",\r\n  \"bowdlerized\": \"bowdlerised\",\r\n  \"bowdlerizes\": \"bowdlerises\",\r\n  \"bowdlerizing\": \"bowdlerising\",\r\n  \"breathalyze\": \"breathalyse\",\r\n  \"breathalyzed\": \"breathalysed\",\r\n  \"breathalyzer\": \"breathalyser\",\r\n  \"breathalyzers\": \"breathalysers\",\r\n  \"breathalyzes\": \"breathalyses\",\r\n  \"breathalyzing\": \"breathalysing\",\r\n  \"brutalize\": \"brutalise\",\r\n  \"brutalized\": \"brutalised\",\r\n  \"brutalizes\": \"brutalises\",\r\n  \"brutalizing\": \"brutalising\",\r\n  \"busses\": \"buses\",\r\n  \"bussing\": \"busing\",\r\n  \"cesarean\": \"caesarean\",\r\n  \"cesareans\": \"caesareans\",\r\n  \"caliber\": \"calibre\",\r\n  \"calibers\": \"calibres\",\r\n  \"caliper\": \"calliper\",\r\n  \"calipers\": \"callipers\",\r\n  \"calisthenics\": \"callisthenics\",\r\n  \"canalize\": \"canalise\",\r\n  \"canalized\": \"canalised\",\r\n  \"canalizes\": \"canalises\",\r\n  \"canalizing\": \"canalising\",\r\n  \"canceled\": \"cancelled\",\r\n  \"canceling\": \"cancelling\",\r\n  \"candor\": \"candour\",\r\n  \"cannibalize\": \"cannibalise\",\r\n  \"cannibalized\": \"cannibalised\",\r\n  \"cannibalizes\": \"cannibalises\",\r\n  \"cannibalizing\": \"cannibalising\",\r\n  \"canonize\": \"canonise\",\r\n  \"canonized\": \"canonised\",\r\n  \"canonizes\": \"canonises\",\r\n  \"canonizing\": \"canonising\",\r\n  \"capitalize\": \"capitalise\",\r\n  \"capitalized\": \"capitalised\",\r\n  \"capitalizes\": \"capitalises\",\r\n  \"capitalizing\": \"capitalising\",\r\n  \"caramelize\": \"caramelise\",\r\n  \"caramelized\": \"caramelised\",\r\n  \"caramelizes\": \"caramelises\",\r\n  \"caramelizing\": \"caramelising\",\r\n  \"carbonize\": \"carbonise\",\r\n  \"carbonized\": \"carbonised\",\r\n  \"carbonizes\": \"carbonises\",\r\n  \"carbonizing\": \"carbonising\",\r\n  \"caroled\": \"carolled\",\r\n  \"caroling\": \"carolling\",\r\n  \"catalog\": \"catalogue\",\r\n  \"cataloged\": \"catalogued\",\r\n  \"catalogs\": \"catalogues\",\r\n  \"cataloging\": \"cataloguing\",\r\n  \"catalyze\": \"catalyse\",\r\n  \"catalyzed\": \"catalysed\",\r\n  \"catalyzes\": \"catalyses\",\r\n  \"catalyzing\": \"catalysing\",\r\n  \"categorize\": \"categorise\",\r\n  \"categorized\": \"categorised\",\r\n  \"categorizes\": \"categorises\",\r\n  \"categorizing\": \"categorising\",\r\n  \"cauterize\": \"cauterise\",\r\n  \"cauterized\": \"cauterised\",\r\n  \"cauterizes\": \"cauterises\",\r\n  \"cauterizing\": \"cauterising\",\r\n  \"caviled\": \"cavilled\",\r\n  \"caviling\": \"cavilling\",\r\n  \"centigram\": \"centigramme\",\r\n  \"centigrams\": \"centigrammes\",\r\n  \"centiliter\": \"centilitre\",\r\n  \"centiliters\": \"centilitres\",\r\n  \"centimeter\": \"centimetre\",\r\n  \"centimeters\": \"centimetres\",\r\n  \"centralize\": \"centralise\",\r\n  \"centralized\": \"centralised\",\r\n  \"centralizes\": \"centralises\",\r\n  \"centralizing\": \"centralising\",\r\n  \"center\": \"centre\",\r\n  \"centered\": \"centred\",\r\n  \"centerfold\": \"centrefold\",\r\n  \"centerfolds\": \"centrefolds\",\r\n  \"centerpiece\": \"centrepiece\",\r\n  \"centerpieces\": \"centrepieces\",\r\n  \"centers\": \"centres\",\r\n  \"channeled\": \"channelled\",\r\n  \"channeling\": \"channelling\",\r\n  \"characterize\": \"characterise\",\r\n  \"characterized\": \"characterised\",\r\n  \"characterizes\": \"characterises\",\r\n  \"characterizing\": \"characterising\",\r\n  \"check\": \"cheque\",\r\n  \"checkbook\": \"chequebook\",\r\n  \"checkbooks\": \"chequebooks\",\r\n  \"checkered\": \"chequered\",\r\n  \"checks\": \"cheques\",\r\n  \"chili\": \"chilli\",\r\n  \"chimera\": \"chimaera\",\r\n  \"chimeras\": \"chimaeras\",\r\n  \"chiseled\": \"chiselled\",\r\n  \"chiseling\": \"chiselling\",\r\n  \"circularize\": \"circularise\",\r\n  \"circularized\": \"circularised\",\r\n  \"circularizes\": \"circularises\",\r\n  \"circularizing\": \"circularising\",\r\n  \"civilize\": \"civilise\",\r\n  \"civilized\": \"civilised\",\r\n  \"civilizes\": \"civilises\",\r\n  \"civilizing\": \"civilising\",\r\n  \"clamor\": \"clamour\",\r\n  \"clamored\": \"clamoured\",\r\n  \"clamoring\": \"clamouring\",\r\n  \"clamors\": \"clamours\",\r\n  \"clangor\": \"clangour\",\r\n  \"clarinetist\": \"clarinettist\",\r\n  \"clarinetists\": \"clarinettists\",\r\n  \"collectivize\": \"collectivise\",\r\n  \"collectivized\": \"collectivised\",\r\n  \"collectivizes\": \"collectivises\",\r\n  \"collectivizing\": \"collectivising\",\r\n  \"colonization\": \"colonisation\",\r\n  \"colonize\": \"colonise\",\r\n  \"colonized\": \"colonised\",\r\n  \"colonizer\": \"coloniser\",\r\n  \"colonizers\": \"colonisers\",\r\n  \"colonizes\": \"colonises\",\r\n  \"colonizing\": \"colonising\",\r\n  \"color\": \"colour\",\r\n  \"colorant\": \"colourant\",\r\n  \"colorants\": \"colourants\",\r\n  \"colored\": \"coloured\",\r\n  \"coloreds\": \"coloureds\",\r\n  \"colorful\": \"colourful\",\r\n  \"colorfully\": \"colourfully\",\r\n  \"coloring\": \"colouring\",\r\n  \"colorize\": \"colourize\",\r\n  \"colorized\": \"colourized\",\r\n  \"colorizes\": \"colourizes\",\r\n  \"colorizing\": \"colourizing\",\r\n  \"colorless\": \"colourless\",\r\n  \"colors\": \"colours\",\r\n  \"commercialize\": \"commercialise\",\r\n  \"commercialized\": \"commercialised\",\r\n  \"commercializes\": \"commercialises\",\r\n  \"commercializing\": \"commercialising\",\r\n  \"compartmentalize\": \"compartmentalise\",\r\n  \"compartmentalized\": \"compartmentalised\",\r\n  \"compartmentalizes\": \"compartmentalises\",\r\n  \"compartmentalizing\": \"compartmentalising\",\r\n  \"computerize\": \"computerise\",\r\n  \"computerized\": \"computerised\",\r\n  \"computerizes\": \"computerises\",\r\n  \"computerizing\": \"computerising\",\r\n  \"conceptualize\": \"conceptualise\",\r\n  \"conceptualized\": \"conceptualised\",\r\n  \"conceptualizes\": \"conceptualises\",\r\n  \"conceptualizing\": \"conceptualising\",\r\n  \"connection\": \"connexion\",\r\n  \"connections\": \"connexions\",\r\n  \"contextualize\": \"contextualise\",\r\n  \"contextualized\": \"contextualised\",\r\n  \"contextualizes\": \"contextualises\",\r\n  \"contextualizing\": \"contextualising\",\r\n  \"cozier\": \"cosier\",\r\n  \"cozies\": \"cosies\",\r\n  \"coziest\": \"cosiest\",\r\n  \"cozily\": \"cosily\",\r\n  \"coziness\": \"cosiness\",\r\n  \"cozy\": \"cosy\",\r\n  \"councilor\": \"councillor\",\r\n  \"councilors\": \"councillors\",\r\n  \"counseled\": \"counselled\",\r\n  \"counseling\": \"counselling\",\r\n  \"counselor\": \"counsellor\",\r\n  \"counselors\": \"counsellors\",\r\n  \"crenelated\": \"crenellated\",\r\n  \"criminalize\": \"criminalise\",\r\n  \"criminalized\": \"criminalised\",\r\n  \"criminalizes\": \"criminalises\",\r\n  \"criminalizing\": \"criminalising\",\r\n  \"criticize\": \"criticise\",\r\n  \"criticized\": \"criticised\",\r\n  \"criticizes\": \"criticises\",\r\n  \"criticizing\": \"criticising\",\r\n  \"crueler\": \"crueller\",\r\n  \"cruelest\": \"cruellest\",\r\n  \"crystallization\": \"crystallisation\",\r\n  \"crystallize\": \"crystallise\",\r\n  \"crystallized\": \"crystallised\",\r\n  \"crystallizes\": \"crystallises\",\r\n  \"crystallizing\": \"crystallising\",\r\n  \"cudgeled\": \"cudgelled\",\r\n  \"cudgeling\": \"cudgelling\",\r\n  \"customize\": \"customise\",\r\n  \"customized\": \"customised\",\r\n  \"customizes\": \"customises\",\r\n  \"customizing\": \"customising\",\r\n  \"cipher\": \"cypher\",\r\n  \"ciphers\": \"cyphers\",\r\n  \"decentralization\": \"decentralisation\",\r\n  \"decentralize\": \"decentralise\",\r\n  \"decentralized\": \"decentralised\",\r\n  \"decentralizes\": \"decentralises\",\r\n  \"decentralizing\": \"decentralising\",\r\n  \"decriminalization\": \"decriminalisation\",\r\n  \"decriminalize\": \"decriminalise\",\r\n  \"decriminalized\": \"decriminalised\",\r\n  \"decriminalizes\": \"decriminalises\",\r\n  \"decriminalizing\": \"decriminalising\",\r\n  \"defense\": \"defence\",\r\n  \"defenseless\": \"defenceless\",\r\n  \"defenses\": \"defences\",\r\n  \"dehumanization\": \"dehumanisation\",\r\n  \"dehumanize\": \"dehumanise\",\r\n  \"dehumanized\": \"dehumanised\",\r\n  \"dehumanizes\": \"dehumanises\",\r\n  \"dehumanizing\": \"dehumanising\",\r\n  \"demeanor\": \"demeanour\",\r\n  \"demilitarization\": \"demilitarisation\",\r\n  \"demilitarize\": \"demilitarise\",\r\n  \"demilitarized\": \"demilitarised\",\r\n  \"demilitarizes\": \"demilitarises\",\r\n  \"demilitarizing\": \"demilitarising\",\r\n  \"demobilization\": \"demobilisation\",\r\n  \"demobilize\": \"demobilise\",\r\n  \"demobilized\": \"demobilised\",\r\n  \"demobilizes\": \"demobilises\",\r\n  \"demobilizing\": \"demobilising\",\r\n  \"democratization\": \"democratisation\",\r\n  \"democratize\": \"democratise\",\r\n  \"democratized\": \"democratised\",\r\n  \"democratizes\": \"democratises\",\r\n  \"democratizing\": \"democratising\",\r\n  \"demonize\": \"demonise\",\r\n  \"demonized\": \"demonised\",\r\n  \"demonizes\": \"demonises\",\r\n  \"demonizing\": \"demonising\",\r\n  \"demoralization\": \"demoralisation\",\r\n  \"demoralize\": \"demoralise\",\r\n  \"demoralized\": \"demoralised\",\r\n  \"demoralizes\": \"demoralises\",\r\n  \"demoralizing\": \"demoralising\",\r\n  \"denationalization\": \"denationalisation\",\r\n  \"denationalize\": \"denationalise\",\r\n  \"denationalized\": \"denationalised\",\r\n  \"denationalizes\": \"denationalises\",\r\n  \"denationalizing\": \"denationalising\",\r\n  \"donut\": \"doughnut\",\r\n  \"deodorize\": \"deodorise\",\r\n  \"deodorized\": \"deodorised\",\r\n  \"deodorizes\": \"deodorises\",\r\n  \"deodorizing\": \"deodorising\",\r\n  \"depersonalize\": \"depersonalise\",\r\n  \"depersonalized\": \"depersonalised\",\r\n  \"depersonalizes\": \"depersonalises\",\r\n  \"depersonalizing\": \"depersonalising\",\r\n  \"deputize\": \"deputise\",\r\n  \"deputized\": \"deputised\",\r\n  \"deputizes\": \"deputises\",\r\n  \"deputizing\": \"deputising\",\r\n  \"desensitization\": \"desensitisation\",\r\n  \"desensitize\": \"desensitise\",\r\n  \"desensitized\": \"desensitised\",\r\n  \"desensitizes\": \"desensitises\",\r\n  \"desensitizing\": \"desensitising\",\r\n  \"destabilization\": \"destabilisation\",\r\n  \"destabilize\": \"destabilise\",\r\n  \"destabilized\": \"destabilised\",\r\n  \"destabilizes\": \"destabilises\",\r\n  \"destabilizing\": \"destabilising\",\r\n  \"dialed\": \"dialled\",\r\n  \"dialing\": \"dialling\",\r\n  \"dialog\": \"dialogue\",\r\n  \"dialogs\": \"dialogues\",\r\n  \"diarrhea\": \"diarrhoea\",\r\n  \"digitize\": \"digitise\",\r\n  \"digitized\": \"digitised\",\r\n  \"digitizes\": \"digitises\",\r\n  \"digitizing\": \"digitising\",\r\n  \"disk\": \"disc\",\r\n  \"discolor\": \"discolour\",\r\n  \"discolored\": \"discoloured\",\r\n  \"discoloring\": \"discolouring\",\r\n  \"discolors\": \"discolours\",\r\n  \"disks\": \"discs\",\r\n  \"disemboweled\": \"disembowelled\",\r\n  \"disemboweling\": \"disembowelling\",\r\n  \"disfavor\": \"disfavour\",\r\n  \"disheveled\": \"dishevelled\",\r\n  \"dishonor\": \"dishonour\",\r\n  \"dishonorable\": \"dishonourable\",\r\n  \"dishonorably\": \"dishonourably\",\r\n  \"dishonored\": \"dishonoured\",\r\n  \"dishonoring\": \"dishonouring\",\r\n  \"dishonors\": \"dishonours\",\r\n  \"disorganization\": \"disorganisation\",\r\n  \"disorganized\": \"disorganised\",\r\n  \"distill\": \"distil\",\r\n  \"distills\": \"distils\",\r\n  \"dramatization\": \"dramatisation\",\r\n  \"dramatizations\": \"dramatisations\",\r\n  \"dramatize\": \"dramatise\",\r\n  \"dramatized\": \"dramatised\",\r\n  \"dramatizes\": \"dramatises\",\r\n  \"dramatizing\": \"dramatising\",\r\n  \"draft\": \"draught\",\r\n  \"draftboard\": \"draughtboard\",\r\n  \"draftboards\": \"draughtboards\",\r\n  \"draftier\": \"draughtier\",\r\n  \"draftiest\": \"draughtiest\",\r\n  \"drafts\": \"draughts\",\r\n  \"draftsman\": \"draughtsman\",\r\n  \"draftsmanship\": \"draughtsmanship\",\r\n  \"draftsmen\": \"draughtsmen\",\r\n  \"draftswoman\": \"draughtswoman\",\r\n  \"draftswomen\": \"draughtswomen\",\r\n  \"drafty\": \"draughty\",\r\n  \"driveled\": \"drivelled\",\r\n  \"driveling\": \"drivelling\",\r\n  \"dueled\": \"duelled\",\r\n  \"dueling\": \"duelling\",\r\n  \"economize\": \"economise\",\r\n  \"economized\": \"economised\",\r\n  \"economizes\": \"economises\",\r\n  \"economizing\": \"economising\",\r\n  \"edema\": \"edoema\",\r\n  \"editorialize\": \"editorialise\",\r\n  \"editorialized\": \"editorialised\",\r\n  \"editorializes\": \"editorialises\",\r\n  \"editorializing\": \"editorialising\",\r\n  \"empathize\": \"empathise\",\r\n  \"empathized\": \"empathised\",\r\n  \"empathizes\": \"empathises\",\r\n  \"empathizing\": \"empathising\",\r\n  \"emphasize\": \"emphasise\",\r\n  \"emphasized\": \"emphasised\",\r\n  \"emphasizes\": \"emphasises\",\r\n  \"emphasizing\": \"emphasising\",\r\n  \"enameled\": \"enamelled\",\r\n  \"enameling\": \"enamelling\",\r\n  \"enamored\": \"enamoured\",\r\n  \"encyclopedia\": \"encyclopaedia\",\r\n  \"encyclopedias\": \"encyclopaedias\",\r\n  \"encyclopedic\": \"encyclopaedic\",\r\n  \"endeavor\": \"endeavour\",\r\n  \"endeavored\": \"endeavoured\",\r\n  \"endeavoring\": \"endeavouring\",\r\n  \"endeavors\": \"endeavours\",\r\n  \"energize\": \"energise\",\r\n  \"energized\": \"energised\",\r\n  \"energizes\": \"energises\",\r\n  \"energizing\": \"energising\",\r\n  \"enroll\": \"enrol\",\r\n  \"enrolls\": \"enrols\",\r\n  \"enthrall\": \"enthral\",\r\n  \"enthralls\": \"enthrals\",\r\n  \"epaulet\": \"epaulette\",\r\n  \"epaulets\": \"epaulettes\",\r\n  \"epicenter\": \"epicentre\",\r\n  \"epicenters\": \"epicentres\",\r\n  \"epilog\": \"epilogue\",\r\n  \"epilogs\": \"epilogues\",\r\n  \"epitomize\": \"epitomise\",\r\n  \"epitomized\": \"epitomised\",\r\n  \"epitomizes\": \"epitomises\",\r\n  \"epitomizing\": \"epitomising\",\r\n  \"equalization\": \"equalisation\",\r\n  \"equalize\": \"equalise\",\r\n  \"equalized\": \"equalised\",\r\n  \"equalizer\": \"equaliser\",\r\n  \"equalizers\": \"equalisers\",\r\n  \"equalizes\": \"equalises\",\r\n  \"equalizing\": \"equalising\",\r\n  \"eulogize\": \"eulogise\",\r\n  \"eulogized\": \"eulogised\",\r\n  \"eulogizes\": \"eulogises\",\r\n  \"eulogizing\": \"eulogising\",\r\n  \"evangelize\": \"evangelise\",\r\n  \"evangelized\": \"evangelised\",\r\n  \"evangelizes\": \"evangelises\",\r\n  \"evangelizing\": \"evangelising\",\r\n  \"exorcize\": \"exorcise\",\r\n  \"exorcized\": \"exorcised\",\r\n  \"exorcizes\": \"exorcises\",\r\n  \"exorcizing\": \"exorcising\",\r\n  \"extemporization\": \"extemporisation\",\r\n  \"extemporize\": \"extemporise\",\r\n  \"extemporized\": \"extemporised\",\r\n  \"extemporizes\": \"extemporises\",\r\n  \"extemporizing\": \"extemporising\",\r\n  \"externalization\": \"externalisation\",\r\n  \"externalizations\": \"externalisations\",\r\n  \"externalize\": \"externalise\",\r\n  \"externalized\": \"externalised\",\r\n  \"externalizes\": \"externalises\",\r\n  \"externalizing\": \"externalising\",\r\n  \"factorize\": \"factorise\",\r\n  \"factorized\": \"factorised\",\r\n  \"factorizes\": \"factorises\",\r\n  \"factorizing\": \"factorising\",\r\n  \"fecal\": \"faecal\",\r\n  \"feces\": \"faeces\",\r\n  \"familiarization\": \"familiarisation\",\r\n  \"familiarize\": \"familiarise\",\r\n  \"familiarized\": \"familiarised\",\r\n  \"familiarizes\": \"familiarises\",\r\n  \"familiarizing\": \"familiarising\",\r\n  \"fantasize\": \"fantasise\",\r\n  \"fantasized\": \"fantasised\",\r\n  \"fantasizes\": \"fantasises\",\r\n  \"fantasizing\": \"fantasising\",\r\n  \"favorable\": \"favourable\",\r\n  \"favorably\": \"favourably\",\r\n  \"favored\": \"favoured\",\r\n  \"favoring\": \"favouring\",\r\n  \"favorite\": \"favourite\",\r\n  \"favorites\": \"favourites\",\r\n  \"favoritism\": \"favouritism\",\r\n  \"favor\": \"favour\",\r\n  \"favors\": \"favours\",\r\n  \"feminize\": \"feminise\",\r\n  \"feminized\": \"feminised\",\r\n  \"feminizes\": \"feminises\",\r\n  \"feminizing\": \"feminising\",\r\n  \"fertilization\": \"fertilisation\",\r\n  \"fertilize\": \"fertilise\",\r\n  \"fertilized\": \"fertilised\",\r\n  \"fertilizer\": \"fertiliser\",\r\n  \"fertilizers\": \"fertilisers\",\r\n  \"fertilizes\": \"fertilises\",\r\n  \"fertilizing\": \"fertilising\",\r\n  \"fervor\": \"fervour\",\r\n  \"fiber\": \"fibre\",\r\n  \"fiberglass\": \"fibreglass\",\r\n  \"fibers\": \"fibres\",\r\n  \"fictionalization\": \"fictionalisation\",\r\n  \"fictionalizations\": \"fictionalisations\",\r\n  \"fictionalize\": \"fictionalise\",\r\n  \"fictionalized\": \"fictionalised\",\r\n  \"fictionalizes\": \"fictionalises\",\r\n  \"fictionalizing\": \"fictionalising\",\r\n  \"filet\": \"fillet\",\r\n  \"fileted\": \"filleted\",\r\n  \"fileting\": \"filleting\",\r\n  \"filets\": \"fillets\",\r\n  \"finalization\": \"finalisation\",\r\n  \"finalize\": \"finalise\",\r\n  \"finalized\": \"finalised\",\r\n  \"finalizes\": \"finalises\",\r\n  \"finalizing\": \"finalising\",\r\n  \"flutist\": \"flautist\",\r\n  \"flutists\": \"flautists\",\r\n  \"flavor\": \"flavour\",\r\n  \"flavored\": \"flavoured\",\r\n  \"flavoring\": \"flavouring\",\r\n  \"flavorings\": \"flavourings\",\r\n  \"flavorless\": \"flavourless\",\r\n  \"flavors\": \"flavours\",\r\n  \"flavorsome\": \"flavoursome\",\r\n  \"fetal\": \"foetal\",\r\n  \"fetid\": \"foetid\",\r\n  \"fetus\": \"foetus\",\r\n  \"fetuses\": \"foetuses\",\r\n  \"formalization\": \"formalisation\",\r\n  \"formalize\": \"formalise\",\r\n  \"formalized\": \"formalised\",\r\n  \"formalizes\": \"formalises\",\r\n  \"formalizing\": \"formalising\",\r\n  \"fossilization\": \"fossilisation\",\r\n  \"fossilize\": \"fossilise\",\r\n  \"fossilized\": \"fossilised\",\r\n  \"fossilizes\": \"fossilises\",\r\n  \"fossilizing\": \"fossilising\",\r\n  \"fraternization\": \"fraternisation\",\r\n  \"fraternize\": \"fraternise\",\r\n  \"fraternized\": \"fraternised\",\r\n  \"fraternizes\": \"fraternises\",\r\n  \"fraternizing\": \"fraternising\",\r\n  \"fulfill\": \"fulfil\",\r\n  \"fulfillment\": \"fulfilment\",\r\n  \"fulfills\": \"fulfils\",\r\n  \"funneled\": \"funnelled\",\r\n  \"funneling\": \"funnelling\",\r\n  \"galvanize\": \"galvanise\",\r\n  \"galvanized\": \"galvanised\",\r\n  \"galvanizes\": \"galvanises\",\r\n  \"galvanizing\": \"galvanising\",\r\n  \"gamboled\": \"gambolled\",\r\n  \"gamboling\": \"gambolling\",\r\n  \"jail\": \"gaol\",\r\n  \"jailbird\": \"gaolbird\",\r\n  \"jailbirds\": \"gaolbirds\",\r\n  \"jailbreak\": \"gaolbreak\",\r\n  \"jailbreaks\": \"gaolbreaks\",\r\n  \"jailed\": \"gaoled\",\r\n  \"jailer\": \"gaoler\",\r\n  \"jailers\": \"gaolers\",\r\n  \"jailing\": \"gaoling\",\r\n  \"jails\": \"gaols\",\r\n  \"gasses\": \"gases\",\r\n  \"gage\": \"gauge\",\r\n  \"gaged\": \"gauged\",\r\n  \"gages\": \"gauges\",\r\n  \"gaging\": \"gauging\",\r\n  \"generalization\": \"generalisation\",\r\n  \"generalizations\": \"generalisations\",\r\n  \"generalize\": \"generalise\",\r\n  \"generalized\": \"generalised\",\r\n  \"generalizes\": \"generalises\",\r\n  \"generalizing\": \"generalising\",\r\n  \"gypsies\": \"gipsies\",\r\n  \"glamorize\": \"glamorise\",\r\n  \"glamorized\": \"glamorised\",\r\n  \"glamorizes\": \"glamorises\",\r\n  \"glamorizing\": \"glamorising\",\r\n  \"glamor\": \"glamour\",\r\n  \"globalization\": \"globalisation\",\r\n  \"globalize\": \"globalise\",\r\n  \"globalized\": \"globalised\",\r\n  \"globalizes\": \"globalises\",\r\n  \"globalizing\": \"globalising\",\r\n  \"gluing\": \"glueing\",\r\n  \"goiter\": \"goitre\",\r\n  \"goiters\": \"goitres\",\r\n  \"gonorrhea\": \"gonorrhoea\",\r\n  \"gram\": \"gramme\",\r\n  \"grams\": \"grammes\",\r\n  \"graveled\": \"gravelled\",\r\n  \"gray\": \"grey\",\r\n  \"grayed\": \"greyed\",\r\n  \"graying\": \"greying\",\r\n  \"grayish\": \"greyish\",\r\n  \"grayness\": \"greyness\",\r\n  \"grays\": \"greys\",\r\n  \"groveled\": \"grovelled\",\r\n  \"groveling\": \"grovelling\",\r\n  \"groin\": \"groyne\",\r\n  \"groins\": \"groynes\",\r\n  \"grueling\": \"gruelling\",\r\n  \"gruelingly\": \"gruellingly\",\r\n  \"griffin\": \"gryphon\",\r\n  \"griffins\": \"gryphons\",\r\n  \"gynecological\": \"gynaecological\",\r\n  \"gynecologist\": \"gynaecologist\",\r\n  \"gynecologists\": \"gynaecologists\",\r\n  \"gynecology\": \"gynaecology\",\r\n  \"hematological\": \"haematological\",\r\n  \"hematologist\": \"haematologist\",\r\n  \"hematologists\": \"haematologists\",\r\n  \"hematology\": \"haematology\",\r\n  \"hemoglobin\": \"haemoglobin\",\r\n  \"hemophilia\": \"haemophilia\",\r\n  \"hemophiliac\": \"haemophiliac\",\r\n  \"hemophiliacs\": \"haemophiliacs\",\r\n  \"hemorrhage\": \"haemorrhage\",\r\n  \"hemorrhaged\": \"haemorrhaged\",\r\n  \"hemorrhages\": \"haemorrhages\",\r\n  \"hemorrhaging\": \"haemorrhaging\",\r\n  \"hemorrhoids\": \"haemorrhoids\",\r\n  \"harbor\": \"harbour\",\r\n  \"harbored\": \"harboured\",\r\n  \"harboring\": \"harbouring\",\r\n  \"harbors\": \"harbours\",\r\n  \"harmonization\": \"harmonisation\",\r\n  \"harmonize\": \"harmonise\",\r\n  \"harmonized\": \"harmonised\",\r\n  \"harmonizes\": \"harmonises\",\r\n  \"harmonizing\": \"harmonising\",\r\n  \"homeopath\": \"homoeopath\",\r\n  \"homeopathic\": \"homoeopathic\",\r\n  \"homeopaths\": \"homoeopaths\",\r\n  \"homeopathy\": \"homoeopathy\",\r\n  \"homogenize\": \"homogenise\",\r\n  \"homogenized\": \"homogenised\",\r\n  \"homogenizes\": \"homogenises\",\r\n  \"homogenizing\": \"homogenising\",\r\n  \"honor\": \"honour\",\r\n  \"honorable\": \"honourable\",\r\n  \"honorably\": \"honourably\",\r\n  \"honored\": \"honoured\",\r\n  \"honoring\": \"honouring\",\r\n  \"honors\": \"honours\",\r\n  \"hospitalization\": \"hospitalisation\",\r\n  \"hospitalize\": \"hospitalise\",\r\n  \"hospitalized\": \"hospitalised\",\r\n  \"hospitalizes\": \"hospitalises\",\r\n  \"hospitalizing\": \"hospitalising\",\r\n  \"humanize\": \"humanise\",\r\n  \"humanized\": \"humanised\",\r\n  \"humanizes\": \"humanises\",\r\n  \"humanizing\": \"humanising\",\r\n  \"humor\": \"humour\",\r\n  \"humored\": \"humoured\",\r\n  \"humoring\": \"humouring\",\r\n  \"humorless\": \"humourless\",\r\n  \"humors\": \"humours\",\r\n  \"hybridize\": \"hybridise\",\r\n  \"hybridized\": \"hybridised\",\r\n  \"hybridizes\": \"hybridises\",\r\n  \"hybridizing\": \"hybridising\",\r\n  \"hypnotize\": \"hypnotise\",\r\n  \"hypnotized\": \"hypnotised\",\r\n  \"hypnotizes\": \"hypnotises\",\r\n  \"hypnotizing\": \"hypnotising\",\r\n  \"hypothesize\": \"hypothesise\",\r\n  \"hypothesized\": \"hypothesised\",\r\n  \"hypothesizes\": \"hypothesises\",\r\n  \"hypothesizing\": \"hypothesising\",\r\n  \"idealization\": \"idealisation\",\r\n  \"idealize\": \"idealise\",\r\n  \"idealized\": \"idealised\",\r\n  \"idealizes\": \"idealises\",\r\n  \"idealizing\": \"idealising\",\r\n  \"idolize\": \"idolise\",\r\n  \"idolized\": \"idolised\",\r\n  \"idolizes\": \"idolises\",\r\n  \"idolizing\": \"idolising\",\r\n  \"immobilization\": \"immobilisation\",\r\n  \"immobilize\": \"immobilise\",\r\n  \"immobilized\": \"immobilised\",\r\n  \"immobilizer\": \"immobiliser\",\r\n  \"immobilizers\": \"immobilisers\",\r\n  \"immobilizes\": \"immobilises\",\r\n  \"immobilizing\": \"immobilising\",\r\n  \"immortalize\": \"immortalise\",\r\n  \"immortalized\": \"immortalised\",\r\n  \"immortalizes\": \"immortalises\",\r\n  \"immortalizing\": \"immortalising\",\r\n  \"immunization\": \"immunisation\",\r\n  \"immunize\": \"immunise\",\r\n  \"immunized\": \"immunised\",\r\n  \"immunizes\": \"immunises\",\r\n  \"immunizing\": \"immunising\",\r\n  \"impaneled\": \"impanelled\",\r\n  \"impaneling\": \"impanelling\",\r\n  \"imperiled\": \"imperilled\",\r\n  \"imperiling\": \"imperilling\",\r\n  \"individualize\": \"individualise\",\r\n  \"individualized\": \"individualised\",\r\n  \"individualizes\": \"individualises\",\r\n  \"individualizing\": \"individualising\",\r\n  \"industrialize\": \"industrialise\",\r\n  \"industrialized\": \"industrialised\",\r\n  \"industrializes\": \"industrialises\",\r\n  \"industrializing\": \"industrialising\",\r\n  \"inflection\": \"inflexion\",\r\n  \"inflections\": \"inflexions\",\r\n  \"initialize\": \"initialise\",\r\n  \"initialized\": \"initialised\",\r\n  \"initializes\": \"initialises\",\r\n  \"initializing\": \"initialising\",\r\n  \"initialed\": \"initialled\",\r\n  \"initialing\": \"initialling\",\r\n  \"install\": \"instal\",\r\n  \"installment\": \"instalment\",\r\n  \"installments\": \"instalments\",\r\n  \"installs\": \"instals\",\r\n  \"instill\": \"instil\",\r\n  \"instills\": \"instils\",\r\n  \"institutionalization\": \"institutionalisation\",\r\n  \"institutionalize\": \"institutionalise\",\r\n  \"institutionalized\": \"institutionalised\",\r\n  \"institutionalizes\": \"institutionalises\",\r\n  \"institutionalizing\": \"institutionalising\",\r\n  \"intellectualize\": \"intellectualise\",\r\n  \"intellectualized\": \"intellectualised\",\r\n  \"intellectualizes\": \"intellectualises\",\r\n  \"intellectualizing\": \"intellectualising\",\r\n  \"internalization\": \"internalisation\",\r\n  \"internalize\": \"internalise\",\r\n  \"internalized\": \"internalised\",\r\n  \"internalizes\": \"internalises\",\r\n  \"internalizing\": \"internalising\",\r\n  \"internationalization\": \"internationalisation\",\r\n  \"internationalize\": \"internationalise\",\r\n  \"internationalized\": \"internationalised\",\r\n  \"internationalizes\": \"internationalises\",\r\n  \"internationalizing\": \"internationalising\",\r\n  \"ionization\": \"ionisation\",\r\n  \"ionize\": \"ionise\",\r\n  \"ionized\": \"ionised\",\r\n  \"ionizer\": \"ioniser\",\r\n  \"ionizers\": \"ionisers\",\r\n  \"ionizes\": \"ionises\",\r\n  \"ionizing\": \"ionising\",\r\n  \"italicize\": \"italicise\",\r\n  \"italicized\": \"italicised\",\r\n  \"italicizes\": \"italicises\",\r\n  \"italicizing\": \"italicising\",\r\n  \"itemize\": \"itemise\",\r\n  \"itemized\": \"itemised\",\r\n  \"itemizes\": \"itemises\",\r\n  \"itemizing\": \"itemising\",\r\n  \"jeopardize\": \"jeopardise\",\r\n  \"jeopardized\": \"jeopardised\",\r\n  \"jeopardizes\": \"jeopardises\",\r\n  \"jeopardizing\": \"jeopardising\",\r\n  \"jeweled\": \"jewelled\",\r\n  \"jeweler\": \"jeweller\",\r\n  \"jewelers\": \"jewellers\",\r\n  \"jewelry\": \"jewellery\",\r\n  \"judgment\": \"judgement\",\r\n  \"kilogram\": \"kilogramme\",\r\n  \"kilograms\": \"kilogrammes\",\r\n  \"kilometer\": \"kilometre\",\r\n  \"kilometers\": \"kilometres\",\r\n  \"labeled\": \"labelled\",\r\n  \"labeling\": \"labelling\",\r\n  \"labor\": \"labour\",\r\n  \"labored\": \"laboured\",\r\n  \"laborer\": \"labourer\",\r\n  \"laborers\": \"labourers\",\r\n  \"laboring\": \"labouring\",\r\n  \"labors\": \"labours\",\r\n  \"lackluster\": \"lacklustre\",\r\n  \"legalization\": \"legalisation\",\r\n  \"legalize\": \"legalise\",\r\n  \"legalized\": \"legalised\",\r\n  \"legalizes\": \"legalises\",\r\n  \"legalizing\": \"legalising\",\r\n  \"legitimize\": \"legitimise\",\r\n  \"legitimized\": \"legitimised\",\r\n  \"legitimizes\": \"legitimises\",\r\n  \"legitimizing\": \"legitimising\",\r\n  \"leukemia\": \"leukaemia\",\r\n  \"leveled\": \"levelled\",\r\n  \"leveler\": \"leveller\",\r\n  \"levelers\": \"levellers\",\r\n  \"leveling\": \"levelling\",\r\n  \"libeled\": \"libelled\",\r\n  \"libeling\": \"libelling\",\r\n  \"libelous\": \"libellous\",\r\n  \"liberalization\": \"liberalisation\",\r\n  \"liberalize\": \"liberalise\",\r\n  \"liberalized\": \"liberalised\",\r\n  \"liberalizes\": \"liberalises\",\r\n  \"liberalizing\": \"liberalising\",\r\n  \"license\": \"licence\",\r\n  \"licensed\": \"licenced\",\r\n  \"licenses\": \"licences\",\r\n  \"licensing\": \"licencing\",\r\n  \"likable\": \"likeable\",\r\n  \"lionization\": \"lionisation\",\r\n  \"lionize\": \"lionise\",\r\n  \"lionized\": \"lionised\",\r\n  \"lionizes\": \"lionises\",\r\n  \"lionizing\": \"lionising\",\r\n  \"liquidize\": \"liquidise\",\r\n  \"liquidized\": \"liquidised\",\r\n  \"liquidizer\": \"liquidiser\",\r\n  \"liquidizers\": \"liquidisers\",\r\n  \"liquidizes\": \"liquidises\",\r\n  \"liquidizing\": \"liquidising\",\r\n  \"liter\": \"litre\",\r\n  \"liters\": \"litres\",\r\n  \"localize\": \"localise\",\r\n  \"localized\": \"localised\",\r\n  \"localizes\": \"localises\",\r\n  \"localizing\": \"localising\",\r\n  \"louver\": \"louvre\",\r\n  \"louvered\": \"louvred\",\r\n  \"louvers\": \"louvres\",\r\n  \"luster\": \"lustre\",\r\n  \"magnetize\": \"magnetise\",\r\n  \"magnetized\": \"magnetised\",\r\n  \"magnetizes\": \"magnetises\",\r\n  \"magnetizing\": \"magnetising\",\r\n  \"maneuverability\": \"manoeuvrability\",\r\n  \"maneuverable\": \"manoeuvrable\",\r\n  \"maneuver\": \"manoeuvre\",\r\n  \"maneuvered\": \"manoeuvred\",\r\n  \"maneuvers\": \"manoeuvres\",\r\n  \"maneuvering\": \"manoeuvring\",\r\n  \"maneuverings\": \"manoeuvrings\",\r\n  \"marginalization\": \"marginalisation\",\r\n  \"marginalize\": \"marginalise\",\r\n  \"marginalized\": \"marginalised\",\r\n  \"marginalizes\": \"marginalises\",\r\n  \"marginalizing\": \"marginalising\",\r\n  \"marshaled\": \"marshalled\",\r\n  \"marshaling\": \"marshalling\",\r\n  \"marveled\": \"marvelled\",\r\n  \"marveling\": \"marvelling\",\r\n  \"marvelous\": \"marvellous\",\r\n  \"marvelously\": \"marvellously\",\r\n  \"materialization\": \"materialisation\",\r\n  \"materialize\": \"materialise\",\r\n  \"materialized\": \"materialised\",\r\n  \"materializes\": \"materialises\",\r\n  \"materializing\": \"materialising\",\r\n  \"maximization\": \"maximisation\",\r\n  \"maximize\": \"maximise\",\r\n  \"maximized\": \"maximised\",\r\n  \"maximizes\": \"maximises\",\r\n  \"maximizing\": \"maximising\",\r\n  \"meager\": \"meagre\",\r\n  \"mechanization\": \"mechanisation\",\r\n  \"mechanize\": \"mechanise\",\r\n  \"mechanized\": \"mechanised\",\r\n  \"mechanizes\": \"mechanises\",\r\n  \"mechanizing\": \"mechanising\",\r\n  \"medieval\": \"mediaeval\",\r\n  \"memorialize\": \"memorialise\",\r\n  \"memorialized\": \"memorialised\",\r\n  \"memorializes\": \"memorialises\",\r\n  \"memorializing\": \"memorialising\",\r\n  \"memorize\": \"memorise\",\r\n  \"memorized\": \"memorised\",\r\n  \"memorizes\": \"memorises\",\r\n  \"memorizing\": \"memorising\",\r\n  \"mesmerize\": \"mesmerise\",\r\n  \"mesmerized\": \"mesmerised\",\r\n  \"mesmerizes\": \"mesmerises\",\r\n  \"mesmerizing\": \"mesmerising\",\r\n  \"metabolize\": \"metabolise\",\r\n  \"metabolized\": \"metabolised\",\r\n  \"metabolizes\": \"metabolises\",\r\n  \"metabolizing\": \"metabolising\",\r\n  \"meter\": \"metre\",\r\n  \"meters\": \"metres\",\r\n  \"micrometer\": \"micrometre\",\r\n  \"micrometers\": \"micrometres\",\r\n  \"militarize\": \"militarise\",\r\n  \"militarized\": \"militarised\",\r\n  \"militarizes\": \"militarises\",\r\n  \"militarizing\": \"militarising\",\r\n  \"milligram\": \"milligramme\",\r\n  \"milligrams\": \"milligrammes\",\r\n  \"milliliter\": \"millilitre\",\r\n  \"milliliters\": \"millilitres\",\r\n  \"millimeter\": \"millimetre\",\r\n  \"millimeters\": \"millimetres\",\r\n  \"miniaturization\": \"miniaturisation\",\r\n  \"miniaturize\": \"miniaturise\",\r\n  \"miniaturized\": \"miniaturised\",\r\n  \"miniaturizes\": \"miniaturises\",\r\n  \"miniaturizing\": \"miniaturising\",\r\n  \"minibusses\": \"minibuses\",\r\n  \"minimize\": \"minimise\",\r\n  \"minimized\": \"minimised\",\r\n  \"minimizes\": \"minimises\",\r\n  \"minimizing\": \"minimising\",\r\n  \"misbehavior\": \"misbehaviour\",\r\n  \"misdemeanor\": \"misdemeanour\",\r\n  \"misdemeanors\": \"misdemeanours\",\r\n  \"misspelled\": \"misspelt\",\r\n  \"miter\": \"mitre\",\r\n  \"miters\": \"mitres\",\r\n  \"mobilization\": \"mobilisation\",\r\n  \"mobilize\": \"mobilise\",\r\n  \"mobilized\": \"mobilised\",\r\n  \"mobilizes\": \"mobilises\",\r\n  \"mobilizing\": \"mobilising\",\r\n  \"modeled\": \"modelled\",\r\n  \"modeler\": \"modeller\",\r\n  \"modelers\": \"modellers\",\r\n  \"modeling\": \"modelling\",\r\n  \"modernize\": \"modernise\",\r\n  \"modernized\": \"modernised\",\r\n  \"modernizes\": \"modernises\",\r\n  \"modernizing\": \"modernising\",\r\n  \"moisturize\": \"moisturise\",\r\n  \"moisturized\": \"moisturised\",\r\n  \"moisturizer\": \"moisturiser\",\r\n  \"moisturizers\": \"moisturisers\",\r\n  \"moisturizes\": \"moisturises\",\r\n  \"moisturizing\": \"moisturising\",\r\n  \"monolog\": \"monologue\",\r\n  \"monologs\": \"monologues\",\r\n  \"monopolization\": \"monopolisation\",\r\n  \"monopolize\": \"monopolise\",\r\n  \"monopolized\": \"monopolised\",\r\n  \"monopolizes\": \"monopolises\",\r\n  \"monopolizing\": \"monopolising\",\r\n  \"moralize\": \"moralise\",\r\n  \"moralized\": \"moralised\",\r\n  \"moralizes\": \"moralises\",\r\n  \"moralizing\": \"moralising\",\r\n  \"motorized\": \"motorised\",\r\n  \"mold\": \"mould\",\r\n  \"molded\": \"moulded\",\r\n  \"molder\": \"moulder\",\r\n  \"moldered\": \"mouldered\",\r\n  \"moldering\": \"mouldering\",\r\n  \"molders\": \"moulders\",\r\n  \"moldier\": \"mouldier\",\r\n  \"moldiest\": \"mouldiest\",\r\n  \"molding\": \"moulding\",\r\n  \"moldings\": \"mouldings\",\r\n  \"molds\": \"moulds\",\r\n  \"moldy\": \"mouldy\",\r\n  \"molt\": \"moult\",\r\n  \"molted\": \"moulted\",\r\n  \"molting\": \"moulting\",\r\n  \"molts\": \"moults\",\r\n  \"mustache\": \"moustache\",\r\n  \"mustached\": \"moustached\",\r\n  \"mustaches\": \"moustaches\",\r\n  \"mustachioed\": \"moustachioed\",\r\n  \"multicolored\": \"multicoloured\",\r\n  \"nationalization\": \"nationalisation\",\r\n  \"nationalizations\": \"nationalisations\",\r\n  \"nationalize\": \"nationalise\",\r\n  \"nationalized\": \"nationalised\",\r\n  \"nationalizes\": \"nationalises\",\r\n  \"nationalizing\": \"nationalising\",\r\n  \"naturalization\": \"naturalisation\",\r\n  \"naturalize\": \"naturalise\",\r\n  \"naturalized\": \"naturalised\",\r\n  \"naturalizes\": \"naturalises\",\r\n  \"naturalizing\": \"naturalising\",\r\n  \"neighbor\": \"neighbour\",\r\n  \"neighborhood\": \"neighbourhood\",\r\n  \"neighborhoods\": \"neighbourhoods\",\r\n  \"neighboring\": \"neighbouring\",\r\n  \"neighborliness\": \"neighbourliness\",\r\n  \"neighborly\": \"neighbourly\",\r\n  \"neighbors\": \"neighbours\",\r\n  \"neutralization\": \"neutralisation\",\r\n  \"neutralize\": \"neutralise\",\r\n  \"neutralized\": \"neutralised\",\r\n  \"neutralizes\": \"neutralises\",\r\n  \"neutralizing\": \"neutralising\",\r\n  \"normalization\": \"normalisation\",\r\n  \"normalize\": \"normalise\",\r\n  \"normalized\": \"normalised\",\r\n  \"normalizes\": \"normalises\",\r\n  \"normalizing\": \"normalising\",\r\n  \"odor\": \"odour\",\r\n  \"odorless\": \"odourless\",\r\n  \"odors\": \"odours\",\r\n  \"esophagus\": \"oesophagus\",\r\n  \"esophaguses\": \"oesophaguses\",\r\n  \"estrogen\": \"oestrogen\",\r\n  \"offense\": \"offence\",\r\n  \"offenses\": \"offences\",\r\n  \"omelet\": \"omelette\",\r\n  \"omelets\": \"omelettes\",\r\n  \"optimize\": \"optimise\",\r\n  \"optimized\": \"optimised\",\r\n  \"optimizes\": \"optimises\",\r\n  \"optimizing\": \"optimising\",\r\n  \"organization\": \"organisation\",\r\n  \"organizational\": \"organisational\",\r\n  \"organizations\": \"organisations\",\r\n  \"organize\": \"organise\",\r\n  \"organized\": \"organised\",\r\n  \"organizer\": \"organiser\",\r\n  \"organizers\": \"organisers\",\r\n  \"organizes\": \"organises\",\r\n  \"organizing\": \"organising\",\r\n  \"orthopedic\": \"orthopaedic\",\r\n  \"orthopedics\": \"orthopaedics\",\r\n  \"ostracize\": \"ostracise\",\r\n  \"ostracized\": \"ostracised\",\r\n  \"ostracizes\": \"ostracises\",\r\n  \"ostracizing\": \"ostracising\",\r\n  \"outmaneuver\": \"outmanoeuvre\",\r\n  \"outmaneuvered\": \"outmanoeuvred\",\r\n  \"outmaneuvers\": \"outmanoeuvres\",\r\n  \"outmaneuvering\": \"outmanoeuvring\",\r\n  \"overemphasize\": \"overemphasise\",\r\n  \"overemphasized\": \"overemphasised\",\r\n  \"overemphasizes\": \"overemphasises\",\r\n  \"overemphasizing\": \"overemphasising\",\r\n  \"oxidization\": \"oxidisation\",\r\n  \"oxidize\": \"oxidise\",\r\n  \"oxidized\": \"oxidised\",\r\n  \"oxidizes\": \"oxidises\",\r\n  \"oxidizing\": \"oxidising\",\r\n  \"pederast\": \"paederast\",\r\n  \"pederasts\": \"paederasts\",\r\n  \"pediatric\": \"paediatric\",\r\n  \"pediatrician\": \"paediatrician\",\r\n  \"pediatricians\": \"paediatricians\",\r\n  \"pediatrics\": \"paediatrics\",\r\n  \"paleolithic\": \"palaeolithic\",\r\n  \"paleontologist\": \"palaeontologist\",\r\n  \"paleontologists\": \"palaeontologists\",\r\n  \"paleontology\": \"palaeontology\",\r\n  \"paneled\": \"panelled\",\r\n  \"paneling\": \"panelling\",\r\n  \"panelist\": \"panellist\",\r\n  \"panelists\": \"panellists\",\r\n  \"paralyze\": \"paralyse\",\r\n  \"paralyzed\": \"paralysed\",\r\n  \"paralyzes\": \"paralyses\",\r\n  \"paralyzing\": \"paralysing\",\r\n  \"parceled\": \"parcelled\",\r\n  \"parceling\": \"parcelling\",\r\n  \"parlor\": \"parlour\",\r\n  \"parlors\": \"parlours\",\r\n  \"particularize\": \"particularise\",\r\n  \"particularized\": \"particularised\",\r\n  \"particularizes\": \"particularises\",\r\n  \"particularizing\": \"particularising\",\r\n  \"passivization\": \"passivisation\",\r\n  \"passivize\": \"passivise\",\r\n  \"passivized\": \"passivised\",\r\n  \"passivizes\": \"passivises\",\r\n  \"passivizing\": \"passivising\",\r\n  \"pasteurization\": \"pasteurisation\",\r\n  \"pasteurize\": \"pasteurise\",\r\n  \"pasteurized\": \"pasteurised\",\r\n  \"pasteurizes\": \"pasteurises\",\r\n  \"pasteurizing\": \"pasteurising\",\r\n  \"patronize\": \"patronise\",\r\n  \"patronized\": \"patronised\",\r\n  \"patronizes\": \"patronises\",\r\n  \"patronizing\": \"patronising\",\r\n  \"patronizingly\": \"patronisingly\",\r\n  \"pedaled\": \"pedalled\",\r\n  \"pedaling\": \"pedalling\",\r\n  \"pedestrianization\": \"pedestrianisation\",\r\n  \"pedestrianize\": \"pedestrianise\",\r\n  \"pedestrianized\": \"pedestrianised\",\r\n  \"pedestrianizes\": \"pedestrianises\",\r\n  \"pedestrianizing\": \"pedestrianising\",\r\n  \"penalize\": \"penalise\",\r\n  \"penalized\": \"penalised\",\r\n  \"penalizes\": \"penalises\",\r\n  \"penalizing\": \"penalising\",\r\n  \"penciled\": \"pencilled\",\r\n  \"penciling\": \"pencilling\",\r\n  \"personalize\": \"personalise\",\r\n  \"personalized\": \"personalised\",\r\n  \"personalizes\": \"personalises\",\r\n  \"personalizing\": \"personalising\",\r\n  \"pharmacopeia\": \"pharmacopoeia\",\r\n  \"pharmacopeias\": \"pharmacopoeias\",\r\n  \"philosophize\": \"philosophise\",\r\n  \"philosophized\": \"philosophised\",\r\n  \"philosophizes\": \"philosophises\",\r\n  \"philosophizing\": \"philosophising\",\r\n  \"filter\": \"philtre\",\r\n  \"filters\": \"philtres\",\r\n  \"phony\": \"phoney\",\r\n  \"plagiarize\": \"plagiarise\",\r\n  \"plagiarized\": \"plagiarised\",\r\n  \"plagiarizes\": \"plagiarises\",\r\n  \"plagiarizing\": \"plagiarising\",\r\n  \"plow\": \"plough\",\r\n  \"plowed\": \"ploughed\",\r\n  \"plowing\": \"ploughing\",\r\n  \"plowman\": \"ploughman\",\r\n  \"plowmen\": \"ploughmen\",\r\n  \"plows\": \"ploughs\",\r\n  \"plowshare\": \"ploughshare\",\r\n  \"plowshares\": \"ploughshares\",\r\n  \"polarization\": \"polarisation\",\r\n  \"polarize\": \"polarise\",\r\n  \"polarized\": \"polarised\",\r\n  \"polarizes\": \"polarises\",\r\n  \"polarizing\": \"polarising\",\r\n  \"politicization\": \"politicisation\",\r\n  \"politicize\": \"politicise\",\r\n  \"politicized\": \"politicised\",\r\n  \"politicizes\": \"politicises\",\r\n  \"politicizing\": \"politicising\",\r\n  \"popularization\": \"popularisation\",\r\n  \"popularize\": \"popularise\",\r\n  \"popularized\": \"popularised\",\r\n  \"popularizes\": \"popularises\",\r\n  \"popularizing\": \"popularising\",\r\n  \"practice\": \"practise\",\r\n  \"practiced\": \"practised\",\r\n  \"practices\": \"practises\",\r\n  \"practicing\": \"practising\",\r\n  \"presidium\": \"praesidium\",\r\n  \"presidiums\": \"praesidiums\",\r\n  \"pressurization\": \"pressurisation\",\r\n  \"pressurize\": \"pressurise\",\r\n  \"pressurized\": \"pressurised\",\r\n  \"pressurizes\": \"pressurises\",\r\n  \"pressurizing\": \"pressurising\",\r\n  \"pretense\": \"pretence\",\r\n  \"pretenses\": \"pretences\",\r\n  \"primeval\": \"primaeval\",\r\n  \"prioritization\": \"prioritisation\",\r\n  \"prioritize\": \"prioritise\",\r\n  \"prioritized\": \"prioritised\",\r\n  \"prioritizes\": \"prioritises\",\r\n  \"prioritizing\": \"prioritising\",\r\n  \"privatization\": \"privatisation\",\r\n  \"privatizations\": \"privatisations\",\r\n  \"privatize\": \"privatise\",\r\n  \"privatized\": \"privatised\",\r\n  \"privatizes\": \"privatises\",\r\n  \"privatizing\": \"privatising\",\r\n  \"professionalization\": \"professionalisation\",\r\n  \"professionalize\": \"professionalise\",\r\n  \"professionalized\": \"professionalised\",\r\n  \"professionalizes\": \"professionalises\",\r\n  \"professionalizing\": \"professionalising\",\r\n  \"program\": \"programme\",\r\n  \"programs\": \"programmes\",\r\n  \"prolog\": \"prologue\",\r\n  \"prologs\": \"prologues\",\r\n  \"propagandize\": \"propagandise\",\r\n  \"propagandized\": \"propagandised\",\r\n  \"propagandizes\": \"propagandises\",\r\n  \"propagandizing\": \"propagandising\",\r\n  \"proselytize\": \"proselytise\",\r\n  \"proselytized\": \"proselytised\",\r\n  \"proselytizer\": \"proselytiser\",\r\n  \"proselytizers\": \"proselytisers\",\r\n  \"proselytizes\": \"proselytises\",\r\n  \"proselytizing\": \"proselytising\",\r\n  \"psychoanalyze\": \"psychoanalyse\",\r\n  \"psychoanalyzed\": \"psychoanalysed\",\r\n  \"psychoanalyzes\": \"psychoanalyses\",\r\n  \"psychoanalyzing\": \"psychoanalysing\",\r\n  \"publicize\": \"publicise\",\r\n  \"publicized\": \"publicised\",\r\n  \"publicizes\": \"publicises\",\r\n  \"publicizing\": \"publicising\",\r\n  \"pulverization\": \"pulverisation\",\r\n  \"pulverize\": \"pulverise\",\r\n  \"pulverized\": \"pulverised\",\r\n  \"pulverizes\": \"pulverises\",\r\n  \"pulverizing\": \"pulverising\",\r\n  \"pummel\": \"pummelled\",\r\n  \"pummeled\": \"pummelling\",\r\n  \"pajama\": \"pyjama\",\r\n  \"pajamas\": \"pyjamas\",\r\n  \"pizzazz\": \"pzazz\",\r\n  \"quarreled\": \"quarrelled\",\r\n  \"quarreling\": \"quarrelling\",\r\n  \"radicalize\": \"radicalise\",\r\n  \"radicalized\": \"radicalised\",\r\n  \"radicalizes\": \"radicalises\",\r\n  \"radicalizing\": \"radicalising\",\r\n  \"rancor\": \"rancour\",\r\n  \"randomize\": \"randomise\",\r\n  \"randomized\": \"randomised\",\r\n  \"randomizes\": \"randomises\",\r\n  \"randomizing\": \"randomising\",\r\n  \"rationalization\": \"rationalisation\",\r\n  \"rationalizations\": \"rationalisations\",\r\n  \"rationalize\": \"rationalise\",\r\n  \"rationalized\": \"rationalised\",\r\n  \"rationalizes\": \"rationalises\",\r\n  \"rationalizing\": \"rationalising\",\r\n  \"raveled\": \"ravelled\",\r\n  \"raveling\": \"ravelling\",\r\n  \"realizable\": \"realisable\",\r\n  \"realization\": \"realisation\",\r\n  \"realizations\": \"realisations\",\r\n  \"realize\": \"realise\",\r\n  \"realized\": \"realised\",\r\n  \"realizes\": \"realises\",\r\n  \"realizing\": \"realising\",\r\n  \"recognizable\": \"recognisable\",\r\n  \"recognizably\": \"recognisably\",\r\n  \"recognizance\": \"recognisance\",\r\n  \"recognize\": \"recognise\",\r\n  \"recognized\": \"recognised\",\r\n  \"recognizes\": \"recognises\",\r\n  \"recognizing\": \"recognising\",\r\n  \"reconnoiter\": \"reconnoitre\",\r\n  \"reconnoitered\": \"reconnoitred\",\r\n  \"reconnoiters\": \"reconnoitres\",\r\n  \"reconnoitering\": \"reconnoitring\",\r\n  \"refueled\": \"refuelled\",\r\n  \"refueling\": \"refuelling\",\r\n  \"regularization\": \"regularisation\",\r\n  \"regularize\": \"regularise\",\r\n  \"regularized\": \"regularised\",\r\n  \"regularizes\": \"regularises\",\r\n  \"regularizing\": \"regularising\",\r\n  \"remodeled\": \"remodelled\",\r\n  \"remodeling\": \"remodelling\",\r\n  \"remold\": \"remould\",\r\n  \"remolded\": \"remoulded\",\r\n  \"remolding\": \"remoulding\",\r\n  \"remolds\": \"remoulds\",\r\n  \"reorganization\": \"reorganisation\",\r\n  \"reorganizations\": \"reorganisations\",\r\n  \"reorganize\": \"reorganise\",\r\n  \"reorganized\": \"reorganised\",\r\n  \"reorganizes\": \"reorganises\",\r\n  \"reorganizing\": \"reorganising\",\r\n  \"reveled\": \"revelled\",\r\n  \"reveler\": \"reveller\",\r\n  \"revelers\": \"revellers\",\r\n  \"reveling\": \"revelling\",\r\n  \"revitalize\": \"revitalise\",\r\n  \"revitalized\": \"revitalised\",\r\n  \"revitalizes\": \"revitalises\",\r\n  \"revitalizing\": \"revitalising\",\r\n  \"revolutionize\": \"revolutionise\",\r\n  \"revolutionized\": \"revolutionised\",\r\n  \"revolutionizes\": \"revolutionises\",\r\n  \"revolutionizing\": \"revolutionising\",\r\n  \"rhapsodize\": \"rhapsodise\",\r\n  \"rhapsodized\": \"rhapsodised\",\r\n  \"rhapsodizes\": \"rhapsodises\",\r\n  \"rhapsodizing\": \"rhapsodising\",\r\n  \"rigor\": \"rigour\",\r\n  \"rigors\": \"rigours\",\r\n  \"ritualized\": \"ritualised\",\r\n  \"rivaled\": \"rivalled\",\r\n  \"rivaling\": \"rivalling\",\r\n  \"romanticize\": \"romanticise\",\r\n  \"romanticized\": \"romanticised\",\r\n  \"romanticizes\": \"romanticises\",\r\n  \"romanticizing\": \"romanticising\",\r\n  \"rumor\": \"rumour\",\r\n  \"rumored\": \"rumoured\",\r\n  \"rumors\": \"rumours\",\r\n  \"saber\": \"sabre\",\r\n  \"sabers\": \"sabres\",\r\n  \"saltpeter\": \"saltpetre\",\r\n  \"sanitize\": \"sanitise\",\r\n  \"sanitized\": \"sanitised\",\r\n  \"sanitizes\": \"sanitises\",\r\n  \"sanitizing\": \"sanitising\",\r\n  \"satirize\": \"satirise\",\r\n  \"satirized\": \"satirised\",\r\n  \"satirizes\": \"satirises\",\r\n  \"satirizing\": \"satirising\",\r\n  \"savior\": \"saviour\",\r\n  \"saviors\": \"saviours\",\r\n  \"savor\": \"savour\",\r\n  \"savored\": \"savoured\",\r\n  \"savories\": \"savouries\",\r\n  \"savoring\": \"savouring\",\r\n  \"savors\": \"savours\",\r\n  \"savory\": \"savoury\",\r\n  \"scandalize\": \"scandalise\",\r\n  \"scandalized\": \"scandalised\",\r\n  \"scandalizes\": \"scandalises\",\r\n  \"scandalizing\": \"scandalising\",\r\n  \"skeptic\": \"sceptic\",\r\n  \"skeptical\": \"sceptical\",\r\n  \"skeptically\": \"sceptically\",\r\n  \"skepticism\": \"scepticism\",\r\n  \"skeptics\": \"sceptics\",\r\n  \"scepter\": \"sceptre\",\r\n  \"scepters\": \"sceptres\",\r\n  \"scrutinize\": \"scrutinise\",\r\n  \"scrutinized\": \"scrutinised\",\r\n  \"scrutinizes\": \"scrutinises\",\r\n  \"scrutinizing\": \"scrutinising\",\r\n  \"secularization\": \"secularisation\",\r\n  \"secularize\": \"secularise\",\r\n  \"secularized\": \"secularised\",\r\n  \"secularizes\": \"secularises\",\r\n  \"secularizing\": \"secularising\",\r\n  \"sensationalize\": \"sensationalise\",\r\n  \"sensationalized\": \"sensationalised\",\r\n  \"sensationalizes\": \"sensationalises\",\r\n  \"sensationalizing\": \"sensationalising\",\r\n  \"sensitize\": \"sensitise\",\r\n  \"sensitized\": \"sensitised\",\r\n  \"sensitizes\": \"sensitises\",\r\n  \"sensitizing\": \"sensitising\",\r\n  \"sentimentalize\": \"sentimentalise\",\r\n  \"sentimentalized\": \"sentimentalised\",\r\n  \"sentimentalizes\": \"sentimentalises\",\r\n  \"sentimentalizing\": \"sentimentalising\",\r\n  \"sepulcher\": \"sepulchre\",\r\n  \"sepulchers\": \"sepulchres\",\r\n  \"serialization\": \"serialisation\",\r\n  \"serializations\": \"serialisations\",\r\n  \"serialize\": \"serialise\",\r\n  \"serialized\": \"serialised\",\r\n  \"serializes\": \"serialises\",\r\n  \"serializing\": \"serialising\",\r\n  \"sermonize\": \"sermonise\",\r\n  \"sermonized\": \"sermonised\",\r\n  \"sermonizes\": \"sermonises\",\r\n  \"sermonizing\": \"sermonising\",\r\n  \"sheik\": \"sheikh\",\r\n  \"shoveled\": \"shovelled\",\r\n  \"shoveling\": \"shovelling\",\r\n  \"shriveled\": \"shrivelled\",\r\n  \"shriveling\": \"shrivelling\",\r\n  \"signalize\": \"signalise\",\r\n  \"signalized\": \"signalised\",\r\n  \"signalizes\": \"signalises\",\r\n  \"signalizing\": \"signalising\",\r\n  \"signaled\": \"signalled\",\r\n  \"signaling\": \"signalling\",\r\n  \"smolder\": \"smoulder\",\r\n  \"smoldered\": \"smouldered\",\r\n  \"smoldering\": \"smouldering\",\r\n  \"smolders\": \"smoulders\",\r\n  \"sniveled\": \"snivelled\",\r\n  \"sniveling\": \"snivelling\",\r\n  \"snorkeled\": \"snorkelled\",\r\n  \"snorkeling\": \"snorkelling\",\r\n  \"snowplow\": \"snowploughs\",\r\n  \"socialization\": \"socialisation\",\r\n  \"socialize\": \"socialise\",\r\n  \"socialized\": \"socialised\",\r\n  \"socializes\": \"socialises\",\r\n  \"socializing\": \"socialising\",\r\n  \"solemnize\": \"solemnise\",\r\n  \"solemnized\": \"solemnised\",\r\n  \"solemnizes\": \"solemnises\",\r\n  \"solemnizing\": \"solemnising\",\r\n  \"somber\": \"sombre\",\r\n  \"specialization\": \"specialisation\",\r\n  \"specializations\": \"specialisations\",\r\n  \"specialize\": \"specialise\",\r\n  \"specialized\": \"specialised\",\r\n  \"specializes\": \"specialises\",\r\n  \"specializing\": \"specialising\",\r\n  \"specter\": \"spectre\",\r\n  \"specters\": \"spectres\",\r\n  \"spiraled\": \"spiralled\",\r\n  \"spiraling\": \"spiralling\",\r\n  \"splendor\": \"splendour\",\r\n  \"splendors\": \"splendours\",\r\n  \"squirreled\": \"squirrelled\",\r\n  \"squirreling\": \"squirrelling\",\r\n  \"stabilization\": \"stabilisation\",\r\n  \"stabilize\": \"stabilise\",\r\n  \"stabilized\": \"stabilised\",\r\n  \"stabilizer\": \"stabiliser\",\r\n  \"stabilizers\": \"stabilisers\",\r\n  \"stabilizes\": \"stabilises\",\r\n  \"stabilizing\": \"stabilising\",\r\n  \"standardization\": \"standardisation\",\r\n  \"standardize\": \"standardise\",\r\n  \"standardized\": \"standardised\",\r\n  \"standardizes\": \"standardises\",\r\n  \"standardizing\": \"standardising\",\r\n  \"stenciled\": \"stencilled\",\r\n  \"stenciling\": \"stencilling\",\r\n  \"sterilization\": \"sterilisation\",\r\n  \"sterilizations\": \"sterilisations\",\r\n  \"sterilize\": \"sterilise\",\r\n  \"sterilized\": \"sterilised\",\r\n  \"sterilizer\": \"steriliser\",\r\n  \"sterilizers\": \"sterilisers\",\r\n  \"sterilizes\": \"sterilises\",\r\n  \"sterilizing\": \"sterilising\",\r\n  \"stigmatization\": \"stigmatisation\",\r\n  \"stigmatize\": \"stigmatise\",\r\n  \"stigmatized\": \"stigmatised\",\r\n  \"stigmatizes\": \"stigmatises\",\r\n  \"stigmatizing\": \"stigmatising\",\r\n  \"story\": \"storey\",\r\n  \"stories\": \"storeys\",\r\n  \"subsidization\": \"subsidisation\",\r\n  \"subsidize\": \"subsidise\",\r\n  \"subsidized\": \"subsidised\",\r\n  \"subsidizer\": \"subsidiser\",\r\n  \"subsidizers\": \"subsidisers\",\r\n  \"subsidizes\": \"subsidises\",\r\n  \"subsidizing\": \"subsidising\",\r\n  \"succor\": \"succour\",\r\n  \"succored\": \"succoured\",\r\n  \"succoring\": \"succouring\",\r\n  \"succors\": \"succours\",\r\n  \"sulfate\": \"sulphate\",\r\n  \"sulfates\": \"sulphates\",\r\n  \"sulfide\": \"sulphide\",\r\n  \"sulfides\": \"sulphides\",\r\n  \"sulfur\": \"sulphur\",\r\n  \"sulfurous\": \"sulphurous\",\r\n  \"summarize\": \"summarise\",\r\n  \"summarized\": \"summarised\",\r\n  \"summarizes\": \"summarises\",\r\n  \"summarizing\": \"summarising\",\r\n  \"swiveled\": \"swivelled\",\r\n  \"swiveling\": \"swivelling\",\r\n  \"symbolize\": \"symbolise\",\r\n  \"symbolized\": \"symbolised\",\r\n  \"symbolizes\": \"symbolises\",\r\n  \"symbolizing\": \"symbolising\",\r\n  \"sympathize\": \"sympathise\",\r\n  \"sympathized\": \"sympathised\",\r\n  \"sympathizer\": \"sympathiser\",\r\n  \"sympathizers\": \"sympathisers\",\r\n  \"sympathizes\": \"sympathises\",\r\n  \"sympathizing\": \"sympathising\",\r\n  \"synchronization\": \"synchronisation\",\r\n  \"synchronize\": \"synchronise\",\r\n  \"synchronized\": \"synchronised\",\r\n  \"synchronizes\": \"synchronises\",\r\n  \"synchronizing\": \"synchronising\",\r\n  \"synthesize\": \"synthesise\",\r\n  \"synthesized\": \"synthesised\",\r\n  \"synthesizer\": \"synthesiser\",\r\n  \"synthesizers\": \"synthesisers\",\r\n  \"synthesizes\": \"synthesises\",\r\n  \"synthesizing\": \"synthesising\",\r\n  \"siphon\": \"syphon\",\r\n  \"siphoned\": \"syphoned\",\r\n  \"siphoning\": \"syphoning\",\r\n  \"siphons\": \"syphons\",\r\n  \"systematization\": \"systematisation\",\r\n  \"systematize\": \"systematise\",\r\n  \"systematized\": \"systematised\",\r\n  \"systematizes\": \"systematises\",\r\n  \"systematizing\": \"systematising\",\r\n  \"tantalize\": \"tantalise\",\r\n  \"tantalized\": \"tantalised\",\r\n  \"tantalizes\": \"tantalises\",\r\n  \"tantalizing\": \"tantalising\",\r\n  \"tantalizingly\": \"tantalisingly\",\r\n  \"tasseled\": \"tasselled\",\r\n  \"technicolor\": \"technicolour\",\r\n  \"temporize\": \"temporise\",\r\n  \"temporized\": \"temporised\",\r\n  \"temporizes\": \"temporises\",\r\n  \"temporizing\": \"temporising\",\r\n  \"tenderize\": \"tenderise\",\r\n  \"tenderized\": \"tenderised\",\r\n  \"tenderizes\": \"tenderises\",\r\n  \"tenderizing\": \"tenderising\",\r\n  \"terrorize\": \"terrorise\",\r\n  \"terrorized\": \"terrorised\",\r\n  \"terrorizes\": \"terrorises\",\r\n  \"terrorizing\": \"terrorising\",\r\n  \"theater\": \"theatre\",\r\n  \"theatergoer\": \"theatregoer\",\r\n  \"theatergoers\": \"theatregoers\",\r\n  \"theaters\": \"theatres\",\r\n  \"theorize\": \"theorise\",\r\n  \"theorized\": \"theorised\",\r\n  \"theorizes\": \"theorises\",\r\n  \"theorizing\": \"theorising\",\r\n  \"ton\": \"tonne\",\r\n  \"tons\": \"tonnes\",\r\n  \"toweled\": \"towelled\",\r\n  \"toweling\": \"towelling\",\r\n  \"toxemia\": \"toxaemia\",\r\n  \"tranquilize\": \"tranquillize\",\r\n  \"tranquilized\": \"tranquillized\",\r\n  \"tranquilizer\": \"tranquillizer\",\r\n  \"tranquilizers\": \"tranquillizers\",\r\n  \"tranquilizes\": \"tranquillizes\",\r\n  \"tranquilizing\": \"tranquillizing\",\r\n  \"tranquility\": \"tranquilly\",\r\n  \"transistorized\": \"transistorised\",\r\n  \"traumatize\": \"traumatise\",\r\n  \"traumatized\": \"traumatised\",\r\n  \"traumatizes\": \"traumatises\",\r\n  \"traumatizing\": \"traumatising\",\r\n  \"traveled\": \"travelled\",\r\n  \"traveler\": \"traveller\",\r\n  \"travelers\": \"travellers\",\r\n  \"traveling\": \"travelling\",\r\n  \"travelog\": \"travelogue\",\r\n  \"travelogs\": \"travelogues\",\r\n  \"trialed\": \"trialled\",\r\n  \"trialing\": \"trialling\",\r\n  \"tricolor\": \"tricolour\",\r\n  \"tricolors\": \"tricolours\",\r\n  \"trivialize\": \"trivialise\",\r\n  \"trivialized\": \"trivialised\",\r\n  \"trivializes\": \"trivialises\",\r\n  \"trivializing\": \"trivialising\",\r\n  \"tumor\": \"tumour\",\r\n  \"tumors\": \"tumours\",\r\n  \"tunneled\": \"tunnelled\",\r\n  \"tunneling\": \"tunnelling\",\r\n  \"tyrannize\": \"tyrannise\",\r\n  \"tyrannized\": \"tyrannised\",\r\n  \"tyrannizes\": \"tyrannises\",\r\n  \"tyrannizing\": \"tyrannising\",\r\n  \"tire\": \"tyre\",\r\n  \"tires\": \"tyres\",\r\n  \"unauthorized\": \"unauthorised\",\r\n  \"uncivilized\": \"uncivilised\",\r\n  \"underutilized\": \"underutilised\",\r\n  \"unequaled\": \"unequalled\",\r\n  \"unfavorable\": \"unfavourable\",\r\n  \"unfavorably\": \"unfavourably\",\r\n  \"unionization\": \"unionisation\",\r\n  \"unionize\": \"unionise\",\r\n  \"unionized\": \"unionised\",\r\n  \"unionizes\": \"unionises\",\r\n  \"unionizing\": \"unionising\",\r\n  \"unorganized\": \"unorganised\",\r\n  \"unraveled\": \"unravelled\",\r\n  \"unraveling\": \"unravelling\",\r\n  \"unrecognizable\": \"unrecognisable\",\r\n  \"unrecognized\": \"unrecognised\",\r\n  \"unrivaled\": \"unrivalled\",\r\n  \"unsavory\": \"unsavoury\",\r\n  \"untrammeled\": \"untrammelled\",\r\n  \"urbanization\": \"urbanisation\",\r\n  \"urbanize\": \"urbanise\",\r\n  \"urbanized\": \"urbanised\",\r\n  \"urbanizes\": \"urbanises\",\r\n  \"urbanizing\": \"urbanising\",\r\n  \"utilizable\": \"utilisable\",\r\n  \"utilization\": \"utilisation\",\r\n  \"utilize\": \"utilise\",\r\n  \"utilized\": \"utilised\",\r\n  \"utilizes\": \"utilises\",\r\n  \"utilizing\": \"utilising\",\r\n  \"valor\": \"valour\",\r\n  \"vandalize\": \"vandalise\",\r\n  \"vandalized\": \"vandalised\",\r\n  \"vandalizes\": \"vandalises\",\r\n  \"vandalizing\": \"vandalising\",\r\n  \"vaporization\": \"vaporisation\",\r\n  \"vaporize\": \"vaporise\",\r\n  \"vaporized\": \"vaporised\",\r\n  \"vaporizes\": \"vaporises\",\r\n  \"vaporizing\": \"vaporising\",\r\n  \"vapor\": \"vapour\",\r\n  \"vapors\": \"vapours\",\r\n  \"verbalize\": \"verbalise\",\r\n  \"verbalized\": \"verbalised\",\r\n  \"verbalizes\": \"verbalises\",\r\n  \"verbalizing\": \"verbalising\",\r\n  \"victimization\": \"victimisation\",\r\n  \"victimize\": \"victimise\",\r\n  \"victimized\": \"victimised\",\r\n  \"victimizes\": \"victimises\",\r\n  \"victimizing\": \"victimising\",\r\n  \"videodisk\": \"videodisc\",\r\n  \"videodisks\": \"videodiscs\",\r\n  \"vigor\": \"vigour\",\r\n  \"visualization\": \"visualisation\",\r\n  \"visualizations\": \"visualisations\",\r\n  \"visualize\": \"visualise\",\r\n  \"visualized\": \"visualised\",\r\n  \"visualizes\": \"visualises\",\r\n  \"visualizing\": \"visualising\",\r\n  \"vocalization\": \"vocalisation\",\r\n  \"vocalizations\": \"vocalisations\",\r\n  \"vocalize\": \"vocalise\",\r\n  \"vocalized\": \"vocalised\",\r\n  \"vocalizes\": \"vocalises\",\r\n  \"vocalizing\": \"vocalising\",\r\n  \"vulcanized\": \"vulcanised\",\r\n  \"vulgarization\": \"vulgarisation\",\r\n  \"vulgarize\": \"vulgarise\",\r\n  \"vulgarized\": \"vulgarised\",\r\n  \"vulgarizes\": \"vulgarises\",\r\n  \"vulgarizing\": \"vulgarising\",\r\n  \"wagon\": \"waggon\",\r\n  \"wagons\": \"waggons\",\r\n  \"watercolor\": \"watercolour\",\r\n  \"watercolors\": \"watercolours\",\r\n  \"weaseled\": \"weaselled\",\r\n  \"weaseling\": \"weaselling\",\r\n  \"westernization\": \"westernisation\",\r\n  \"westernize\": \"westernise\",\r\n  \"westernized\": \"westernised\",\r\n  \"westernizes\": \"westernises\",\r\n  \"westernizing\": \"westernising\",\r\n  \"womanize\": \"womanise\",\r\n  \"womanized\": \"womanised\",\r\n  \"womanizer\": \"womaniser\",\r\n  \"womanizers\": \"womanisers\",\r\n  \"womanizes\": \"womanises\",\r\n  \"womanizing\": \"womanising\",\r\n  \"woolen\": \"woollen\",\r\n  \"woolens\": \"woollens\",\r\n  \"woolies\": \"woollies\",\r\n  \"wooly\": \"woolly\",\r\n  \"worshiped\": \"worshipped\",\r\n  \"worshiping\": \"worshipping\",\r\n  \"worshiper\": \"worshipper\",\r\n  \"yodeled\": \"yodelled\",\r\n  \"yodeling\": \"yodelling\",\r\n  \"yogurt\": \"yoghurt\",\r\n  \"yogurts\": \"yoghurts\"\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1689873206614
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\components\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"filename\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\components\\\\american-to-british-titles.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\american-to-british-titles.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\american-to-british-titles.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\american-to-british-titles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
        "sourceFileName": "american-to-british-titles.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  'mr.': 'mr',\n  'mrs.': 'mrs',\n  'ms.': 'ms',\n  'mx.': 'mx',\n  'dr.': 'dr',\n  'prof.': 'prof'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFtZXJpY2FuLXRvLWJyaXRpc2gtdGl0bGVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmLFNBQU8sSUFEUTtBQUVmLFVBQVEsS0FGTztBQUdmLFNBQU8sSUFIUTtBQUlmLFNBQU8sSUFKUTtBQUtmLFNBQU8sSUFMUTtBQU1mLFdBQVM7QUFOTSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhcmFhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxmcmVlY29kZWNhbXAtcHJvamVjdHNcXDdcXDUtYW1lcmljYW4tYnJpdGlzaC10cmFuc2xhdG9yXFxjb21wb25lbnRzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcclxuICAnbXIuJzogJ21yJyxcclxuICAnbXJzLic6ICdtcnMnLFxyXG4gICdtcy4nOiAnbXMnLFxyXG4gICdteC4nOiAnbXgnLFxyXG4gICdkci4nOiAnZHInLFxyXG4gICdwcm9mLic6ICdwcm9mJ1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "american-to-british-titles.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACf,SAAO,IADQ;AAEf,UAAQ,KAFO;AAGf,SAAO,IAHQ;AAIf,SAAO,IAJQ;AAKf,SAAO,IALQ;AAMf,WAAS;AANM,CAAjB",
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
      "sourcesContent": [
        "module.exports = {\r\n  'mr.': 'mr',\r\n  'mrs.': 'mrs',\r\n  'ms.': 'ms',\r\n  'mx.': 'mx',\r\n  'dr.': 'dr',\r\n  'prof.': 'prof'\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1689873206614
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\components\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"filename\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\\\\components\\\\british-only.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\raraa\\\\OneDrive\\\\Documents\\\\freecodecamp-projects\\\\7\\\\5-american-british-translator\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\british-only.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\british-only.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\british-only.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
        "sourceFileName": "british-only.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  abseil: \"rappel\",\n  accountancy: \"accounting\",\n  advert: \"advertisement\",\n  \"agony column\": \"advice column\",\n  answerphone: \"answering machine\",\n  \"anti-clockwise\": \"counterclockwise\",\n  \"approved school\": \"juvie\",\n  artic: \"semi\",\n  \"athletics meeting\": \"track meet\",\n  aubergine: \"eggplant\",\n  autocue: \"teleprompter\",\n  \"bank holiday\": \"public holiday\",\n  barmy: \"balmy\",\n  biccie: \"cookie\",\n  bicky: \"cookie\",\n  bikky: \"cookie\",\n  biro: \"ballpoint pen\",\n  \"bits and bobs\": \"odds and ends\",\n  \"black pudding\": \"blood sausage\",\n  bloke: \"guy\",\n  blower: \"telephone\",\n  boffin: \"an expert\",\n  \"bog roll\": \"roll of toilet paper\",\n  \"bog-standard\": \"garden-variety\",\n  \"boiled sweet\": \"hard candy\",\n  \"bone-idle\": \"lazy\",\n  brekkie: \"breakfast\",\n  brekky: \"breakfast\",\n  breve: \"double whole note\",\n  brolly: \"umbrella\",\n  \"building society\": \"savings and loan association\",\n  \"bum bag\": \"fanny pack\",\n  bunce: \"a windfall\",\n  \"bureau de change\": \"currency exchange\",\n  burgle: \"burglarize\",\n  \"by-election\": \"special election\",\n  cafetière: \"French press\",\n  cafetiere: \"French press\",\n  caff: \"café\",\n  cagoule: \"windbreaker\",\n  candidature: \"candidacy\",\n  \"candy floss\": \"cotton candy\",\n  \"car boot sale\": \"swap meet\",\n  \"car boot\": \"trunk\",\n  \"car hire\": \"car rental\",\n  \"car park\": \"parking lot\",\n  carer: \"caregiver\",\n  carriageway: \"lane\",\n  \"cash machine\": \"ATM\",\n  cashpoint: \"ATM\",\n  \"central reservation\": \"median strip\",\n  chancer: \"opportunist\",\n  \"chat up\": \"flirt\",\n  \"chatted up\": \"flirted\",\n  cheeky: \"impertinent\",\n  \"child-minder\": \"babysitter\",\n  chinwag: \"chat\",\n  chippy: \"fish-and-chip shop\",\n  \"chip shop\": \"fish-and-chip shop\",\n  chuffed: \"pleased\",\n  chunder: \"vomit\",\n  \"clapped out\": \"clapped out\",\n  cleg: \"horse fly\",\n  clingfilm: \"plastic wrap\",\n  \"cling-film\": \"plastic wrap\",\n  \"cling film\": \"plastic wrap\",\n  cobblers: \"shoe repairers\",\n  conservatoire: \"conservatory\",\n  \"cotton bud\": \"cotton swab\",\n  \"cotton wool\": \"cotton ball\",\n  counterfoil: \"stub\",\n  counterpane: \"bedspread\",\n  courgette: \"zucchini\",\n  crisps: \"potato chips\",\n  cuppa: \"cup of tea\",\n  \"current account\": \"checking account\",\n  daft: \"silly\",\n  dogsbody: \"grunt\",\n  dosh: \"dough\",\n  \"double first\": \"undergraduate degree\",\n  draper: \"dry goods\",\n  draughts: \"checkers\",\n  \"drawing pin\": \"thumbtack\",\n  \"drink-driving\": \"drunk driving\",\n  \"driving licence\": \"driver's license\",\n  \"dual carriageway\": \"divided highway\",\n  dustbin: \"trash can\",\n  dustman: \"garbage man\",\n  \"dustbin man\": \"garbage man\",\n  dustcart: \"garbage truck\",\n  earthed: \"grounded\",\n  elastoplast: \"bandage\",\n  \"electric fire\": \"space heater\",\n  \"engaged tone\": \"busy signal\",\n  \"estate agent\": \"real estate agent\",\n  \"estate car\": \"station wagon\",\n  \"extension lead\": \"extension cord\",\n  \"fancy a\": \"would you like a\",\n  \"fairy cake\": \"cupcake\",\n  \"fairy lights\": \"Christmas lights\",\n  \"fire brigade\": \"fire department\",\n  \"flight lieutenant\": \"captain\",\n  flypast: \"flyby\",\n  footie: \"soccer\",\n  freephone: \"toll-free number\",\n  funfair: \"carnival\",\n  gaol: \"jail\",\n  gherkin: \"pickle\",\n  \"group captain\": \"colonel\",\n  \"guard's van\": \"caboose\",\n  guv: \"governor\",\n  \"heath robinson device\": \"rube goldberg device\",\n  \"high street\": \"main street\",\n  \"hire purchase\": \"installment plan\",\n  \"hold-all\": \"duffel bag\",\n  holidaymaker: \"vacationer\",\n  hols: \"holidays\",\n  \"hot up\": \"heating up\",\n  \"ice lolly\": \"popsicle\",\n  \"identity parade\": \"police lineup\",\n  \"inverted commas\": \"quotation marks\",\n  invigilator: \"proctor\",\n  ironmongery: \"hardware store\",\n  \"jacket potato\": \"baked potato\",\n  jemmy: \"jimmy\",\n  jerrybuilt: \"jerry-rigged\",\n  \"jerry-built\": \"jerry-rigged\",\n  \"jumble sale\": \"rummage sale\",\n  \"jump leads\": \"jumper cables\",\n  \"kirby grip\": \"bobby pin\",\n  \"kitchen roll\": \"paper towels\",\n  \"knacker's yard\": \"junkyard\",\n  ladybird: \"ladybug\",\n  launderette: \"laundromat\",\n  lav: \"toilet\",\n  learnt: \"learned\",\n  loo: \"bathroom\",\n  lorry: \"truck\",\n  loudhailer: \"megaphone\",\n  maths: \"math\",\n  \"mole grips\": \"vise-grips\",\n  motorway: \"freeway\",\n  muppet: \"an incompetent or foolish person\",\n  nark: \"narc\",\n  nappy: \"daiper\",\n  \"nosy parker\": \"nosy\",\n  \"nosey parker\": \"nosy\",\n  \"number plate\": \"license plate\",\n  oap: \"senior citizen\",\n  \"off-licence\": \"liquor store\",\n  offie: \"liquor store\",\n  \"off-the-peg\": \"off-the-rack\",\n  \"oughtn't\": \"shouldn't\",\n  overleaf: \"reverse\",\n  owt: \"anything\",\n  pants: \"underwear\",\n  \"panda car\": \"police car\",\n  \"paper round\": \"paper route\",\n  paracetamol: \"Tylenol\",\n  pernickety: \"persnickety\",\n  petrol: \"gasoline\",\n  petrolhead: \"gearhead\",\n  \"phone box\": \"payphone\",\n  \"pillar box\": \"mailbox\",\n  \"pillar-box red\": \"fire engine red\",\n  plasterboard: \"drywall\",\n  plectrum: \"guitar pick\",\n  \"postal order\": \"money order\",\n  \"poste restante\": \"general delivery\",\n  postie: \"postman\",\n  \"pound shop\": \"dollar store\",\n  pram: \"stroller\",\n  perambulator: \"stroller\",\n  prang: \"fender bender\",\n  prat: \"idiot\",\n  \"press-up\": \"push-up\",\n  \"press-ups\": \"push-ups\",\n  \"pritt-stick\": \"glue stick\",\n  \"provisional licence\": \"learner's permit\",\n  \"provisional driving licence\": \"learner's permit\",\n  pub: \"bar\",\n  publican: \"landlord\",\n  \"punch-up\": \"a fistfight\",\n  pushchair: \"stroller\",\n  \"quieten down\": \"quiet down\",\n  rashers: \"bacon\",\n  recce: \"recon\",\n  \"reel of cotton\": \"spool of thread\",\n  sarky: \"snarky\",\n  sarnie: \"sandwich\",\n  sarny: \"sandwich\",\n  sannie: \"sandwich\",\n  \"sat nav\": \"GPS\",\n  \"self-raising flour\": \"self-rising flour\",\n  \"selling-out shop\": \"liquor store\",\n  sellotape: \"Scotch tape\",\n  \"shan't\": \"won't\",\n  \"shopping trolley\": \"shopping cart\",\n  skint: \"broke\",\n  \"skirting board\": \"baseboard\",\n  slaphead: \"bald man\",\n  \"sleeping partner\": \"silent partner\",\n  \"sleeping policeman\": \"speed bump\",\n  slippy: \"slippery\",\n  slowcoach: \"slowpoke\",\n  \"smart dress\": \"formal attire\",\n  snog: \"kiss\",\n  spawny: \"lucky\",\n  spiffing: \"spiffy\",\n  \"spot of tea\": \"cup of tea\",\n  squaddie: \"grunt\",\n  squidgy: \"squishy\",\n  stockist: \"dealer\",\n  \"sun cream\": \"sunscreen\",\n  \"suspender belt\": \"garter belt\",\n  \"swimming costume\": \"swimsuit\",\n  ta: \"thank you\",\n  takeaway: \"takeout\",\n  tannoy: \"public address system\",\n  \"tea towel\": \"dish towel\",\n  \"telephone kiosk\": \"phone booth\",\n  telly: \"television\",\n  \"ticket tout\": \"scalper\",\n  \"tipp-ex\": \"Wite-Out\",\n  \"tipping down\": \"raining hard\",\n  trainers: \"sneakers\",\n  \"transport cafe\": \"truckstop\",\n  trousers: \"pants\",\n  truncheon: \"nightstick\",\n  \"turf accountant\": \"bookie\",\n  \"turn-indicator\": \"turn signal\",\n  \"turn-ups\": \"cuffs\",\n  twee: \"cutesy\",\n  uni: \"college\",\n  upmarket: \"upscale\",\n  veg: \"vegetables\",\n  \"wage packet\": \"paycheck\",\n  \"washing-up liquid\": \"dish soap\",\n  wc: \"bathroom\",\n  windscreen: \"windshield\",\n  \"wing mirrors\": \"side mirrors\",\n  \"y-fronts\": \"briefs\",\n  \"zebra crossing\": \"crosswalk\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "british-only.js"
      ],
      "names": [
        "module",
        "exports",
        "abseil",
        "accountancy",
        "advert",
        "answerphone",
        "artic",
        "aubergine",
        "autocue",
        "barmy",
        "biccie",
        "bicky",
        "bikky",
        "biro",
        "bloke",
        "blower",
        "boffin",
        "brekkie",
        "brekky",
        "breve",
        "brolly",
        "bunce",
        "burgle",
        "cafetière",
        "cafetiere",
        "caff",
        "cagoule",
        "candidature",
        "carer",
        "carriageway",
        "cashpoint",
        "chancer",
        "cheeky",
        "chinwag",
        "chippy",
        "chuffed",
        "chunder",
        "cleg",
        "clingfilm",
        "cobblers",
        "conservatoire",
        "counterfoil",
        "counterpane",
        "courgette",
        "crisps",
        "cuppa",
        "daft",
        "dogsbody",
        "dosh",
        "draper",
        "draughts",
        "dustbin",
        "dustman",
        "dustcart",
        "earthed",
        "elastoplast",
        "flypast",
        "footie",
        "freephone",
        "funfair",
        "gaol",
        "gherkin",
        "guv",
        "holidaymaker",
        "hols",
        "invigilator",
        "ironmongery",
        "jemmy",
        "jerrybuilt",
        "ladybird",
        "launderette",
        "lav",
        "learnt",
        "loo",
        "lorry",
        "loudhailer",
        "maths",
        "motorway",
        "muppet",
        "nark",
        "nappy",
        "oap",
        "offie",
        "overleaf",
        "owt",
        "pants",
        "paracetamol",
        "pernickety",
        "petrol",
        "petrolhead",
        "plasterboard",
        "plectrum",
        "postie",
        "pram",
        "perambulator",
        "prang",
        "prat",
        "pub",
        "publican",
        "pushchair",
        "rashers",
        "recce",
        "sarky",
        "sarnie",
        "sarny",
        "sannie",
        "sellotape",
        "skint",
        "slaphead",
        "slippy",
        "slowcoach",
        "snog",
        "spawny",
        "spiffing",
        "squaddie",
        "squidgy",
        "stockist",
        "ta",
        "takeaway",
        "tannoy",
        "telly",
        "trainers",
        "trousers",
        "truncheon",
        "twee",
        "uni",
        "upmarket",
        "veg",
        "wc",
        "windscreen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\raraa\\OneDrive\\Documents\\freecodecamp-projects\\7\\5-american-british-translator\\components\\",
      "sourcesContent": [
        "module.exports = {\r\n  abseil: \"rappel\",\r\n  accountancy: \"accounting\",\r\n  advert: \"advertisement\",\r\n  \"agony column\": \"advice column\",\r\n  answerphone: \"answering machine\",\r\n  \"anti-clockwise\": \"counterclockwise\",\r\n  \"approved school\": \"juvie\",\r\n  artic: \"semi\",\r\n  \"athletics meeting\": \"track meet\",\r\n  aubergine: \"eggplant\",\r\n  autocue: \"teleprompter\",\r\n  \"bank holiday\": \"public holiday\",\r\n  barmy: \"balmy\",\r\n  biccie: \"cookie\",\r\n  bicky: \"cookie\",\r\n  bikky: \"cookie\",\r\n  biro: \"ballpoint pen\",\r\n  \"bits and bobs\": \"odds and ends\",\r\n  \"black pudding\": \"blood sausage\",\r\n  bloke: \"guy\",\r\n  blower: \"telephone\",\r\n  boffin: \"an expert\",\r\n  \"bog roll\": \"roll of toilet paper\",\r\n  \"bog-standard\": \"garden-variety\",\r\n  \"boiled sweet\": \"hard candy\",\r\n  \"bone-idle\": \"lazy\",\r\n  brekkie: \"breakfast\",\r\n  brekky: \"breakfast\",\r\n  breve: \"double whole note\",\r\n  brolly: \"umbrella\",\r\n  \"building society\": \"savings and loan association\",\r\n  \"bum bag\": \"fanny pack\",\r\n  bunce: \"a windfall\",\r\n  \"bureau de change\": \"currency exchange\",\r\n  burgle: \"burglarize\",\r\n  \"by-election\": \"special election\",\r\n  cafetière: \"French press\",\r\n  cafetiere: \"French press\",\r\n  caff: \"café\",\r\n  cagoule: \"windbreaker\",\r\n  candidature: \"candidacy\",\r\n  \"candy floss\": \"cotton candy\",\r\n  \"car boot sale\": \"swap meet\",\r\n  \"car boot\": \"trunk\",\r\n  \"car hire\": \"car rental\",\r\n  \"car park\": \"parking lot\",\r\n  carer: \"caregiver\",\r\n  carriageway: \"lane\",\r\n  \"cash machine\": \"ATM\",\r\n  cashpoint: \"ATM\",\r\n  \"central reservation\": \"median strip\",\r\n  chancer: \"opportunist\",\r\n  \"chat up\": \"flirt\",\r\n  \"chatted up\": \"flirted\",\r\n  cheeky: \"impertinent\",\r\n  \"child-minder\": \"babysitter\",\r\n  chinwag: \"chat\",\r\n  chippy: \"fish-and-chip shop\",\r\n  \"chip shop\": \"fish-and-chip shop\",\r\n  chuffed: \"pleased\",\r\n  chunder: \"vomit\",\r\n  \"clapped out\": \"clapped out\",\r\n  cleg: \"horse fly\",\r\n  clingfilm: \"plastic wrap\",\r\n  \"cling-film\": \"plastic wrap\",\r\n  \"cling film\": \"plastic wrap\",\r\n  cobblers: \"shoe repairers\",\r\n  conservatoire: \"conservatory\",\r\n  \"cotton bud\": \"cotton swab\",\r\n  \"cotton wool\": \"cotton ball\",\r\n  counterfoil: \"stub\",\r\n  counterpane: \"bedspread\",\r\n  courgette: \"zucchini\",\r\n  crisps: \"potato chips\",\r\n  cuppa: \"cup of tea\",\r\n  \"current account\": \"checking account\",\r\n  daft: \"silly\",\r\n  dogsbody: \"grunt\",\r\n  dosh: \"dough\",\r\n  \"double first\": \"undergraduate degree\",\r\n  draper: \"dry goods\",\r\n  draughts: \"checkers\",\r\n  \"drawing pin\": \"thumbtack\",\r\n  \"drink-driving\": \"drunk driving\",\r\n  \"driving licence\": \"driver's license\",\r\n  \"dual carriageway\": \"divided highway\",\r\n  dustbin: \"trash can\",\r\n  dustman: \"garbage man\",\r\n  \"dustbin man\": \"garbage man\",\r\n  dustcart: \"garbage truck\",\r\n  earthed: \"grounded\",\r\n  elastoplast: \"bandage\",\r\n  \"electric fire\": \"space heater\",\r\n  \"engaged tone\": \"busy signal\",\r\n  \"estate agent\": \"real estate agent\",\r\n  \"estate car\": \"station wagon\",\r\n  \"extension lead\": \"extension cord\",\r\n  \"fancy a\": \"would you like a\",\r\n  \"fairy cake\": \"cupcake\",\r\n  \"fairy lights\": \"Christmas lights\",\r\n  \"fire brigade\": \"fire department\",\r\n  \"flight lieutenant\": \"captain\",\r\n  flypast: \"flyby\",\r\n  footie: \"soccer\",\r\n  freephone: \"toll-free number\",\r\n  funfair: \"carnival\",\r\n  gaol: \"jail\",\r\n  gherkin: \"pickle\",\r\n  \"group captain\": \"colonel\",\r\n  \"guard's van\": \"caboose\",\r\n  guv: \"governor\",\r\n  \"heath robinson device\": \"rube goldberg device\",\r\n  \"high street\": \"main street\",\r\n  \"hire purchase\": \"installment plan\",\r\n  \"hold-all\": \"duffel bag\",\r\n  holidaymaker: \"vacationer\",\r\n  hols: \"holidays\",\r\n  \"hot up\": \"heating up\",\r\n  \"ice lolly\": \"popsicle\",\r\n  \"identity parade\": \"police lineup\",\r\n  \"inverted commas\": \"quotation marks\",\r\n  invigilator: \"proctor\",\r\n  ironmongery: \"hardware store\",\r\n  \"jacket potato\": \"baked potato\",\r\n  jemmy: \"jimmy\",\r\n  jerrybuilt: \"jerry-rigged\",\r\n  \"jerry-built\": \"jerry-rigged\",\r\n  \"jumble sale\": \"rummage sale\",\r\n  \"jump leads\": \"jumper cables\",\r\n  \"kirby grip\": \"bobby pin\",\r\n  \"kitchen roll\": \"paper towels\",\r\n  \"knacker's yard\": \"junkyard\",\r\n  ladybird: \"ladybug\",\r\n  launderette: \"laundromat\",\r\n  lav: \"toilet\",\r\n  learnt: \"learned\",\r\n  loo: \"bathroom\",\r\n  lorry: \"truck\",\r\n  loudhailer: \"megaphone\",\r\n  maths: \"math\",\r\n  \"mole grips\": \"vise-grips\",\r\n  motorway: \"freeway\",\r\n  muppet: \"an incompetent or foolish person\",\r\n  nark: \"narc\",\r\n  nappy: \"daiper\",\r\n  \"nosy parker\": \"nosy\",\r\n  \"nosey parker\": \"nosy\",\r\n  \"number plate\": \"license plate\",\r\n  oap: \"senior citizen\",\r\n  \"off-licence\": \"liquor store\",\r\n  offie: \"liquor store\",\r\n  \"off-the-peg\": \"off-the-rack\",\r\n  \"oughtn't\": \"shouldn't\",\r\n  overleaf: \"reverse\",\r\n  owt: \"anything\",\r\n  pants: \"underwear\",\r\n  \"panda car\": \"police car\",\r\n  \"paper round\": \"paper route\",\r\n  paracetamol: \"Tylenol\",\r\n  pernickety: \"persnickety\",\r\n  petrol: \"gasoline\",\r\n  petrolhead: \"gearhead\",\r\n  \"phone box\": \"payphone\",\r\n  \"pillar box\": \"mailbox\",\r\n  \"pillar-box red\": \"fire engine red\",\r\n  plasterboard: \"drywall\",\r\n  plectrum: \"guitar pick\",\r\n  \"postal order\": \"money order\",\r\n  \"poste restante\": \"general delivery\",\r\n  postie: \"postman\",\r\n  \"pound shop\": \"dollar store\",\r\n  pram: \"stroller\",\r\n  perambulator: \"stroller\",\r\n  prang: \"fender bender\",\r\n  prat: \"idiot\",\r\n  \"press-up\": \"push-up\",\r\n  \"press-ups\": \"push-ups\",\r\n  \"pritt-stick\": \"glue stick\",\r\n  \"provisional licence\": \"learner's permit\",\r\n  \"provisional driving licence\": \"learner's permit\",\r\n  pub: \"bar\",\r\n  publican: \"landlord\",\r\n  \"punch-up\": \"a fistfight\",\r\n  pushchair: \"stroller\",\r\n  \"quieten down\": \"quiet down\",\r\n  rashers: \"bacon\",\r\n  recce: \"recon\",\r\n  \"reel of cotton\": \"spool of thread\",\r\n  sarky: \"snarky\",\r\n  sarnie: \"sandwich\",\r\n  sarny: \"sandwich\",\r\n  sannie: \"sandwich\",\r\n  \"sat nav\": \"GPS\",\r\n  \"self-raising flour\": \"self-rising flour\",\r\n  \"selling-out shop\": \"liquor store\",\r\n  sellotape: \"Scotch tape\",\r\n  \"shan't\": \"won't\",\r\n  \"shopping trolley\": \"shopping cart\",\r\n  skint: \"broke\",\r\n  \"skirting board\": \"baseboard\",\r\n  slaphead: \"bald man\",\r\n  \"sleeping partner\": \"silent partner\",\r\n  \"sleeping policeman\": \"speed bump\",\r\n  slippy: \"slippery\",\r\n  slowcoach: \"slowpoke\",\r\n  \"smart dress\": \"formal attire\",\r\n  snog: \"kiss\",\r\n  spawny: \"lucky\",\r\n  spiffing: \"spiffy\",\r\n  \"spot of tea\": \"cup of tea\",\r\n  squaddie: \"grunt\",\r\n  squidgy: \"squishy\",\r\n  stockist: \"dealer\",\r\n  \"sun cream\": \"sunscreen\",\r\n  \"suspender belt\": \"garter belt\",\r\n  \"swimming costume\": \"swimsuit\",\r\n  ta: \"thank you\",\r\n  takeaway: \"takeout\",\r\n  tannoy: \"public address system\",\r\n  \"tea towel\": \"dish towel\",\r\n  \"telephone kiosk\": \"phone booth\",\r\n  telly: \"television\",\r\n  \"ticket tout\": \"scalper\",\r\n  \"tipp-ex\": \"Wite-Out\",\r\n  \"tipping down\": \"raining hard\",\r\n  trainers: \"sneakers\",\r\n  \"transport cafe\": \"truckstop\",\r\n  trousers: \"pants\",\r\n  truncheon: \"nightstick\",\r\n  \"turf accountant\": \"bookie\",\r\n  \"turn-indicator\": \"turn signal\",\r\n  \"turn-ups\": \"cuffs\",\r\n  twee: \"cutesy\",\r\n  uni: \"college\",\r\n  upmarket: \"upscale\",\r\n  veg: \"vegetables\",\r\n  \"wage packet\": \"paycheck\",\r\n  \"washing-up liquid\": \"dish soap\",\r\n  wc: \"bathroom\",\r\n  windscreen: \"windshield\",\r\n  \"wing mirrors\": \"side mirrors\",\r\n  \"y-fronts\": \"briefs\",\r\n  \"zebra crossing\": \"crosswalk\",\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1689873206614
  }
}